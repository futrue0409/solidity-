{
	"id": "748f244658b60f2cd5fac9adf2b4948a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"56_DEX/SimpleSwap.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.21;\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\ncontract SimpleSwap is ERC20{\r\n    //交易所提供的两种代币\r\n    IERC20 public token0;\r\n    IERC20 public token1;\r\n    //两种代币余额\r\n    uint public resvers0;\r\n    uint public resvers1;\r\n    //铸造代币事件  返还给流动性提供者\r\n    event Mint(address indexed sender,uint amount0,uint amount1);\r\n    //销毁\r\n    event Burn(address indexed sender,uint amount0,uint amount1);\r\n    //普通交易\r\n    event Swap(address indexed sender,uint amountIn,address tokenIn,uint amountOut,address tokenOut);\r\n    //设置两个代币\r\n    constructor(IERC20 _token0,IERC20 _token1) ERC20(\"SimpleSwap\", \"SS\") {\r\n        token0 = _token0;\r\n        token1 = _token1;\r\n    }\r\n    function min(uint x,uint y) internal pure returns(uint z) {\r\n        z = x > y ? y : x ;\r\n    } \r\n    function sqrt(uint y)  internal pure returns (uint z) {\r\n        if (y > 3) {\r\n            z = y;\r\n            uint x = (y / 2) + 1;\r\n            while (x < z) {\r\n                z = x;\r\n                x = ((y / x) + x) / 2;\r\n            } \r\n        }else if (y != 0) {\r\n            z = 1; \r\n        }\r\n    }\r\n    //添加流动性\r\n    function addLiquidity(uint amount0Desired,uint amount1Desired) public returns(uint liquidity) {\r\n        //用户给合约授权转账\r\n        token0.transferFrom(msg.sender, address(this), amount0Desired);\r\n        token1.transferFrom(msg.sender, address(this), amount1Desired);\r\n        uint _totalSupply = totalSupply();\r\n        //提供流动份额\r\n        if (_totalSupply == 0) {\r\n            liquidity = sqrt(amount0Desired*amount1Desired);\r\n        }else {\r\n            liquidity = min(amount0Desired * _totalSupply / resvers0, amount1Desired * _totalSupply / resvers1);\r\n        }\r\n        require(liquidity > 0);\r\n        resvers0 = token0.balanceOf(address(this));\r\n        resvers1 = token1.balanceOf(address(this));\r\n        _mint(msg.sender, liquidity);\r\n        emit Mint(msg.sender, amount0Desired, amount1Desired);\r\n    }\r\n    //移除流动性\r\n    function removeLiquidity(uint liquidity) external returns(uint amount0,uint amount1) {\r\n        uint balance0 = token0.balanceOf(address(this));\r\n        uint balance1 = token1.balanceOf(address(this));\r\n        uint _totalSupply = totalSupply();\r\n        //销毁流动份额\r\n        amount0 = liquidity * balance0 / _totalSupply;\r\n        amount1 = liquidity * balance1 / _totalSupply;\r\n        require(amount0 > 0 && amount1 >0);\r\n        _burn(msg.sender, liquidity);\r\n        token0.transfer(msg.sender, amount0); \r\n        token1.transfer(msg.sender, amount1);\r\n        resvers0 = token0.balanceOf(address(this));\r\n        resvers1 = token1.balanceOf(address(this));\r\n        emit Burn(msg.sender, amount0, amount1);\r\n    }\r\n    //假设用amountin数量的其中一种代币换取另一种代币 返回另一种代币的数量\r\n    function getAmountOut(uint amountIn,uint reserveIn,uint reserveOut) public pure returns(uint amountOut) {\r\n        require(amountIn > 0);\r\n        require(reserveIn > 0 && reserveOut > 0);\r\n        amountOut = amountIn * reserveOut / (reserveIn + amountIn);\r\n    }\r\n    function swap(uint amountIn,IERC20 tokenIn,uint amountOutMin) external returns(uint amountOut,IERC20 tokenOut) {\r\n        require(amountIn > 0);\r\n        require(tokenIn == token0 || tokenIn == token1);\r\n        uint balance0 = token0.balanceOf(address(this));\r\n        uint balance1 = token1.balanceOf(address(this));\r\n        if (tokenIn == token0) {\r\n            tokenOut = token1;\r\n            amountOut = getAmountOut(amountIn, balance0, balance1);\r\n            require(amountOut > amountOutMin);\r\n            tokenIn.transferFrom(msg.sender,address(this), amountIn);\r\n            tokenOut.transfer(msg.sender, amountOut);\r\n        }else {\r\n            tokenIn = token1;\r\n            amountOut = getAmountOut(amountIn, balance1, balance0);\r\n            require(amountOut > amountOutMin);\r\n            tokenIn.transferFrom(msg.sender, address(this), amountIn);\r\n            tokenOut.transfer(msg.sender, amountOut);\r\n        }\r\n        resvers0 = token0.balanceOf(address(this));\r\n        resvers1 = token1.balanceOf(address(this));\r\n        emit Swap(msg.sender, amountIn, address(tokenIn), amountOut, address(tokenOut));\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"56_DEX/SimpleSwap.sol": {
				"SimpleSwap": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract IERC20",
									"name": "_token0",
									"type": "address"
								},
								{
									"internalType": "contract IERC20",
									"name": "_token1",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "tokenOut",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Desired",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Desired",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "reserveOut",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "resvers0",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "resvers1",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountOutMin",
									"type": "uint256"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "contract IERC20",
									"name": "tokenOut",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"56_DEX/SimpleSwap.sol\":116:4368  contract SimpleSwap is ERC20{... */\n  mstore(0x40, 0x80)\n    /* \"56_DEX/SimpleSwap.sol\":675:806  constructor(IERC20 _token0,IERC20 _token1) ERC20(\"SimpleSwap\", \"SS\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0a\n  dup2\n  mstore\n  0x20\n  add\n  0x53696d706c655377617000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x02\n  dup2\n  mstore\n  0x20\n  add\n  0x5353000000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"56_DEX/SimpleSwap.sol\":764:771  _token0 */\n  dup2\n    /* \"56_DEX/SimpleSwap.sol\":755:761  token0 */\n  0x05\n  0x00\n    /* \"56_DEX/SimpleSwap.sol\":755:771  token0 = _token0 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"56_DEX/SimpleSwap.sol\":791:798  _token1 */\n  dup1\n    /* \"56_DEX/SimpleSwap.sol\":782:788  token1 */\n  0x06\n  0x00\n    /* \"56_DEX/SimpleSwap.sol\":782:798  token1 = _token1 */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"56_DEX/SimpleSwap.sol\":675:806  constructor(IERC20 _token0,IERC20 _token1) ERC20(\"SimpleSwap\", \"SS\") {... */\n  pop\n  pop\n    /* \"56_DEX/SimpleSwap.sol\":116:4368  contract SimpleSwap is ERC20{... */\n  jump(tag_11)\n    /* \"#utility.yul\":88:205   */\ntag_13:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_15:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_16:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_46\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_15\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:679   */\ntag_17:\n    /* \"#utility.yul\":620:627   */\n  0x00\n    /* \"#utility.yul\":649:673   */\n  tag_48\n    /* \"#utility.yul\":667:672   */\n  dup3\n    /* \"#utility.yul\":649:673   */\n  tag_16\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":638:673   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:679   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":685:837   */\ntag_18:\n    /* \"#utility.yul\":773:812   */\n  tag_50\n    /* \"#utility.yul\":806:811   */\n  dup2\n    /* \"#utility.yul\":773:812   */\n  tag_17\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":766:771   */\n  dup2\n    /* \"#utility.yul\":763:813   */\n  eq\n    /* \"#utility.yul\":753:831   */\n  tag_51\n  jumpi\n    /* \"#utility.yul\":827:828   */\n  0x00\n    /* \"#utility.yul\":824:825   */\n  dup1\n    /* \"#utility.yul\":817:829   */\n  revert\n    /* \"#utility.yul\":753:831   */\ntag_51:\n    /* \"#utility.yul\":685:837   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":843:1016   */\ntag_19:\n    /* \"#utility.yul\":915:920   */\n  0x00\n    /* \"#utility.yul\":946:952   */\n  dup2\n    /* \"#utility.yul\":940:953   */\n  mload\n    /* \"#utility.yul\":931:953   */\n  swap1\n  pop\n    /* \"#utility.yul\":962:1010   */\n  tag_53\n    /* \"#utility.yul\":1004:1009   */\n  dup2\n    /* \"#utility.yul\":962:1010   */\n  tag_18\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":843:1016   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1022:1589   */\ntag_3:\n    /* \"#utility.yul\":1131:1137   */\n  0x00\n    /* \"#utility.yul\":1139:1145   */\n  dup1\n    /* \"#utility.yul\":1188:1190   */\n  0x40\n    /* \"#utility.yul\":1176:1185   */\n  dup4\n    /* \"#utility.yul\":1167:1174   */\n  dup6\n    /* \"#utility.yul\":1163:1186   */\n  sub\n    /* \"#utility.yul\":1159:1191   */\n  slt\n    /* \"#utility.yul\":1156:1275   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":1194:1273   */\n  tag_56\n  tag_13\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1156:1275   */\ntag_55:\n    /* \"#utility.yul\":1314:1315   */\n  0x00\n    /* \"#utility.yul\":1339:1418   */\n  tag_57\n    /* \"#utility.yul\":1410:1417   */\n  dup6\n    /* \"#utility.yul\":1401:1407   */\n  dup3\n    /* \"#utility.yul\":1390:1399   */\n  dup7\n    /* \"#utility.yul\":1386:1408   */\n  add\n    /* \"#utility.yul\":1339:1418   */\n  tag_19\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1329:1418   */\n  swap3\n  pop\n    /* \"#utility.yul\":1285:1428   */\n  pop\n    /* \"#utility.yul\":1467:1469   */\n  0x20\n    /* \"#utility.yul\":1493:1572   */\n  tag_58\n    /* \"#utility.yul\":1564:1571   */\n  dup6\n    /* \"#utility.yul\":1555:1561   */\n  dup3\n    /* \"#utility.yul\":1544:1553   */\n  dup7\n    /* \"#utility.yul\":1540:1562   */\n  add\n    /* \"#utility.yul\":1493:1572   */\n  tag_19\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1483:1572   */\n  swap2\n  pop\n    /* \"#utility.yul\":1438:1582   */\n  pop\n    /* \"#utility.yul\":1022:1589   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1595:1694   */\ntag_20:\n    /* \"#utility.yul\":1647:1653   */\n  0x00\n    /* \"#utility.yul\":1681:1686   */\n  dup2\n    /* \"#utility.yul\":1675:1687   */\n  mload\n    /* \"#utility.yul\":1665:1687   */\n  swap1\n  pop\n    /* \"#utility.yul\":1595:1694   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1700:1880   */\ntag_21:\n    /* \"#utility.yul\":1748:1825   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1745:1746   */\n  0x00\n    /* \"#utility.yul\":1738:1826   */\n  mstore\n    /* \"#utility.yul\":1845:1849   */\n  0x41\n    /* \"#utility.yul\":1842:1843   */\n  0x04\n    /* \"#utility.yul\":1835:1850   */\n  mstore\n    /* \"#utility.yul\":1869:1873   */\n  0x24\n    /* \"#utility.yul\":1866:1867   */\n  0x00\n    /* \"#utility.yul\":1859:1874   */\n  revert\n    /* \"#utility.yul\":1886:2066   */\ntag_22:\n    /* \"#utility.yul\":1934:2011   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1931:1932   */\n  0x00\n    /* \"#utility.yul\":1924:2012   */\n  mstore\n    /* \"#utility.yul\":2031:2035   */\n  0x22\n    /* \"#utility.yul\":2028:2029   */\n  0x04\n    /* \"#utility.yul\":2021:2036   */\n  mstore\n    /* \"#utility.yul\":2055:2059   */\n  0x24\n    /* \"#utility.yul\":2052:2053   */\n  0x00\n    /* \"#utility.yul\":2045:2060   */\n  revert\n    /* \"#utility.yul\":2072:2392   */\ntag_23:\n    /* \"#utility.yul\":2116:2122   */\n  0x00\n    /* \"#utility.yul\":2153:2154   */\n  0x02\n    /* \"#utility.yul\":2147:2151   */\n  dup3\n    /* \"#utility.yul\":2143:2155   */\n  div\n    /* \"#utility.yul\":2133:2155   */\n  swap1\n  pop\n    /* \"#utility.yul\":2200:2201   */\n  0x01\n    /* \"#utility.yul\":2194:2198   */\n  dup3\n    /* \"#utility.yul\":2190:2202   */\n  and\n    /* \"#utility.yul\":2221:2239   */\n  dup1\n    /* \"#utility.yul\":2211:2292   */\n  tag_63\n  jumpi\n    /* \"#utility.yul\":2277:2281   */\n  0x7f\n    /* \"#utility.yul\":2269:2275   */\n  dup3\n    /* \"#utility.yul\":2265:2282   */\n  and\n    /* \"#utility.yul\":2255:2282   */\n  swap2\n  pop\n    /* \"#utility.yul\":2211:2292   */\ntag_63:\n    /* \"#utility.yul\":2339:2341   */\n  0x20\n    /* \"#utility.yul\":2331:2337   */\n  dup3\n    /* \"#utility.yul\":2328:2342   */\n  lt\n    /* \"#utility.yul\":2308:2326   */\n  dup2\n    /* \"#utility.yul\":2305:2343   */\n  sub\n    /* \"#utility.yul\":2302:2386   */\n  tag_64\n  jumpi\n    /* \"#utility.yul\":2358:2376   */\n  tag_65\n  tag_22\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2302:2386   */\ntag_64:\n    /* \"#utility.yul\":2123:2392   */\n  pop\n    /* \"#utility.yul\":2072:2392   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2398:2539   */\ntag_24:\n    /* \"#utility.yul\":2447:2451   */\n  0x00\n    /* \"#utility.yul\":2470:2473   */\n  dup2\n    /* \"#utility.yul\":2462:2473   */\n  swap1\n  pop\n    /* \"#utility.yul\":2493:2496   */\n  dup2\n    /* \"#utility.yul\":2490:2491   */\n  0x00\n    /* \"#utility.yul\":2483:2497   */\n  mstore\n    /* \"#utility.yul\":2527:2531   */\n  0x20\n    /* \"#utility.yul\":2524:2525   */\n  0x00\n    /* \"#utility.yul\":2514:2532   */\n  keccak256\n    /* \"#utility.yul\":2506:2532   */\n  swap1\n  pop\n    /* \"#utility.yul\":2398:2539   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2545:2638   */\ntag_25:\n    /* \"#utility.yul\":2582:2588   */\n  0x00\n    /* \"#utility.yul\":2629:2631   */\n  0x20\n    /* \"#utility.yul\":2624:2626   */\n  0x1f\n    /* \"#utility.yul\":2617:2622   */\n  dup4\n    /* \"#utility.yul\":2613:2627   */\n  add\n    /* \"#utility.yul\":2609:2632   */\n  div\n    /* \"#utility.yul\":2599:2632   */\n  swap1\n  pop\n    /* \"#utility.yul\":2545:2638   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2644:2751   */\ntag_26:\n    /* \"#utility.yul\":2688:2696   */\n  0x00\n    /* \"#utility.yul\":2738:2743   */\n  dup3\n    /* \"#utility.yul\":2732:2736   */\n  dup3\n    /* \"#utility.yul\":2728:2744   */\n  shl\n    /* \"#utility.yul\":2707:2744   */\n  swap1\n  pop\n    /* \"#utility.yul\":2644:2751   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2757:3150   */\ntag_27:\n    /* \"#utility.yul\":2826:2832   */\n  0x00\n    /* \"#utility.yul\":2876:2877   */\n  0x08\n    /* \"#utility.yul\":2864:2874   */\n  dup4\n    /* \"#utility.yul\":2860:2878   */\n  mul\n    /* \"#utility.yul\":2899:2996   */\n  tag_70\n    /* \"#utility.yul\":2929:2995   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2918:2927   */\n  dup3\n    /* \"#utility.yul\":2899:2996   */\n  tag_26\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":3017:3056   */\n  tag_71\n    /* \"#utility.yul\":3047:3055   */\n  dup7\n    /* \"#utility.yul\":3036:3045   */\n  dup4\n    /* \"#utility.yul\":3017:3056   */\n  tag_26\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":3005:3056   */\n  swap6\n  pop\n    /* \"#utility.yul\":3089:3093   */\n  dup1\n    /* \"#utility.yul\":3085:3094   */\n  not\n    /* \"#utility.yul\":3078:3083   */\n  dup5\n    /* \"#utility.yul\":3074:3095   */\n  and\n    /* \"#utility.yul\":3065:3095   */\n  swap4\n  pop\n    /* \"#utility.yul\":3138:3142   */\n  dup1\n    /* \"#utility.yul\":3128:3136   */\n  dup7\n    /* \"#utility.yul\":3124:3143   */\n  and\n    /* \"#utility.yul\":3117:3122   */\n  dup5\n    /* \"#utility.yul\":3114:3144   */\n  or\n    /* \"#utility.yul\":3104:3144   */\n  swap3\n  pop\n    /* \"#utility.yul\":2833:3150   */\n  pop\n  pop\n    /* \"#utility.yul\":2757:3150   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3156:3233   */\ntag_28:\n    /* \"#utility.yul\":3193:3200   */\n  0x00\n    /* \"#utility.yul\":3222:3227   */\n  dup2\n    /* \"#utility.yul\":3211:3227   */\n  swap1\n  pop\n    /* \"#utility.yul\":3156:3233   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3239:3299   */\ntag_29:\n    /* \"#utility.yul\":3267:3270   */\n  0x00\n    /* \"#utility.yul\":3288:3293   */\n  dup2\n    /* \"#utility.yul\":3281:3293   */\n  swap1\n  pop\n    /* \"#utility.yul\":3239:3299   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3305:3447   */\ntag_30:\n    /* \"#utility.yul\":3355:3364   */\n  0x00\n    /* \"#utility.yul\":3388:3441   */\n  tag_75\n    /* \"#utility.yul\":3406:3440   */\n  tag_76\n    /* \"#utility.yul\":3415:3439   */\n  tag_77\n    /* \"#utility.yul\":3433:3438   */\n  dup5\n    /* \"#utility.yul\":3415:3439   */\n  tag_28\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":3406:3440   */\n  tag_29\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3388:3441   */\n  tag_28\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3375:3441   */\n  swap1\n  pop\n    /* \"#utility.yul\":3305:3447   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3453:3528   */\ntag_31:\n    /* \"#utility.yul\":3496:3499   */\n  0x00\n    /* \"#utility.yul\":3517:3522   */\n  dup2\n    /* \"#utility.yul\":3510:3522   */\n  swap1\n  pop\n    /* \"#utility.yul\":3453:3528   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3534:3803   */\ntag_32:\n    /* \"#utility.yul\":3644:3683   */\n  tag_80\n    /* \"#utility.yul\":3675:3682   */\n  dup4\n    /* \"#utility.yul\":3644:3683   */\n  tag_30\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3705:3796   */\n  tag_81\n    /* \"#utility.yul\":3754:3795   */\n  tag_82\n    /* \"#utility.yul\":3778:3794   */\n  dup3\n    /* \"#utility.yul\":3754:3795   */\n  tag_31\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3746:3752   */\n  dup5\n    /* \"#utility.yul\":3739:3743   */\n  dup5\n    /* \"#utility.yul\":3733:3744   */\n  sload\n    /* \"#utility.yul\":3705:3796   */\n  tag_27\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3699:3703   */\n  dup3\n    /* \"#utility.yul\":3692:3797   */\n  sstore\n    /* \"#utility.yul\":3610:3803   */\n  pop\n    /* \"#utility.yul\":3534:3803   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3809:3882   */\ntag_33:\n    /* \"#utility.yul\":3854:3857   */\n  0x00\n    /* \"#utility.yul\":3809:3882   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3888:4077   */\ntag_34:\n    /* \"#utility.yul\":3965:3997   */\n  tag_85\n  tag_33\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":4006:4071   */\n  tag_86\n    /* \"#utility.yul\":4064:4070   */\n  dup2\n    /* \"#utility.yul\":4056:4062   */\n  dup5\n    /* \"#utility.yul\":4050:4054   */\n  dup5\n    /* \"#utility.yul\":4006:4071   */\n  tag_32\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3941:4077   */\n  pop\n    /* \"#utility.yul\":3888:4077   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4083:4269   */\ntag_35:\n    /* \"#utility.yul\":4143:4263   */\ntag_88:\n    /* \"#utility.yul\":4160:4163   */\n  dup2\n    /* \"#utility.yul\":4153:4158   */\n  dup2\n    /* \"#utility.yul\":4150:4164   */\n  lt\n    /* \"#utility.yul\":4143:4263   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4214:4253   */\n  tag_91\n    /* \"#utility.yul\":4251:4252   */\n  0x00\n    /* \"#utility.yul\":4244:4249   */\n  dup3\n    /* \"#utility.yul\":4214:4253   */\n  tag_34\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4187:4188   */\n  0x01\n    /* \"#utility.yul\":4180:4185   */\n  dup2\n    /* \"#utility.yul\":4176:4189   */\n  add\n    /* \"#utility.yul\":4167:4189   */\n  swap1\n  pop\n    /* \"#utility.yul\":4143:4263   */\n  jump(tag_88)\ntag_90:\n    /* \"#utility.yul\":4083:4269   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4275:4818   */\ntag_36:\n    /* \"#utility.yul\":4376:4378   */\n  0x1f\n    /* \"#utility.yul\":4371:4374   */\n  dup3\n    /* \"#utility.yul\":4368:4379   */\n  gt\n    /* \"#utility.yul\":4365:4811   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":4410:4448   */\n  tag_94\n    /* \"#utility.yul\":4442:4447   */\n  dup2\n    /* \"#utility.yul\":4410:4448   */\n  tag_24\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4494:4523   */\n  tag_95\n    /* \"#utility.yul\":4512:4522   */\n  dup5\n    /* \"#utility.yul\":4494:4523   */\n  tag_25\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4484:4492   */\n  dup2\n    /* \"#utility.yul\":4480:4524   */\n  add\n    /* \"#utility.yul\":4677:4679   */\n  0x20\n    /* \"#utility.yul\":4665:4675   */\n  dup6\n    /* \"#utility.yul\":4662:4680   */\n  lt\n    /* \"#utility.yul\":4659:4708   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":4698:4706   */\n  dup2\n    /* \"#utility.yul\":4683:4706   */\n  swap1\n  pop\n    /* \"#utility.yul\":4659:4708   */\ntag_96:\n    /* \"#utility.yul\":4721:4801   */\n  tag_97\n    /* \"#utility.yul\":4777:4799   */\n  tag_98\n    /* \"#utility.yul\":4795:4798   */\n  dup6\n    /* \"#utility.yul\":4777:4799   */\n  tag_25\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":4767:4775   */\n  dup4\n    /* \"#utility.yul\":4763:4800   */\n  add\n    /* \"#utility.yul\":4750:4761   */\n  dup3\n    /* \"#utility.yul\":4721:4801   */\n  tag_35\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4380:4811   */\n  pop\n  pop\n    /* \"#utility.yul\":4365:4811   */\ntag_93:\n    /* \"#utility.yul\":4275:4818   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4824:4941   */\ntag_37:\n    /* \"#utility.yul\":4878:4886   */\n  0x00\n    /* \"#utility.yul\":4928:4933   */\n  dup3\n    /* \"#utility.yul\":4922:4926   */\n  dup3\n    /* \"#utility.yul\":4918:4934   */\n  shr\n    /* \"#utility.yul\":4897:4934   */\n  swap1\n  pop\n    /* \"#utility.yul\":4824:4941   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4947:5116   */\ntag_38:\n    /* \"#utility.yul\":4991:4997   */\n  0x00\n    /* \"#utility.yul\":5024:5075   */\n  tag_101\n    /* \"#utility.yul\":5072:5073   */\n  0x00\n    /* \"#utility.yul\":5068:5074   */\n  not\n    /* \"#utility.yul\":5060:5065   */\n  dup5\n    /* \"#utility.yul\":5057:5058   */\n  0x08\n    /* \"#utility.yul\":5053:5066   */\n  mul\n    /* \"#utility.yul\":5024:5075   */\n  tag_37\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5020:5076   */\n  not\n    /* \"#utility.yul\":5105:5109   */\n  dup1\n    /* \"#utility.yul\":5099:5103   */\n  dup4\n    /* \"#utility.yul\":5095:5110   */\n  and\n    /* \"#utility.yul\":5085:5110   */\n  swap2\n  pop\n    /* \"#utility.yul\":4998:5116   */\n  pop\n    /* \"#utility.yul\":4947:5116   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5121:5416   */\ntag_39:\n    /* \"#utility.yul\":5197:5201   */\n  0x00\n    /* \"#utility.yul\":5343:5372   */\n  tag_103\n    /* \"#utility.yul\":5368:5371   */\n  dup4\n    /* \"#utility.yul\":5362:5366   */\n  dup4\n    /* \"#utility.yul\":5343:5372   */\n  tag_38\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5335:5372   */\n  swap2\n  pop\n    /* \"#utility.yul\":5405:5408   */\n  dup3\n    /* \"#utility.yul\":5402:5403   */\n  0x02\n    /* \"#utility.yul\":5398:5409   */\n  mul\n    /* \"#utility.yul\":5392:5396   */\n  dup3\n    /* \"#utility.yul\":5389:5410   */\n  or\n    /* \"#utility.yul\":5381:5410   */\n  swap1\n  pop\n    /* \"#utility.yul\":5121:5416   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5421:6816   */\ntag_8:\n    /* \"#utility.yul\":5538:5575   */\n  tag_105\n    /* \"#utility.yul\":5571:5574   */\n  dup3\n    /* \"#utility.yul\":5538:5575   */\n  tag_20\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5640:5658   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5632:5638   */\n  dup2\n    /* \"#utility.yul\":5629:5659   */\n  gt\n    /* \"#utility.yul\":5626:5682   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":5662:5680   */\n  tag_107\n  tag_21\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5626:5682   */\ntag_106:\n    /* \"#utility.yul\":5706:5744   */\n  tag_108\n    /* \"#utility.yul\":5738:5742   */\n  dup3\n    /* \"#utility.yul\":5732:5743   */\n  sload\n    /* \"#utility.yul\":5706:5744   */\n  tag_23\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":5791:5858   */\n  tag_109\n    /* \"#utility.yul\":5851:5857   */\n  dup3\n    /* \"#utility.yul\":5843:5849   */\n  dup3\n    /* \"#utility.yul\":5837:5841   */\n  dup6\n    /* \"#utility.yul\":5791:5858   */\n  tag_36\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5885:5886   */\n  0x00\n    /* \"#utility.yul\":5909:5913   */\n  0x20\n    /* \"#utility.yul\":5896:5913   */\n  swap1\n  pop\n    /* \"#utility.yul\":5941:5943   */\n  0x1f\n    /* \"#utility.yul\":5933:5939   */\n  dup4\n    /* \"#utility.yul\":5930:5944   */\n  gt\n    /* \"#utility.yul\":5958:5959   */\n  0x01\n    /* \"#utility.yul\":5953:6571   */\n  dup2\n  eq\n  tag_111\n  jumpi\n    /* \"#utility.yul\":6615:6616   */\n  0x00\n    /* \"#utility.yul\":6632:6638   */\n  dup5\n    /* \"#utility.yul\":6629:6706   */\n  iszero\n  tag_112\n  jumpi\n    /* \"#utility.yul\":6681:6690   */\n  dup3\n    /* \"#utility.yul\":6676:6679   */\n  dup8\n    /* \"#utility.yul\":6672:6691   */\n  add\n    /* \"#utility.yul\":6666:6692   */\n  mload\n    /* \"#utility.yul\":6657:6692   */\n  swap1\n  pop\n    /* \"#utility.yul\":6629:6706   */\ntag_112:\n    /* \"#utility.yul\":6732:6799   */\n  tag_113\n    /* \"#utility.yul\":6792:6798   */\n  dup6\n    /* \"#utility.yul\":6785:6790   */\n  dup3\n    /* \"#utility.yul\":6732:6799   */\n  tag_39\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":6726:6730   */\n  dup7\n    /* \"#utility.yul\":6719:6800   */\n  sstore\n    /* \"#utility.yul\":6588:6810   */\n  pop\n    /* \"#utility.yul\":5923:6810   */\n  jump(tag_110)\n    /* \"#utility.yul\":5953:6571   */\ntag_111:\n    /* \"#utility.yul\":6005:6009   */\n  0x1f\n    /* \"#utility.yul\":6001:6010   */\n  not\n    /* \"#utility.yul\":5993:5999   */\n  dup5\n    /* \"#utility.yul\":5989:6011   */\n  and\n    /* \"#utility.yul\":6039:6076   */\n  tag_114\n    /* \"#utility.yul\":6071:6075   */\n  dup7\n    /* \"#utility.yul\":6039:6076   */\n  tag_24\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":6098:6099   */\n  0x00\n    /* \"#utility.yul\":6112:6320   */\ntag_115:\n    /* \"#utility.yul\":6126:6133   */\n  dup3\n    /* \"#utility.yul\":6123:6124   */\n  dup2\n    /* \"#utility.yul\":6120:6134   */\n  lt\n    /* \"#utility.yul\":6112:6320   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6205:6214   */\n  dup5\n    /* \"#utility.yul\":6200:6203   */\n  dup10\n    /* \"#utility.yul\":6196:6215   */\n  add\n    /* \"#utility.yul\":6190:6216   */\n  mload\n    /* \"#utility.yul\":6182:6188   */\n  dup3\n    /* \"#utility.yul\":6175:6217   */\n  sstore\n    /* \"#utility.yul\":6256:6257   */\n  0x01\n    /* \"#utility.yul\":6248:6254   */\n  dup3\n    /* \"#utility.yul\":6244:6258   */\n  add\n    /* \"#utility.yul\":6234:6258   */\n  swap2\n  pop\n    /* \"#utility.yul\":6303:6305   */\n  0x20\n    /* \"#utility.yul\":6292:6301   */\n  dup6\n    /* \"#utility.yul\":6288:6306   */\n  add\n    /* \"#utility.yul\":6275:6306   */\n  swap5\n  pop\n    /* \"#utility.yul\":6149:6153   */\n  0x20\n    /* \"#utility.yul\":6146:6147   */\n  dup2\n    /* \"#utility.yul\":6142:6154   */\n  add\n    /* \"#utility.yul\":6137:6154   */\n  swap1\n  pop\n    /* \"#utility.yul\":6112:6320   */\n  jump(tag_115)\ntag_117:\n    /* \"#utility.yul\":6348:6354   */\n  dup7\n    /* \"#utility.yul\":6339:6346   */\n  dup4\n    /* \"#utility.yul\":6336:6355   */\n  lt\n    /* \"#utility.yul\":6333:6512   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":6406:6415   */\n  dup5\n    /* \"#utility.yul\":6401:6404   */\n  dup10\n    /* \"#utility.yul\":6397:6416   */\n  add\n    /* \"#utility.yul\":6391:6417   */\n  mload\n    /* \"#utility.yul\":6449:6497   */\n  tag_119\n    /* \"#utility.yul\":6491:6495   */\n  0x1f\n    /* \"#utility.yul\":6483:6489   */\n  dup10\n    /* \"#utility.yul\":6479:6496   */\n  and\n    /* \"#utility.yul\":6468:6477   */\n  dup3\n    /* \"#utility.yul\":6449:6497   */\n  tag_38\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":6441:6447   */\n  dup4\n    /* \"#utility.yul\":6434:6498   */\n  sstore\n    /* \"#utility.yul\":6356:6512   */\n  pop\n    /* \"#utility.yul\":6333:6512   */\ntag_118:\n    /* \"#utility.yul\":6558:6559   */\n  0x01\n    /* \"#utility.yul\":6554:6555   */\n  0x02\n    /* \"#utility.yul\":6546:6552   */\n  dup9\n    /* \"#utility.yul\":6542:6556   */\n  mul\n    /* \"#utility.yul\":6538:6560   */\n  add\n    /* \"#utility.yul\":6532:6536   */\n  dup9\n    /* \"#utility.yul\":6525:6561   */\n  sstore\n    /* \"#utility.yul\":5960:6571   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5923:6810   */\ntag_110:\n  pop\n    /* \"#utility.yul\":5513:6816   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5421:6816   */\n  pop\n  pop\n  jump\t// out\n    /* \"56_DEX/SimpleSwap.sol\":116:4368  contract SimpleSwap is ERC20{... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"56_DEX/SimpleSwap.sol\":116:4368  contract SimpleSwap is ERC20{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4543c7cf\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x9cd441da\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x9cd441da\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xd21220a7\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf000ead9\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x4543c7cf\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9c8f9f23\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x18160ddd\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x43264349\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x054d50d4\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0dfe1681\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"56_DEX/SimpleSwap.sol\":2962:3226  function getAmountOut(uint amountIn,uint reserveIn,uint reserveOut) public pure returns(uint amountOut) {... */\n    tag_3:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      tag_36\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"56_DEX/SimpleSwap.sol\":189:209  IERC20 public token0 */\n    tag_6:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_9:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"56_DEX/SimpleSwap.sol\":3232:4365  function swap(uint amountIn,IERC20 tokenIn,uint amountOutMin) external returns(uint amountOut,IERC20 tokenOut) {... */\n    tag_10:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_59\n      swap3\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"56_DEX/SimpleSwap.sol\":269:289  uint public resvers0 */\n    tag_11:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_13:\n      tag_69\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"56_DEX/SimpleSwap.sol\":2122:2852  function removeLiquidity(uint liquidity) external returns(uint amount0,uint amount1) {... */\n    tag_14:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_76\n      swap3\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"56_DEX/SimpleSwap.sol\":1252:2093  function addLiquidity(uint amount0Desired,uint amount1Desired) public returns(uint liquidity) {... */\n    tag_15:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_16:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"56_DEX/SimpleSwap.sol\":216:236  IERC20 public token1 */\n    tag_17:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_18:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      tag_93\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_94\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"56_DEX/SimpleSwap.sol\":296:316  uint public resvers1 */\n    tag_19:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"56_DEX/SimpleSwap.sol\":2962:3226  function getAmountOut(uint amountIn,uint reserveIn,uint reserveOut) public pure returns(uint amountOut) {... */\n    tag_26:\n        /* \"56_DEX/SimpleSwap.sol\":3050:3064  uint amountOut */\n      0x00\n        /* \"56_DEX/SimpleSwap.sol\":3096:3097  0 */\n      dup1\n        /* \"56_DEX/SimpleSwap.sol\":3085:3093  amountIn */\n      dup5\n        /* \"56_DEX/SimpleSwap.sol\":3085:3097  amountIn > 0 */\n      gt\n        /* \"56_DEX/SimpleSwap.sol\":3077:3098  require(amountIn > 0) */\n      tag_99\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_99:\n        /* \"56_DEX/SimpleSwap.sol\":3129:3130  0 */\n      0x00\n        /* \"56_DEX/SimpleSwap.sol\":3117:3126  reserveIn */\n      dup4\n        /* \"56_DEX/SimpleSwap.sol\":3117:3130  reserveIn > 0 */\n      gt\n        /* \"56_DEX/SimpleSwap.sol\":3117:3148  reserveIn > 0 && reserveOut > 0 */\n      dup1\n      iszero\n      tag_100\n      jumpi\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":3147:3148  0 */\n      0x00\n        /* \"56_DEX/SimpleSwap.sol\":3134:3144  reserveOut */\n      dup3\n        /* \"56_DEX/SimpleSwap.sol\":3134:3148  reserveOut > 0 */\n      gt\n        /* \"56_DEX/SimpleSwap.sol\":3117:3148  reserveIn > 0 && reserveOut > 0 */\n    tag_100:\n        /* \"56_DEX/SimpleSwap.sol\":3109:3149  require(reserveIn > 0 && reserveOut > 0) */\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n        /* \"56_DEX/SimpleSwap.sol\":3209:3217  amountIn */\n      dup4\n        /* \"56_DEX/SimpleSwap.sol\":3197:3206  reserveIn */\n      dup4\n        /* \"56_DEX/SimpleSwap.sol\":3197:3217  reserveIn + amountIn */\n      tag_102\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n        /* \"56_DEX/SimpleSwap.sol\":3183:3193  reserveOut */\n      dup3\n        /* \"56_DEX/SimpleSwap.sol\":3172:3180  amountIn */\n      dup6\n        /* \"56_DEX/SimpleSwap.sol\":3172:3193  amountIn * reserveOut */\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n        /* \"56_DEX/SimpleSwap.sol\":3172:3218  amountIn * reserveOut / (reserveIn + amountIn) */\n      tag_106\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"56_DEX/SimpleSwap.sol\":3160:3218  amountOut = amountIn * reserveOut / (reserveIn + amountIn) */\n      swap1\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":2962:3226  function getAmountOut(uint amountIn,uint reserveIn,uint reserveOut) public pure returns(uint amountOut) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_109\n      swap1\n      tag_110\n      jump\t// in\n    tag_109:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_111\n      swap1\n      tag_110\n      jump\t// in\n    tag_111:\n      dup1\n      iszero\n      tag_112\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_113\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_112)\n    tag_113:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_114:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_114\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_112:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_36:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_116\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_116:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_118\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_119\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"56_DEX/SimpleSwap.sol\":189:209  IERC20 public token0 */\n    tag_40:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_122\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_122:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_123\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_124\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_125\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_52:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"56_DEX/SimpleSwap.sol\":3232:4365  function swap(uint amountIn,IERC20 tokenIn,uint amountOutMin) external returns(uint amountOut,IERC20 tokenOut) {... */\n    tag_58:\n        /* \"56_DEX/SimpleSwap.sol\":3311:3325  uint amountOut */\n      0x00\n        /* \"56_DEX/SimpleSwap.sol\":3326:3341  IERC20 tokenOut */\n      dup1\n        /* \"56_DEX/SimpleSwap.sol\":3373:3374  0 */\n      0x00\n        /* \"56_DEX/SimpleSwap.sol\":3362:3370  amountIn */\n      dup6\n        /* \"56_DEX/SimpleSwap.sol\":3362:3374  amountIn > 0 */\n      gt\n        /* \"56_DEX/SimpleSwap.sol\":3354:3375  require(amountIn > 0) */\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n        /* \"56_DEX/SimpleSwap.sol\":3405:3411  token0 */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"56_DEX/SimpleSwap.sol\":3394:3411  tokenIn == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"56_DEX/SimpleSwap.sol\":3394:3401  tokenIn */\n      dup5\n        /* \"56_DEX/SimpleSwap.sol\":3394:3411  tokenIn == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"56_DEX/SimpleSwap.sol\":3394:3432  tokenIn == token0 || tokenIn == token1 */\n      dup1\n      tag_130\n      jumpi\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":3426:3432  token1 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"56_DEX/SimpleSwap.sol\":3415:3432  tokenIn == token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"56_DEX/SimpleSwap.sol\":3415:3422  tokenIn */\n      dup5\n        /* \"56_DEX/SimpleSwap.sol\":3415:3432  tokenIn == token1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"56_DEX/SimpleSwap.sol\":3394:3432  tokenIn == token0 || tokenIn == token1 */\n    tag_130:\n        /* \"56_DEX/SimpleSwap.sol\":3386:3433  require(tokenIn == token0 || tokenIn == token1) */\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n        /* \"56_DEX/SimpleSwap.sol\":3444:3457  uint balance0 */\n      0x00\n        /* \"56_DEX/SimpleSwap.sol\":3460:3466  token0 */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"56_DEX/SimpleSwap.sol\":3460:3476  token0.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"56_DEX/SimpleSwap.sol\":3485:3489  this */\n      address\n        /* \"56_DEX/SimpleSwap.sol\":3460:3491  token0.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_132\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_132:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_135\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_135:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_136\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"56_DEX/SimpleSwap.sol\":3444:3491  uint balance0 = token0.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":3502:3515  uint balance1 */\n      0x00\n        /* \"56_DEX/SimpleSwap.sol\":3518:3524  token1 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"56_DEX/SimpleSwap.sol\":3518:3534  token1.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"56_DEX/SimpleSwap.sol\":3543:3547  this */\n      address\n        /* \"56_DEX/SimpleSwap.sol\":3518:3549  token1.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_138:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_140\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_140:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_141\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_141:\n        /* \"56_DEX/SimpleSwap.sol\":3502:3549  uint balance1 = token1.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":3575:3581  token0 */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"56_DEX/SimpleSwap.sol\":3564:3581  tokenIn == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"56_DEX/SimpleSwap.sol\":3564:3571  tokenIn */\n      dup7\n        /* \"56_DEX/SimpleSwap.sol\":3564:3581  tokenIn == token0 */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"56_DEX/SimpleSwap.sol\":3560:4162  if (tokenIn == token0) {... */\n      tag_142\n      jumpi\n        /* \"56_DEX/SimpleSwap.sol\":3609:3615  token1 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"56_DEX/SimpleSwap.sol\":3598:3615  tokenOut = token1 */\n      swap3\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":3642:3684  getAmountOut(amountIn, balance0, balance1) */\n      tag_143\n        /* \"56_DEX/SimpleSwap.sol\":3655:3663  amountIn */\n      dup8\n        /* \"56_DEX/SimpleSwap.sol\":3665:3673  balance0 */\n      dup4\n        /* \"56_DEX/SimpleSwap.sol\":3675:3683  balance1 */\n      dup4\n        /* \"56_DEX/SimpleSwap.sol\":3642:3654  getAmountOut */\n      tag_26\n        /* \"56_DEX/SimpleSwap.sol\":3642:3684  getAmountOut(amountIn, balance0, balance1) */\n      jump\t// in\n    tag_143:\n        /* \"56_DEX/SimpleSwap.sol\":3630:3684  amountOut = getAmountOut(amountIn, balance0, balance1) */\n      swap4\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":3719:3731  amountOutMin */\n      dup5\n        /* \"56_DEX/SimpleSwap.sol\":3707:3716  amountOut */\n      dup5\n        /* \"56_DEX/SimpleSwap.sol\":3707:3731  amountOut > amountOutMin */\n      gt\n        /* \"56_DEX/SimpleSwap.sol\":3699:3732  require(amountOut > amountOutMin) */\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n        /* \"56_DEX/SimpleSwap.sol\":3747:3754  tokenIn */\n      dup6\n        /* \"56_DEX/SimpleSwap.sol\":3747:3767  tokenIn.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"56_DEX/SimpleSwap.sol\":3768:3778  msg.sender */\n      caller\n        /* \"56_DEX/SimpleSwap.sol\":3787:3791  this */\n      address\n        /* \"56_DEX/SimpleSwap.sol\":3794:3802  amountIn */\n      dup11\n        /* \"56_DEX/SimpleSwap.sol\":3747:3803  tokenIn.transferFrom(msg.sender,address(this), amountIn) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_148\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_148:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_149\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":3818:3826  tokenOut */\n      dup3\n        /* \"56_DEX/SimpleSwap.sol\":3818:3835  tokenOut.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"56_DEX/SimpleSwap.sol\":3836:3846  msg.sender */\n      caller\n        /* \"56_DEX/SimpleSwap.sol\":3848:3857  amountOut */\n      dup7\n        /* \"56_DEX/SimpleSwap.sol\":3818:3858  tokenOut.transfer(msg.sender, amountOut) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_151\n      swap3\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_154\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_154:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_155\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_155:\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":3560:4162  if (tokenIn == token0) {... */\n      jump(tag_156)\n    tag_142:\n        /* \"56_DEX/SimpleSwap.sol\":3900:3906  token1 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"56_DEX/SimpleSwap.sol\":3890:3906  tokenIn = token1 */\n      swap6\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":3933:3975  getAmountOut(amountIn, balance1, balance0) */\n      tag_157\n        /* \"56_DEX/SimpleSwap.sol\":3946:3954  amountIn */\n      dup8\n        /* \"56_DEX/SimpleSwap.sol\":3956:3964  balance1 */\n      dup3\n        /* \"56_DEX/SimpleSwap.sol\":3966:3974  balance0 */\n      dup5\n        /* \"56_DEX/SimpleSwap.sol\":3933:3945  getAmountOut */\n      tag_26\n        /* \"56_DEX/SimpleSwap.sol\":3933:3975  getAmountOut(amountIn, balance1, balance0) */\n      jump\t// in\n    tag_157:\n        /* \"56_DEX/SimpleSwap.sol\":3921:3975  amountOut = getAmountOut(amountIn, balance1, balance0) */\n      swap4\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":4010:4022  amountOutMin */\n      dup5\n        /* \"56_DEX/SimpleSwap.sol\":3998:4007  amountOut */\n      dup5\n        /* \"56_DEX/SimpleSwap.sol\":3998:4022  amountOut > amountOutMin */\n      gt\n        /* \"56_DEX/SimpleSwap.sol\":3990:4023  require(amountOut > amountOutMin) */\n      tag_158\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_158:\n        /* \"56_DEX/SimpleSwap.sol\":4038:4045  tokenIn */\n      dup6\n        /* \"56_DEX/SimpleSwap.sol\":4038:4058  tokenIn.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"56_DEX/SimpleSwap.sol\":4059:4069  msg.sender */\n      caller\n        /* \"56_DEX/SimpleSwap.sol\":4079:4083  this */\n      address\n        /* \"56_DEX/SimpleSwap.sol\":4086:4094  amountIn */\n      dup11\n        /* \"56_DEX/SimpleSwap.sol\":4038:4095  tokenIn.transferFrom(msg.sender, address(this), amountIn) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_159:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_161\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_161:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_162\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_162:\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":4110:4118  tokenOut */\n      dup3\n        /* \"56_DEX/SimpleSwap.sol\":4110:4127  tokenOut.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"56_DEX/SimpleSwap.sol\":4128:4138  msg.sender */\n      caller\n        /* \"56_DEX/SimpleSwap.sol\":4140:4149  amountOut */\n      dup7\n        /* \"56_DEX/SimpleSwap.sol\":4110:4150  tokenOut.transfer(msg.sender, amountOut) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_163\n      swap3\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_163:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_165\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_165:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_166\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_166:\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":3560:4162  if (tokenIn == token0) {... */\n    tag_156:\n        /* \"56_DEX/SimpleSwap.sol\":4183:4189  token0 */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"56_DEX/SimpleSwap.sol\":4183:4199  token0.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"56_DEX/SimpleSwap.sol\":4208:4212  this */\n      address\n        /* \"56_DEX/SimpleSwap.sol\":4183:4214  token0.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_167:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_169\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_169:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_170\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_170:\n        /* \"56_DEX/SimpleSwap.sol\":4172:4180  resvers0 */\n      0x07\n        /* \"56_DEX/SimpleSwap.sol\":4172:4214  resvers0 = token0.balanceOf(address(this)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":4236:4242  token1 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"56_DEX/SimpleSwap.sol\":4236:4252  token1.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"56_DEX/SimpleSwap.sol\":4261:4265  this */\n      address\n        /* \"56_DEX/SimpleSwap.sol\":4236:4267  token1.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_171\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_171:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_173\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_173:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_174\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_174:\n        /* \"56_DEX/SimpleSwap.sol\":4225:4233  resvers1 */\n      0x08\n        /* \"56_DEX/SimpleSwap.sol\":4225:4267  resvers1 = token1.balanceOf(address(this)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":4288:4298  msg.sender */\n      caller\n        /* \"56_DEX/SimpleSwap.sol\":4283:4357  Swap(msg.sender, amountIn, address(tokenIn), amountOut, address(tokenOut)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x24043855bfbfea0ccea141e5a73d7116bf0bfe083ea900a791f4b407ff03e525\n        /* \"56_DEX/SimpleSwap.sol\":4300:4308  amountIn */\n      dup9\n        /* \"56_DEX/SimpleSwap.sol\":4318:4325  tokenIn */\n      dup9\n        /* \"56_DEX/SimpleSwap.sol\":4328:4337  amountOut */\n      dup8\n        /* \"56_DEX/SimpleSwap.sol\":4347:4355  tokenOut */\n      dup8\n        /* \"56_DEX/SimpleSwap.sol\":4283:4357  Swap(msg.sender, amountIn, address(tokenIn), amountOut, address(tokenOut)) */\n      mload(0x40)\n      tag_175\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"56_DEX/SimpleSwap.sol\":3343:4365  {... */\n      pop\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":3232:4365  function swap(uint amountIn,IERC20 tokenIn,uint amountOutMin) external returns(uint amountOut,IERC20 tokenOut) {... */\n      swap4\n      pop\n      swap4\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"56_DEX/SimpleSwap.sol\":269:289  uint public resvers0 */\n    tag_62:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_179\n      swap1\n      tag_110\n      jump\t// in\n    tag_179:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_180\n      swap1\n      tag_110\n      jump\t// in\n    tag_180:\n      dup1\n      iszero\n      tag_181\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_182\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_181)\n    tag_182:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_183:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_183\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_181:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"56_DEX/SimpleSwap.sol\":2122:2852  function removeLiquidity(uint liquidity) external returns(uint amount0,uint amount1) {... */\n    tag_75:\n        /* \"56_DEX/SimpleSwap.sol\":2180:2192  uint amount0 */\n      0x00\n        /* \"56_DEX/SimpleSwap.sol\":2193:2205  uint amount1 */\n      dup1\n        /* \"56_DEX/SimpleSwap.sol\":2218:2231  uint balance0 */\n      0x00\n        /* \"56_DEX/SimpleSwap.sol\":2234:2240  token0 */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"56_DEX/SimpleSwap.sol\":2234:2250  token0.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"56_DEX/SimpleSwap.sol\":2259:2263  this */\n      address\n        /* \"56_DEX/SimpleSwap.sol\":2234:2265  token0.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_185:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_187\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_187:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_188\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_188:\n        /* \"56_DEX/SimpleSwap.sol\":2218:2265  uint balance0 = token0.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":2276:2289  uint balance1 */\n      0x00\n        /* \"56_DEX/SimpleSwap.sol\":2292:2298  token1 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"56_DEX/SimpleSwap.sol\":2292:2308  token1.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"56_DEX/SimpleSwap.sol\":2317:2321  this */\n      address\n        /* \"56_DEX/SimpleSwap.sol\":2292:2323  token1.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_189\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_189:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_191\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_191:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_192\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_192:\n        /* \"56_DEX/SimpleSwap.sol\":2276:2323  uint balance1 = token1.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":2334:2351  uint _totalSupply */\n      0x00\n        /* \"56_DEX/SimpleSwap.sol\":2354:2367  totalSupply() */\n      tag_193\n        /* \"56_DEX/SimpleSwap.sol\":2354:2365  totalSupply */\n      tag_44\n        /* \"56_DEX/SimpleSwap.sol\":2354:2367  totalSupply() */\n      jump\t// in\n    tag_193:\n        /* \"56_DEX/SimpleSwap.sol\":2334:2367  uint _totalSupply = totalSupply() */\n      swap1\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":2441:2453  _totalSupply */\n      dup1\n        /* \"56_DEX/SimpleSwap.sol\":2430:2438  balance0 */\n      dup4\n        /* \"56_DEX/SimpleSwap.sol\":2418:2427  liquidity */\n      dup8\n        /* \"56_DEX/SimpleSwap.sol\":2418:2438  liquidity * balance0 */\n      tag_194\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_194:\n        /* \"56_DEX/SimpleSwap.sol\":2418:2453  liquidity * balance0 / _totalSupply */\n      tag_195\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_195:\n        /* \"56_DEX/SimpleSwap.sol\":2408:2453  amount0 = liquidity * balance0 / _totalSupply */\n      swap5\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":2497:2509  _totalSupply */\n      dup1\n        /* \"56_DEX/SimpleSwap.sol\":2486:2494  balance1 */\n      dup3\n        /* \"56_DEX/SimpleSwap.sol\":2474:2483  liquidity */\n      dup8\n        /* \"56_DEX/SimpleSwap.sol\":2474:2494  liquidity * balance1 */\n      tag_196\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_196:\n        /* \"56_DEX/SimpleSwap.sol\":2474:2509  liquidity * balance1 / _totalSupply */\n      tag_197\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_197:\n        /* \"56_DEX/SimpleSwap.sol\":2464:2509  amount1 = liquidity * balance1 / _totalSupply */\n      swap4\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":2538:2539  0 */\n      0x00\n        /* \"56_DEX/SimpleSwap.sol\":2528:2535  amount0 */\n      dup6\n        /* \"56_DEX/SimpleSwap.sol\":2528:2539  amount0 > 0 */\n      gt\n        /* \"56_DEX/SimpleSwap.sol\":2528:2553  amount0 > 0 && amount1 >0 */\n      dup1\n      iszero\n      tag_198\n      jumpi\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":2552:2553  0 */\n      0x00\n        /* \"56_DEX/SimpleSwap.sol\":2543:2550  amount1 */\n      dup5\n        /* \"56_DEX/SimpleSwap.sol\":2543:2553  amount1 >0 */\n      gt\n        /* \"56_DEX/SimpleSwap.sol\":2528:2553  amount0 > 0 && amount1 >0 */\n    tag_198:\n        /* \"56_DEX/SimpleSwap.sol\":2520:2554  require(amount0 > 0 && amount1 >0) */\n      tag_199\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_199:\n        /* \"56_DEX/SimpleSwap.sol\":2565:2593  _burn(msg.sender, liquidity) */\n      tag_200\n        /* \"56_DEX/SimpleSwap.sol\":2571:2581  msg.sender */\n      caller\n        /* \"56_DEX/SimpleSwap.sol\":2583:2592  liquidity */\n      dup8\n        /* \"56_DEX/SimpleSwap.sol\":2565:2570  _burn */\n      tag_201\n        /* \"56_DEX/SimpleSwap.sol\":2565:2593  _burn(msg.sender, liquidity) */\n      jump\t// in\n    tag_200:\n        /* \"56_DEX/SimpleSwap.sol\":2604:2610  token0 */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"56_DEX/SimpleSwap.sol\":2604:2619  token0.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"56_DEX/SimpleSwap.sol\":2620:2630  msg.sender */\n      caller\n        /* \"56_DEX/SimpleSwap.sol\":2632:2639  amount0 */\n      dup8\n        /* \"56_DEX/SimpleSwap.sol\":2604:2640  token0.transfer(msg.sender, amount0) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap3\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_202:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_204\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_204:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_205\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_205:\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":2652:2658  token1 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"56_DEX/SimpleSwap.sol\":2652:2667  token1.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"56_DEX/SimpleSwap.sol\":2668:2678  msg.sender */\n      caller\n        /* \"56_DEX/SimpleSwap.sol\":2680:2687  amount1 */\n      dup7\n        /* \"56_DEX/SimpleSwap.sol\":2652:2688  token1.transfer(msg.sender, amount1) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_206\n      swap3\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_206:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_208\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_208:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_209\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_209:\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":2710:2716  token0 */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"56_DEX/SimpleSwap.sol\":2710:2726  token0.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"56_DEX/SimpleSwap.sol\":2735:2739  this */\n      address\n        /* \"56_DEX/SimpleSwap.sol\":2710:2741  token0.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_210:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_212\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_212:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_213\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_213:\n        /* \"56_DEX/SimpleSwap.sol\":2699:2707  resvers0 */\n      0x07\n        /* \"56_DEX/SimpleSwap.sol\":2699:2741  resvers0 = token0.balanceOf(address(this)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":2763:2769  token1 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"56_DEX/SimpleSwap.sol\":2763:2779  token1.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"56_DEX/SimpleSwap.sol\":2788:2792  this */\n      address\n        /* \"56_DEX/SimpleSwap.sol\":2763:2794  token1.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_214:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_216\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_216:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_217\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_217:\n        /* \"56_DEX/SimpleSwap.sol\":2752:2760  resvers1 */\n      0x08\n        /* \"56_DEX/SimpleSwap.sol\":2752:2794  resvers1 = token1.balanceOf(address(this)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":2815:2825  msg.sender */\n      caller\n        /* \"56_DEX/SimpleSwap.sol\":2810:2844  Burn(msg.sender, amount0, amount1) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x49995e5dd6158cf69ad3e9777c46755a1a826a446c6416992167462dad033b2a\n        /* \"56_DEX/SimpleSwap.sol\":2827:2834  amount0 */\n      dup7\n        /* \"56_DEX/SimpleSwap.sol\":2836:2843  amount1 */\n      dup7\n        /* \"56_DEX/SimpleSwap.sol\":2810:2844  Burn(msg.sender, amount0, amount1) */\n      mload(0x40)\n      tag_218\n      swap3\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"56_DEX/SimpleSwap.sol\":2207:2852  {... */\n      pop\n      pop\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":2122:2852  function removeLiquidity(uint liquidity) external returns(uint amount0,uint amount1) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"56_DEX/SimpleSwap.sol\":1252:2093  function addLiquidity(uint amount0Desired,uint amount1Desired) public returns(uint liquidity) {... */\n    tag_81:\n        /* \"56_DEX/SimpleSwap.sol\":1330:1344  uint liquidity */\n      0x00\n        /* \"56_DEX/SimpleSwap.sol\":1396:1402  token0 */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"56_DEX/SimpleSwap.sol\":1396:1415  token0.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"56_DEX/SimpleSwap.sol\":1416:1426  msg.sender */\n      caller\n        /* \"56_DEX/SimpleSwap.sol\":1436:1440  this */\n      address\n        /* \"56_DEX/SimpleSwap.sol\":1443:1457  amount0Desired */\n      dup7\n        /* \"56_DEX/SimpleSwap.sol\":1396:1458  token0.transferFrom(msg.sender, address(this), amount0Desired) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_220\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_220:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_222\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_222:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_223\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_223:\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":1469:1475  token1 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"56_DEX/SimpleSwap.sol\":1469:1488  token1.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"56_DEX/SimpleSwap.sol\":1489:1499  msg.sender */\n      caller\n        /* \"56_DEX/SimpleSwap.sol\":1509:1513  this */\n      address\n        /* \"56_DEX/SimpleSwap.sol\":1516:1530  amount1Desired */\n      dup6\n        /* \"56_DEX/SimpleSwap.sol\":1469:1531  token1.transferFrom(msg.sender, address(this), amount1Desired) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_224\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_224:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_226\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_226:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_227\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_227:\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":1542:1559  uint _totalSupply */\n      0x00\n        /* \"56_DEX/SimpleSwap.sol\":1562:1575  totalSupply() */\n      tag_228\n        /* \"56_DEX/SimpleSwap.sol\":1562:1573  totalSupply */\n      tag_44\n        /* \"56_DEX/SimpleSwap.sol\":1562:1575  totalSupply() */\n      jump\t// in\n    tag_228:\n        /* \"56_DEX/SimpleSwap.sol\":1542:1575  uint _totalSupply = totalSupply() */\n      swap1\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":1636:1637  0 */\n      0x00\n        /* \"56_DEX/SimpleSwap.sol\":1620:1632  _totalSupply */\n      dup2\n        /* \"56_DEX/SimpleSwap.sol\":1620:1637  _totalSupply == 0 */\n      sub\n        /* \"56_DEX/SimpleSwap.sol\":1616:1844  if (_totalSupply == 0) {... */\n      tag_229\n      jumpi\n        /* \"56_DEX/SimpleSwap.sol\":1666:1701  sqrt(amount0Desired*amount1Desired) */\n      tag_230\n        /* \"56_DEX/SimpleSwap.sol\":1686:1700  amount1Desired */\n      dup4\n        /* \"56_DEX/SimpleSwap.sol\":1671:1685  amount0Desired */\n      dup6\n        /* \"56_DEX/SimpleSwap.sol\":1671:1700  amount0Desired*amount1Desired */\n      tag_231\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_231:\n        /* \"56_DEX/SimpleSwap.sol\":1666:1670  sqrt */\n      tag_232\n        /* \"56_DEX/SimpleSwap.sol\":1666:1701  sqrt(amount0Desired*amount1Desired) */\n      jump\t// in\n    tag_230:\n        /* \"56_DEX/SimpleSwap.sol\":1654:1701  liquidity = sqrt(amount0Desired*amount1Desired) */\n      swap2\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":1616:1844  if (_totalSupply == 0) {... */\n      jump(tag_233)\n    tag_229:\n        /* \"56_DEX/SimpleSwap.sol\":1745:1832  min(amount0Desired * _totalSupply / resvers0, amount1Desired * _totalSupply / resvers1) */\n      tag_234\n        /* \"56_DEX/SimpleSwap.sol\":1781:1789  resvers0 */\n      sload(0x07)\n        /* \"56_DEX/SimpleSwap.sol\":1766:1778  _totalSupply */\n      dup3\n        /* \"56_DEX/SimpleSwap.sol\":1749:1763  amount0Desired */\n      dup7\n        /* \"56_DEX/SimpleSwap.sol\":1749:1778  amount0Desired * _totalSupply */\n      tag_235\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_235:\n        /* \"56_DEX/SimpleSwap.sol\":1749:1789  amount0Desired * _totalSupply / resvers0 */\n      tag_236\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_236:\n        /* \"56_DEX/SimpleSwap.sol\":1823:1831  resvers1 */\n      sload(0x08)\n        /* \"56_DEX/SimpleSwap.sol\":1808:1820  _totalSupply */\n      dup4\n        /* \"56_DEX/SimpleSwap.sol\":1791:1805  amount1Desired */\n      dup7\n        /* \"56_DEX/SimpleSwap.sol\":1791:1820  amount1Desired * _totalSupply */\n      tag_237\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_237:\n        /* \"56_DEX/SimpleSwap.sol\":1791:1831  amount1Desired * _totalSupply / resvers1 */\n      tag_238\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_238:\n        /* \"56_DEX/SimpleSwap.sol\":1745:1748  min */\n      tag_239\n        /* \"56_DEX/SimpleSwap.sol\":1745:1832  min(amount0Desired * _totalSupply / resvers0, amount1Desired * _totalSupply / resvers1) */\n      jump\t// in\n    tag_234:\n        /* \"56_DEX/SimpleSwap.sol\":1733:1832  liquidity = min(amount0Desired * _totalSupply / resvers0, amount1Desired * _totalSupply / resvers1) */\n      swap2\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":1616:1844  if (_totalSupply == 0) {... */\n    tag_233:\n        /* \"56_DEX/SimpleSwap.sol\":1874:1875  0 */\n      0x00\n        /* \"56_DEX/SimpleSwap.sol\":1862:1871  liquidity */\n      dup3\n        /* \"56_DEX/SimpleSwap.sol\":1862:1875  liquidity > 0 */\n      gt\n        /* \"56_DEX/SimpleSwap.sol\":1854:1876  require(liquidity > 0) */\n      tag_240\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_240:\n        /* \"56_DEX/SimpleSwap.sol\":1898:1904  token0 */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"56_DEX/SimpleSwap.sol\":1898:1914  token0.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"56_DEX/SimpleSwap.sol\":1923:1927  this */\n      address\n        /* \"56_DEX/SimpleSwap.sol\":1898:1929  token0.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_241:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_243\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_243:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_244\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_244:\n        /* \"56_DEX/SimpleSwap.sol\":1887:1895  resvers0 */\n      0x07\n        /* \"56_DEX/SimpleSwap.sol\":1887:1929  resvers0 = token0.balanceOf(address(this)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":1951:1957  token1 */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"56_DEX/SimpleSwap.sol\":1951:1967  token1.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"56_DEX/SimpleSwap.sol\":1976:1980  this */\n      address\n        /* \"56_DEX/SimpleSwap.sol\":1951:1982  token1.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_245\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_245:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_247\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_247:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_248\n      swap2\n      swap1\n      tag_137\n      jump\t// in\n    tag_248:\n        /* \"56_DEX/SimpleSwap.sol\":1940:1948  resvers1 */\n      0x08\n        /* \"56_DEX/SimpleSwap.sol\":1940:1982  resvers1 = token1.balanceOf(address(this)) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":1993:2021  _mint(msg.sender, liquidity) */\n      tag_249\n        /* \"56_DEX/SimpleSwap.sol\":1999:2009  msg.sender */\n      caller\n        /* \"56_DEX/SimpleSwap.sol\":2011:2020  liquidity */\n      dup4\n        /* \"56_DEX/SimpleSwap.sol\":1993:1998  _mint */\n      tag_250\n        /* \"56_DEX/SimpleSwap.sol\":1993:2021  _mint(msg.sender, liquidity) */\n      jump\t// in\n    tag_249:\n        /* \"56_DEX/SimpleSwap.sol\":2042:2052  msg.sender */\n      caller\n        /* \"56_DEX/SimpleSwap.sol\":2037:2085  Mint(msg.sender, amount0Desired, amount1Desired) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\n        /* \"56_DEX/SimpleSwap.sol\":2054:2068  amount0Desired */\n      dup6\n        /* \"56_DEX/SimpleSwap.sol\":2070:2084  amount1Desired */\n      dup6\n        /* \"56_DEX/SimpleSwap.sol\":2037:2085  Mint(msg.sender, amount0Desired, amount1Desired) */\n      mload(0x40)\n      tag_251\n      swap3\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_251:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"56_DEX/SimpleSwap.sol\":1346:2093  {... */\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":1252:2093  function addLiquidity(uint amount0Desired,uint amount1Desired) public returns(uint liquidity) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_85:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_253\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_117\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_254\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_126\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"56_DEX/SimpleSwap.sol\":216:236  IERC20 public token1 */\n    tag_88:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_93:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"56_DEX/SimpleSwap.sol\":296:316  uint public resvers1 */\n    tag_96:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_258\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_259\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_261\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_93\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_262\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_263\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_265\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_263:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_266\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_259\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_262:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_126:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_268\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_269\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_269:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_270\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_271\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_272\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_273\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_201:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8336:8337  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8324  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_275\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_276\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_276:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_275:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_277\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_273\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n    tag_277:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"56_DEX/SimpleSwap.sol\":914:1223  function sqrt(uint y)  internal pure returns (uint z) {... */\n    tag_232:\n        /* \"56_DEX/SimpleSwap.sol\":960:966  uint z */\n      0x00\n        /* \"56_DEX/SimpleSwap.sol\":987:988  3 */\n      0x03\n        /* \"56_DEX/SimpleSwap.sol\":983:984  y */\n      dup3\n        /* \"56_DEX/SimpleSwap.sol\":983:988  y > 3 */\n      gt\n        /* \"56_DEX/SimpleSwap.sol\":979:1216  if (y > 3) {... */\n      iszero\n      tag_279\n      jumpi\n        /* \"56_DEX/SimpleSwap.sol\":1009:1010  y */\n      dup2\n        /* \"56_DEX/SimpleSwap.sol\":1005:1010  z = y */\n      swap1\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":1025:1031  uint x */\n      0x00\n        /* \"56_DEX/SimpleSwap.sol\":1044:1045  1 */\n      0x01\n        /* \"56_DEX/SimpleSwap.sol\":1039:1040  2 */\n      0x02\n        /* \"56_DEX/SimpleSwap.sol\":1035:1036  y */\n      dup5\n        /* \"56_DEX/SimpleSwap.sol\":1035:1040  y / 2 */\n      tag_280\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_280:\n        /* \"56_DEX/SimpleSwap.sol\":1034:1045  (y / 2) + 1 */\n      tag_281\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_281:\n        /* \"56_DEX/SimpleSwap.sol\":1025:1045  uint x = (y / 2) + 1 */\n      swap1\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":1060:1154  while (x < z) {... */\n    tag_282:\n        /* \"56_DEX/SimpleSwap.sol\":1071:1072  z */\n      dup2\n        /* \"56_DEX/SimpleSwap.sol\":1067:1068  x */\n      dup2\n        /* \"56_DEX/SimpleSwap.sol\":1067:1072  x < z */\n      lt\n        /* \"56_DEX/SimpleSwap.sol\":1060:1154  while (x < z) {... */\n      iszero\n      tag_283\n      jumpi\n        /* \"56_DEX/SimpleSwap.sol\":1097:1098  x */\n      dup1\n        /* \"56_DEX/SimpleSwap.sol\":1093:1098  z = x */\n      swap2\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":1137:1138  2 */\n      0x02\n        /* \"56_DEX/SimpleSwap.sol\":1132:1133  x */\n      dup2\n        /* \"56_DEX/SimpleSwap.sol\":1127:1128  x */\n      dup3\n        /* \"56_DEX/SimpleSwap.sol\":1123:1124  y */\n      dup6\n        /* \"56_DEX/SimpleSwap.sol\":1123:1128  y / x */\n      tag_284\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_284:\n        /* \"56_DEX/SimpleSwap.sol\":1122:1133  (y / x) + x */\n      tag_285\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_285:\n        /* \"56_DEX/SimpleSwap.sol\":1121:1138  ((y / x) + x) / 2 */\n      tag_286\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_286:\n        /* \"56_DEX/SimpleSwap.sol\":1117:1138  x = ((y / x) + x) / 2 */\n      swap1\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":1060:1154  while (x < z) {... */\n      jump(tag_282)\n    tag_283:\n        /* \"56_DEX/SimpleSwap.sol\":990:1166  {... */\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":979:1216  if (y > 3) {... */\n      jump(tag_287)\n    tag_279:\n        /* \"56_DEX/SimpleSwap.sol\":1180:1181  0 */\n      0x00\n        /* \"56_DEX/SimpleSwap.sol\":1175:1176  y */\n      dup3\n        /* \"56_DEX/SimpleSwap.sol\":1175:1181  y != 0 */\n      eq\n        /* \"56_DEX/SimpleSwap.sol\":1171:1216  if (y != 0) {... */\n      tag_288\n      jumpi\n        /* \"56_DEX/SimpleSwap.sol\":1202:1203  1 */\n      0x01\n        /* \"56_DEX/SimpleSwap.sol\":1198:1203  z = 1 */\n      swap1\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":1171:1216  if (y != 0) {... */\n    tag_288:\n        /* \"56_DEX/SimpleSwap.sol\":979:1216  if (y > 3) {... */\n    tag_287:\n        /* \"56_DEX/SimpleSwap.sol\":914:1223  function sqrt(uint y)  internal pure returns (uint z) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"56_DEX/SimpleSwap.sol\":812:907  function min(uint x,uint y) internal pure returns(uint z) {... */\n    tag_239:\n        /* \"56_DEX/SimpleSwap.sol\":862:868  uint z */\n      0x00\n        /* \"56_DEX/SimpleSwap.sol\":889:890  y */\n      dup2\n        /* \"56_DEX/SimpleSwap.sol\":885:886  x */\n      dup4\n        /* \"56_DEX/SimpleSwap.sol\":885:890  x > y */\n      gt\n        /* \"56_DEX/SimpleSwap.sol\":885:898  x > y ? y : x */\n      tag_290\n      jumpi\n        /* \"56_DEX/SimpleSwap.sol\":897:898  x */\n      dup3\n        /* \"56_DEX/SimpleSwap.sol\":885:898  x > y ? y : x */\n      jump(tag_291)\n    tag_290:\n        /* \"56_DEX/SimpleSwap.sol\":893:894  y */\n      dup2\n        /* \"56_DEX/SimpleSwap.sol\":885:898  x > y ? y : x */\n    tag_291:\n        /* \"56_DEX/SimpleSwap.sol\":881:898  z = x > y ? y : x */\n      swap1\n      pop\n        /* \"56_DEX/SimpleSwap.sol\":812:907  function min(uint x,uint y) internal pure returns(uint z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_250:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_293\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_294\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_294:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_293:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_295\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_273\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_295:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_297\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_298\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_299\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_300\n      swap2\n      swap1\n      tag_133\n      jump\t// in\n    tag_300:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_299:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_301\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_302\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_302:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_301:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_304\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_305\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_305:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_306)\n    tag_304:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_307\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_308\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_265\n      jump\t// in\n    tag_308:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_307:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_306:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_309\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_310)\n    tag_309:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_310:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_311\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_311:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_313:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_315:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_316:\n        /* \"#utility.yul\":490:514   */\n      tag_353\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_315\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_354\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_354:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_317:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_356\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_316\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1309   */\n    tag_25:\n        /* \"#utility.yul\":767:773   */\n      0x00\n        /* \"#utility.yul\":775:781   */\n      dup1\n        /* \"#utility.yul\":783:789   */\n      0x00\n        /* \"#utility.yul\":832:834   */\n      0x60\n        /* \"#utility.yul\":820:829   */\n      dup5\n        /* \"#utility.yul\":811:818   */\n      dup7\n        /* \"#utility.yul\":807:830   */\n      sub\n        /* \"#utility.yul\":803:835   */\n      slt\n        /* \"#utility.yul\":800:919   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":838:917   */\n      tag_359\n      tag_313\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":800:919   */\n    tag_358:\n        /* \"#utility.yul\":958:959   */\n      0x00\n        /* \"#utility.yul\":983:1036   */\n      tag_360\n        /* \"#utility.yul\":1028:1035   */\n      dup7\n        /* \"#utility.yul\":1019:1025   */\n      dup3\n        /* \"#utility.yul\":1008:1017   */\n      dup8\n        /* \"#utility.yul\":1004:1026   */\n      add\n        /* \"#utility.yul\":983:1036   */\n      tag_317\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":973:1036   */\n      swap4\n      pop\n        /* \"#utility.yul\":929:1046   */\n      pop\n        /* \"#utility.yul\":1085:1087   */\n      0x20\n        /* \"#utility.yul\":1111:1164   */\n      tag_361\n        /* \"#utility.yul\":1156:1163   */\n      dup7\n        /* \"#utility.yul\":1147:1153   */\n      dup3\n        /* \"#utility.yul\":1136:1145   */\n      dup8\n        /* \"#utility.yul\":1132:1154   */\n      add\n        /* \"#utility.yul\":1111:1164   */\n      tag_317\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":1101:1164   */\n      swap3\n      pop\n        /* \"#utility.yul\":1056:1174   */\n      pop\n        /* \"#utility.yul\":1213:1215   */\n      0x40\n        /* \"#utility.yul\":1239:1292   */\n      tag_362\n        /* \"#utility.yul\":1284:1291   */\n      dup7\n        /* \"#utility.yul\":1275:1281   */\n      dup3\n        /* \"#utility.yul\":1264:1273   */\n      dup8\n        /* \"#utility.yul\":1260:1282   */\n      add\n        /* \"#utility.yul\":1239:1292   */\n      tag_317\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":1229:1292   */\n      swap2\n      pop\n        /* \"#utility.yul\":1184:1302   */\n      pop\n        /* \"#utility.yul\":690:1309   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1315:1433   */\n    tag_318:\n        /* \"#utility.yul\":1402:1426   */\n      tag_364\n        /* \"#utility.yul\":1420:1425   */\n      dup2\n        /* \"#utility.yul\":1402:1426   */\n      tag_315\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":1397:1400   */\n      dup3\n        /* \"#utility.yul\":1390:1427   */\n      mstore\n        /* \"#utility.yul\":1315:1433   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1439:1661   */\n    tag_28:\n        /* \"#utility.yul\":1532:1536   */\n      0x00\n        /* \"#utility.yul\":1570:1572   */\n      0x20\n        /* \"#utility.yul\":1559:1568   */\n      dup3\n        /* \"#utility.yul\":1555:1573   */\n      add\n        /* \"#utility.yul\":1547:1573   */\n      swap1\n      pop\n        /* \"#utility.yul\":1583:1654   */\n      tag_366\n        /* \"#utility.yul\":1651:1652   */\n      0x00\n        /* \"#utility.yul\":1640:1649   */\n      dup4\n        /* \"#utility.yul\":1636:1653   */\n      add\n        /* \"#utility.yul\":1627:1633   */\n      dup5\n        /* \"#utility.yul\":1583:1654   */\n      tag_318\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":1439:1661   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1667:1766   */\n    tag_319:\n        /* \"#utility.yul\":1719:1725   */\n      0x00\n        /* \"#utility.yul\":1753:1758   */\n      dup2\n        /* \"#utility.yul\":1747:1759   */\n      mload\n        /* \"#utility.yul\":1737:1759   */\n      swap1\n      pop\n        /* \"#utility.yul\":1667:1766   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1772:1941   */\n    tag_320:\n        /* \"#utility.yul\":1856:1867   */\n      0x00\n        /* \"#utility.yul\":1890:1896   */\n      dup3\n        /* \"#utility.yul\":1885:1888   */\n      dup3\n        /* \"#utility.yul\":1878:1897   */\n      mstore\n        /* \"#utility.yul\":1930:1934   */\n      0x20\n        /* \"#utility.yul\":1925:1928   */\n      dup3\n        /* \"#utility.yul\":1921:1935   */\n      add\n        /* \"#utility.yul\":1906:1935   */\n      swap1\n      pop\n        /* \"#utility.yul\":1772:1941   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1947:2086   */\n    tag_321:\n        /* \"#utility.yul\":2036:2042   */\n      dup3\n        /* \"#utility.yul\":2031:2034   */\n      dup2\n        /* \"#utility.yul\":2026:2029   */\n      dup4\n        /* \"#utility.yul\":2020:2043   */\n      mcopy\n        /* \"#utility.yul\":2077:2078   */\n      0x00\n        /* \"#utility.yul\":2068:2074   */\n      dup4\n        /* \"#utility.yul\":2063:2066   */\n      dup4\n        /* \"#utility.yul\":2059:2075   */\n      add\n        /* \"#utility.yul\":2052:2079   */\n      mstore\n        /* \"#utility.yul\":1947:2086   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2092:2194   */\n    tag_322:\n        /* \"#utility.yul\":2133:2139   */\n      0x00\n        /* \"#utility.yul\":2184:2186   */\n      0x1f\n        /* \"#utility.yul\":2180:2187   */\n      not\n        /* \"#utility.yul\":2175:2177   */\n      0x1f\n        /* \"#utility.yul\":2168:2173   */\n      dup4\n        /* \"#utility.yul\":2164:2178   */\n      add\n        /* \"#utility.yul\":2160:2188   */\n      and\n        /* \"#utility.yul\":2150:2188   */\n      swap1\n      pop\n        /* \"#utility.yul\":2092:2194   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2200:2577   */\n    tag_323:\n        /* \"#utility.yul\":2288:2291   */\n      0x00\n        /* \"#utility.yul\":2316:2355   */\n      tag_372\n        /* \"#utility.yul\":2349:2354   */\n      dup3\n        /* \"#utility.yul\":2316:2355   */\n      tag_319\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":2371:2442   */\n      tag_373\n        /* \"#utility.yul\":2435:2441   */\n      dup2\n        /* \"#utility.yul\":2430:2433   */\n      dup6\n        /* \"#utility.yul\":2371:2442   */\n      tag_320\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":2364:2442   */\n      swap4\n      pop\n        /* \"#utility.yul\":2451:2516   */\n      tag_374\n        /* \"#utility.yul\":2509:2515   */\n      dup2\n        /* \"#utility.yul\":2504:2507   */\n      dup6\n        /* \"#utility.yul\":2497:2501   */\n      0x20\n        /* \"#utility.yul\":2490:2495   */\n      dup7\n        /* \"#utility.yul\":2486:2502   */\n      add\n        /* \"#utility.yul\":2451:2516   */\n      tag_321\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":2541:2570   */\n      tag_375\n        /* \"#utility.yul\":2563:2569   */\n      dup2\n        /* \"#utility.yul\":2541:2570   */\n      tag_322\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":2536:2539   */\n      dup5\n        /* \"#utility.yul\":2532:2571   */\n      add\n        /* \"#utility.yul\":2525:2571   */\n      swap2\n      pop\n        /* \"#utility.yul\":2292:2577   */\n      pop\n        /* \"#utility.yul\":2200:2577   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2583:2896   */\n    tag_32:\n        /* \"#utility.yul\":2696:2700   */\n      0x00\n        /* \"#utility.yul\":2734:2736   */\n      0x20\n        /* \"#utility.yul\":2723:2732   */\n      dup3\n        /* \"#utility.yul\":2719:2737   */\n      add\n        /* \"#utility.yul\":2711:2737   */\n      swap1\n      pop\n        /* \"#utility.yul\":2783:2792   */\n      dup2\n        /* \"#utility.yul\":2777:2781   */\n      dup2\n        /* \"#utility.yul\":2773:2793   */\n      sub\n        /* \"#utility.yul\":2769:2770   */\n      0x00\n        /* \"#utility.yul\":2758:2767   */\n      dup4\n        /* \"#utility.yul\":2754:2771   */\n      add\n        /* \"#utility.yul\":2747:2794   */\n      mstore\n        /* \"#utility.yul\":2811:2889   */\n      tag_377\n        /* \"#utility.yul\":2884:2888   */\n      dup2\n        /* \"#utility.yul\":2875:2881   */\n      dup5\n        /* \"#utility.yul\":2811:2889   */\n      tag_323\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":2803:2889   */\n      swap1\n      pop\n        /* \"#utility.yul\":2583:2896   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2902:3028   */\n    tag_324:\n        /* \"#utility.yul\":2939:2946   */\n      0x00\n        /* \"#utility.yul\":2979:3021   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2972:2977   */\n      dup3\n        /* \"#utility.yul\":2968:3022   */\n      and\n        /* \"#utility.yul\":2957:3022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2902:3028   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3034:3130   */\n    tag_325:\n        /* \"#utility.yul\":3071:3078   */\n      0x00\n        /* \"#utility.yul\":3100:3124   */\n      tag_380\n        /* \"#utility.yul\":3118:3123   */\n      dup3\n        /* \"#utility.yul\":3100:3124   */\n      tag_324\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":3089:3124   */\n      swap1\n      pop\n        /* \"#utility.yul\":3034:3130   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3136:3258   */\n    tag_326:\n        /* \"#utility.yul\":3209:3233   */\n      tag_382\n        /* \"#utility.yul\":3227:3232   */\n      dup2\n        /* \"#utility.yul\":3209:3233   */\n      tag_325\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":3202:3207   */\n      dup2\n        /* \"#utility.yul\":3199:3234   */\n      eq\n        /* \"#utility.yul\":3189:3252   */\n      tag_383\n      jumpi\n        /* \"#utility.yul\":3248:3249   */\n      0x00\n        /* \"#utility.yul\":3245:3246   */\n      dup1\n        /* \"#utility.yul\":3238:3250   */\n      revert\n        /* \"#utility.yul\":3189:3252   */\n    tag_383:\n        /* \"#utility.yul\":3136:3258   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3264:3403   */\n    tag_327:\n        /* \"#utility.yul\":3310:3315   */\n      0x00\n        /* \"#utility.yul\":3348:3354   */\n      dup2\n        /* \"#utility.yul\":3335:3355   */\n      calldataload\n        /* \"#utility.yul\":3326:3355   */\n      swap1\n      pop\n        /* \"#utility.yul\":3364:3397   */\n      tag_385\n        /* \"#utility.yul\":3391:3396   */\n      dup2\n        /* \"#utility.yul\":3364:3397   */\n      tag_326\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":3264:3403   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3409:3883   */\n    tag_35:\n        /* \"#utility.yul\":3477:3483   */\n      0x00\n        /* \"#utility.yul\":3485:3491   */\n      dup1\n        /* \"#utility.yul\":3534:3536   */\n      0x40\n        /* \"#utility.yul\":3522:3531   */\n      dup4\n        /* \"#utility.yul\":3513:3520   */\n      dup6\n        /* \"#utility.yul\":3509:3532   */\n      sub\n        /* \"#utility.yul\":3505:3537   */\n      slt\n        /* \"#utility.yul\":3502:3621   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":3540:3619   */\n      tag_388\n      tag_313\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":3502:3621   */\n    tag_387:\n        /* \"#utility.yul\":3660:3661   */\n      0x00\n        /* \"#utility.yul\":3685:3738   */\n      tag_389\n        /* \"#utility.yul\":3730:3737   */\n      dup6\n        /* \"#utility.yul\":3721:3727   */\n      dup3\n        /* \"#utility.yul\":3710:3719   */\n      dup7\n        /* \"#utility.yul\":3706:3728   */\n      add\n        /* \"#utility.yul\":3685:3738   */\n      tag_327\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":3675:3738   */\n      swap3\n      pop\n        /* \"#utility.yul\":3631:3748   */\n      pop\n        /* \"#utility.yul\":3787:3789   */\n      0x20\n        /* \"#utility.yul\":3813:3866   */\n      tag_390\n        /* \"#utility.yul\":3858:3865   */\n      dup6\n        /* \"#utility.yul\":3849:3855   */\n      dup3\n        /* \"#utility.yul\":3838:3847   */\n      dup7\n        /* \"#utility.yul\":3834:3856   */\n      add\n        /* \"#utility.yul\":3813:3866   */\n      tag_317\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":3803:3866   */\n      swap2\n      pop\n        /* \"#utility.yul\":3758:3876   */\n      pop\n        /* \"#utility.yul\":3409:3883   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3889:3979   */\n    tag_328:\n        /* \"#utility.yul\":3923:3930   */\n      0x00\n        /* \"#utility.yul\":3966:3971   */\n      dup2\n        /* \"#utility.yul\":3959:3972   */\n      iszero\n        /* \"#utility.yul\":3952:3973   */\n      iszero\n        /* \"#utility.yul\":3941:3973   */\n      swap1\n      pop\n        /* \"#utility.yul\":3889:3979   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3985:4094   */\n    tag_329:\n        /* \"#utility.yul\":4066:4087   */\n      tag_393\n        /* \"#utility.yul\":4081:4086   */\n      dup2\n        /* \"#utility.yul\":4066:4087   */\n      tag_328\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":4061:4064   */\n      dup3\n        /* \"#utility.yul\":4054:4088   */\n      mstore\n        /* \"#utility.yul\":3985:4094   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4100:4310   */\n    tag_38:\n        /* \"#utility.yul\":4187:4191   */\n      0x00\n        /* \"#utility.yul\":4225:4227   */\n      0x20\n        /* \"#utility.yul\":4214:4223   */\n      dup3\n        /* \"#utility.yul\":4210:4228   */\n      add\n        /* \"#utility.yul\":4202:4228   */\n      swap1\n      pop\n        /* \"#utility.yul\":4238:4303   */\n      tag_395\n        /* \"#utility.yul\":4300:4301   */\n      0x00\n        /* \"#utility.yul\":4289:4298   */\n      dup4\n        /* \"#utility.yul\":4285:4302   */\n      add\n        /* \"#utility.yul\":4276:4282   */\n      dup5\n        /* \"#utility.yul\":4238:4303   */\n      tag_329\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":4100:4310   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4316:4376   */\n    tag_330:\n        /* \"#utility.yul\":4344:4347   */\n      0x00\n        /* \"#utility.yul\":4365:4370   */\n      dup2\n        /* \"#utility.yul\":4358:4370   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4376   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4382:4524   */\n    tag_331:\n        /* \"#utility.yul\":4432:4441   */\n      0x00\n        /* \"#utility.yul\":4465:4518   */\n      tag_398\n        /* \"#utility.yul\":4483:4517   */\n      tag_399\n        /* \"#utility.yul\":4492:4516   */\n      tag_400\n        /* \"#utility.yul\":4510:4515   */\n      dup5\n        /* \"#utility.yul\":4492:4516   */\n      tag_324\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":4483:4517   */\n      tag_330\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":4465:4518   */\n      tag_324\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":4452:4518   */\n      swap1\n      pop\n        /* \"#utility.yul\":4382:4524   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4530:4656   */\n    tag_332:\n        /* \"#utility.yul\":4580:4589   */\n      0x00\n        /* \"#utility.yul\":4613:4650   */\n      tag_402\n        /* \"#utility.yul\":4644:4649   */\n      dup3\n        /* \"#utility.yul\":4613:4650   */\n      tag_331\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":4600:4650   */\n      swap1\n      pop\n        /* \"#utility.yul\":4530:4656   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4662:4803   */\n    tag_333:\n        /* \"#utility.yul\":4727:4736   */\n      0x00\n        /* \"#utility.yul\":4760:4797   */\n      tag_404\n        /* \"#utility.yul\":4791:4796   */\n      dup3\n        /* \"#utility.yul\":4760:4797   */\n      tag_332\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":4747:4797   */\n      swap1\n      pop\n        /* \"#utility.yul\":4662:4803   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4809:4970   */\n    tag_334:\n        /* \"#utility.yul\":4911:4963   */\n      tag_406\n        /* \"#utility.yul\":4957:4962   */\n      dup2\n        /* \"#utility.yul\":4911:4963   */\n      tag_333\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":4906:4909   */\n      dup3\n        /* \"#utility.yul\":4899:4964   */\n      mstore\n        /* \"#utility.yul\":4809:4970   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4976:5228   */\n    tag_42:\n        /* \"#utility.yul\":5084:5088   */\n      0x00\n        /* \"#utility.yul\":5122:5124   */\n      0x20\n        /* \"#utility.yul\":5111:5120   */\n      dup3\n        /* \"#utility.yul\":5107:5125   */\n      add\n        /* \"#utility.yul\":5099:5125   */\n      swap1\n      pop\n        /* \"#utility.yul\":5135:5221   */\n      tag_408\n        /* \"#utility.yul\":5218:5219   */\n      0x00\n        /* \"#utility.yul\":5207:5216   */\n      dup4\n        /* \"#utility.yul\":5203:5220   */\n      add\n        /* \"#utility.yul\":5194:5200   */\n      dup5\n        /* \"#utility.yul\":5135:5221   */\n      tag_334\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":4976:5228   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5234:5853   */\n    tag_48:\n        /* \"#utility.yul\":5311:5317   */\n      0x00\n        /* \"#utility.yul\":5319:5325   */\n      dup1\n        /* \"#utility.yul\":5327:5333   */\n      0x00\n        /* \"#utility.yul\":5376:5378   */\n      0x60\n        /* \"#utility.yul\":5364:5373   */\n      dup5\n        /* \"#utility.yul\":5355:5362   */\n      dup7\n        /* \"#utility.yul\":5351:5374   */\n      sub\n        /* \"#utility.yul\":5347:5379   */\n      slt\n        /* \"#utility.yul\":5344:5463   */\n      iszero\n      tag_410\n      jumpi\n        /* \"#utility.yul\":5382:5461   */\n      tag_411\n      tag_313\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":5344:5463   */\n    tag_410:\n        /* \"#utility.yul\":5502:5503   */\n      0x00\n        /* \"#utility.yul\":5527:5580   */\n      tag_412\n        /* \"#utility.yul\":5572:5579   */\n      dup7\n        /* \"#utility.yul\":5563:5569   */\n      dup3\n        /* \"#utility.yul\":5552:5561   */\n      dup8\n        /* \"#utility.yul\":5548:5570   */\n      add\n        /* \"#utility.yul\":5527:5580   */\n      tag_327\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":5517:5580   */\n      swap4\n      pop\n        /* \"#utility.yul\":5473:5590   */\n      pop\n        /* \"#utility.yul\":5629:5631   */\n      0x20\n        /* \"#utility.yul\":5655:5708   */\n      tag_413\n        /* \"#utility.yul\":5700:5707   */\n      dup7\n        /* \"#utility.yul\":5691:5697   */\n      dup3\n        /* \"#utility.yul\":5680:5689   */\n      dup8\n        /* \"#utility.yul\":5676:5698   */\n      add\n        /* \"#utility.yul\":5655:5708   */\n      tag_327\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":5645:5708   */\n      swap3\n      pop\n        /* \"#utility.yul\":5600:5718   */\n      pop\n        /* \"#utility.yul\":5757:5759   */\n      0x40\n        /* \"#utility.yul\":5783:5836   */\n      tag_414\n        /* \"#utility.yul\":5828:5835   */\n      dup7\n        /* \"#utility.yul\":5819:5825   */\n      dup3\n        /* \"#utility.yul\":5808:5817   */\n      dup8\n        /* \"#utility.yul\":5804:5826   */\n      add\n        /* \"#utility.yul\":5783:5836   */\n      tag_317\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":5773:5836   */\n      swap2\n      pop\n        /* \"#utility.yul\":5728:5846   */\n      pop\n        /* \"#utility.yul\":5234:5853   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5859:5945   */\n    tag_335:\n        /* \"#utility.yul\":5894:5901   */\n      0x00\n        /* \"#utility.yul\":5934:5938   */\n      0xff\n        /* \"#utility.yul\":5927:5932   */\n      dup3\n        /* \"#utility.yul\":5923:5939   */\n      and\n        /* \"#utility.yul\":5912:5939   */\n      swap1\n      pop\n        /* \"#utility.yul\":5859:5945   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5951:6063   */\n    tag_336:\n        /* \"#utility.yul\":6034:6056   */\n      tag_417\n        /* \"#utility.yul\":6050:6055   */\n      dup2\n        /* \"#utility.yul\":6034:6056   */\n      tag_335\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":6029:6032   */\n      dup3\n        /* \"#utility.yul\":6022:6057   */\n      mstore\n        /* \"#utility.yul\":5951:6063   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6069:6283   */\n    tag_54:\n        /* \"#utility.yul\":6158:6162   */\n      0x00\n        /* \"#utility.yul\":6196:6198   */\n      0x20\n        /* \"#utility.yul\":6185:6194   */\n      dup3\n        /* \"#utility.yul\":6181:6199   */\n      add\n        /* \"#utility.yul\":6173:6199   */\n      swap1\n      pop\n        /* \"#utility.yul\":6209:6276   */\n      tag_419\n        /* \"#utility.yul\":6273:6274   */\n      0x00\n        /* \"#utility.yul\":6262:6271   */\n      dup4\n        /* \"#utility.yul\":6258:6275   */\n      add\n        /* \"#utility.yul\":6249:6255   */\n      dup5\n        /* \"#utility.yul\":6209:6276   */\n      tag_336\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":6069:6283   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6289:6400   */\n    tag_337:\n        /* \"#utility.yul\":6341:6348   */\n      0x00\n        /* \"#utility.yul\":6370:6394   */\n      tag_421\n        /* \"#utility.yul\":6388:6393   */\n      dup3\n        /* \"#utility.yul\":6370:6394   */\n      tag_325\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":6359:6394   */\n      swap1\n      pop\n        /* \"#utility.yul\":6289:6400   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6406:6558   */\n    tag_338:\n        /* \"#utility.yul\":6494:6533   */\n      tag_423\n        /* \"#utility.yul\":6527:6532   */\n      dup2\n        /* \"#utility.yul\":6494:6533   */\n      tag_337\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":6487:6492   */\n      dup2\n        /* \"#utility.yul\":6484:6534   */\n      eq\n        /* \"#utility.yul\":6474:6552   */\n      tag_424\n      jumpi\n        /* \"#utility.yul\":6548:6549   */\n      0x00\n        /* \"#utility.yul\":6545:6546   */\n      dup1\n        /* \"#utility.yul\":6538:6550   */\n      revert\n        /* \"#utility.yul\":6474:6552   */\n    tag_424:\n        /* \"#utility.yul\":6406:6558   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6564:6733   */\n    tag_339:\n        /* \"#utility.yul\":6625:6630   */\n      0x00\n        /* \"#utility.yul\":6663:6669   */\n      dup2\n        /* \"#utility.yul\":6650:6670   */\n      calldataload\n        /* \"#utility.yul\":6641:6670   */\n      swap1\n      pop\n        /* \"#utility.yul\":6679:6727   */\n      tag_426\n        /* \"#utility.yul\":6721:6726   */\n      dup2\n        /* \"#utility.yul\":6679:6727   */\n      tag_338\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":6564:6733   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6739:7388   */\n    tag_57:\n        /* \"#utility.yul\":6831:6837   */\n      0x00\n        /* \"#utility.yul\":6839:6845   */\n      dup1\n        /* \"#utility.yul\":6847:6853   */\n      0x00\n        /* \"#utility.yul\":6896:6898   */\n      0x60\n        /* \"#utility.yul\":6884:6893   */\n      dup5\n        /* \"#utility.yul\":6875:6882   */\n      dup7\n        /* \"#utility.yul\":6871:6894   */\n      sub\n        /* \"#utility.yul\":6867:6899   */\n      slt\n        /* \"#utility.yul\":6864:6983   */\n      iszero\n      tag_428\n      jumpi\n        /* \"#utility.yul\":6902:6981   */\n      tag_429\n      tag_313\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":6864:6983   */\n    tag_428:\n        /* \"#utility.yul\":7022:7023   */\n      0x00\n        /* \"#utility.yul\":7047:7100   */\n      tag_430\n        /* \"#utility.yul\":7092:7099   */\n      dup7\n        /* \"#utility.yul\":7083:7089   */\n      dup3\n        /* \"#utility.yul\":7072:7081   */\n      dup8\n        /* \"#utility.yul\":7068:7090   */\n      add\n        /* \"#utility.yul\":7047:7100   */\n      tag_317\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":7037:7100   */\n      swap4\n      pop\n        /* \"#utility.yul\":6993:7110   */\n      pop\n        /* \"#utility.yul\":7149:7151   */\n      0x20\n        /* \"#utility.yul\":7175:7243   */\n      tag_431\n        /* \"#utility.yul\":7235:7242   */\n      dup7\n        /* \"#utility.yul\":7226:7232   */\n      dup3\n        /* \"#utility.yul\":7215:7224   */\n      dup8\n        /* \"#utility.yul\":7211:7233   */\n      add\n        /* \"#utility.yul\":7175:7243   */\n      tag_339\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":7165:7243   */\n      swap3\n      pop\n        /* \"#utility.yul\":7120:7253   */\n      pop\n        /* \"#utility.yul\":7292:7294   */\n      0x40\n        /* \"#utility.yul\":7318:7371   */\n      tag_432\n        /* \"#utility.yul\":7363:7370   */\n      dup7\n        /* \"#utility.yul\":7354:7360   */\n      dup3\n        /* \"#utility.yul\":7343:7352   */\n      dup8\n        /* \"#utility.yul\":7339:7361   */\n      add\n        /* \"#utility.yul\":7318:7371   */\n      tag_317\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":7308:7371   */\n      swap2\n      pop\n        /* \"#utility.yul\":7263:7381   */\n      pop\n        /* \"#utility.yul\":6739:7388   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7394:7756   */\n    tag_60:\n        /* \"#utility.yul\":7530:7534   */\n      0x00\n        /* \"#utility.yul\":7568:7570   */\n      0x40\n        /* \"#utility.yul\":7557:7566   */\n      dup3\n        /* \"#utility.yul\":7553:7571   */\n      add\n        /* \"#utility.yul\":7545:7571   */\n      swap1\n      pop\n        /* \"#utility.yul\":7581:7652   */\n      tag_434\n        /* \"#utility.yul\":7649:7650   */\n      0x00\n        /* \"#utility.yul\":7638:7647   */\n      dup4\n        /* \"#utility.yul\":7634:7651   */\n      add\n        /* \"#utility.yul\":7625:7631   */\n      dup6\n        /* \"#utility.yul\":7581:7652   */\n      tag_318\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":7662:7749   */\n      tag_435\n        /* \"#utility.yul\":7745:7747   */\n      0x20\n        /* \"#utility.yul\":7734:7743   */\n      dup4\n        /* \"#utility.yul\":7730:7748   */\n      add\n        /* \"#utility.yul\":7721:7727   */\n      dup5\n        /* \"#utility.yul\":7662:7749   */\n      tag_334\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":7394:7756   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7762:8091   */\n    tag_66:\n        /* \"#utility.yul\":7821:7827   */\n      0x00\n        /* \"#utility.yul\":7870:7872   */\n      0x20\n        /* \"#utility.yul\":7858:7867   */\n      dup3\n        /* \"#utility.yul\":7849:7856   */\n      dup5\n        /* \"#utility.yul\":7845:7868   */\n      sub\n        /* \"#utility.yul\":7841:7873   */\n      slt\n        /* \"#utility.yul\":7838:7957   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":7876:7955   */\n      tag_438\n      tag_313\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":7838:7957   */\n    tag_437:\n        /* \"#utility.yul\":7996:7997   */\n      0x00\n        /* \"#utility.yul\":8021:8074   */\n      tag_439\n        /* \"#utility.yul\":8066:8073   */\n      dup5\n        /* \"#utility.yul\":8057:8063   */\n      dup3\n        /* \"#utility.yul\":8046:8055   */\n      dup6\n        /* \"#utility.yul\":8042:8064   */\n      add\n        /* \"#utility.yul\":8021:8074   */\n      tag_327\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":8011:8074   */\n      swap2\n      pop\n        /* \"#utility.yul\":7967:8084   */\n      pop\n        /* \"#utility.yul\":7762:8091   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8097:8426   */\n    tag_74:\n        /* \"#utility.yul\":8156:8162   */\n      0x00\n        /* \"#utility.yul\":8205:8207   */\n      0x20\n        /* \"#utility.yul\":8193:8202   */\n      dup3\n        /* \"#utility.yul\":8184:8191   */\n      dup5\n        /* \"#utility.yul\":8180:8203   */\n      sub\n        /* \"#utility.yul\":8176:8208   */\n      slt\n        /* \"#utility.yul\":8173:8292   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":8211:8290   */\n      tag_442\n      tag_313\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":8173:8292   */\n    tag_441:\n        /* \"#utility.yul\":8331:8332   */\n      0x00\n        /* \"#utility.yul\":8356:8409   */\n      tag_443\n        /* \"#utility.yul\":8401:8408   */\n      dup5\n        /* \"#utility.yul\":8392:8398   */\n      dup3\n        /* \"#utility.yul\":8381:8390   */\n      dup6\n        /* \"#utility.yul\":8377:8399   */\n      add\n        /* \"#utility.yul\":8356:8409   */\n      tag_317\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":8346:8409   */\n      swap2\n      pop\n        /* \"#utility.yul\":8302:8419   */\n      pop\n        /* \"#utility.yul\":8097:8426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8432:8764   */\n    tag_77:\n        /* \"#utility.yul\":8553:8557   */\n      0x00\n        /* \"#utility.yul\":8591:8593   */\n      0x40\n        /* \"#utility.yul\":8580:8589   */\n      dup3\n        /* \"#utility.yul\":8576:8594   */\n      add\n        /* \"#utility.yul\":8568:8594   */\n      swap1\n      pop\n        /* \"#utility.yul\":8604:8675   */\n      tag_445\n        /* \"#utility.yul\":8672:8673   */\n      0x00\n        /* \"#utility.yul\":8661:8670   */\n      dup4\n        /* \"#utility.yul\":8657:8674   */\n      add\n        /* \"#utility.yul\":8648:8654   */\n      dup6\n        /* \"#utility.yul\":8604:8675   */\n      tag_318\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":8685:8757   */\n      tag_446\n        /* \"#utility.yul\":8753:8755   */\n      0x20\n        /* \"#utility.yul\":8742:8751   */\n      dup4\n        /* \"#utility.yul\":8738:8756   */\n      add\n        /* \"#utility.yul\":8729:8735   */\n      dup5\n        /* \"#utility.yul\":8685:8757   */\n      tag_318\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":8432:8764   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8770:9244   */\n    tag_80:\n        /* \"#utility.yul\":8838:8844   */\n      0x00\n        /* \"#utility.yul\":8846:8852   */\n      dup1\n        /* \"#utility.yul\":8895:8897   */\n      0x40\n        /* \"#utility.yul\":8883:8892   */\n      dup4\n        /* \"#utility.yul\":8874:8881   */\n      dup6\n        /* \"#utility.yul\":8870:8893   */\n      sub\n        /* \"#utility.yul\":8866:8898   */\n      slt\n        /* \"#utility.yul\":8863:8982   */\n      iszero\n      tag_448\n      jumpi\n        /* \"#utility.yul\":8901:8980   */\n      tag_449\n      tag_313\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":8863:8982   */\n    tag_448:\n        /* \"#utility.yul\":9021:9022   */\n      0x00\n        /* \"#utility.yul\":9046:9099   */\n      tag_450\n        /* \"#utility.yul\":9091:9098   */\n      dup6\n        /* \"#utility.yul\":9082:9088   */\n      dup3\n        /* \"#utility.yul\":9071:9080   */\n      dup7\n        /* \"#utility.yul\":9067:9089   */\n      add\n        /* \"#utility.yul\":9046:9099   */\n      tag_317\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":9036:9099   */\n      swap3\n      pop\n        /* \"#utility.yul\":8992:9109   */\n      pop\n        /* \"#utility.yul\":9148:9150   */\n      0x20\n        /* \"#utility.yul\":9174:9227   */\n      tag_451\n        /* \"#utility.yul\":9219:9226   */\n      dup6\n        /* \"#utility.yul\":9210:9216   */\n      dup3\n        /* \"#utility.yul\":9199:9208   */\n      dup7\n        /* \"#utility.yul\":9195:9217   */\n      add\n        /* \"#utility.yul\":9174:9227   */\n      tag_317\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":9164:9227   */\n      swap2\n      pop\n        /* \"#utility.yul\":9119:9237   */\n      pop\n        /* \"#utility.yul\":8770:9244   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9250:9724   */\n    tag_92:\n        /* \"#utility.yul\":9318:9324   */\n      0x00\n        /* \"#utility.yul\":9326:9332   */\n      dup1\n        /* \"#utility.yul\":9375:9377   */\n      0x40\n        /* \"#utility.yul\":9363:9372   */\n      dup4\n        /* \"#utility.yul\":9354:9361   */\n      dup6\n        /* \"#utility.yul\":9350:9373   */\n      sub\n        /* \"#utility.yul\":9346:9378   */\n      slt\n        /* \"#utility.yul\":9343:9462   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":9381:9460   */\n      tag_454\n      tag_313\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":9343:9462   */\n    tag_453:\n        /* \"#utility.yul\":9501:9502   */\n      0x00\n        /* \"#utility.yul\":9526:9579   */\n      tag_455\n        /* \"#utility.yul\":9571:9578   */\n      dup6\n        /* \"#utility.yul\":9562:9568   */\n      dup3\n        /* \"#utility.yul\":9551:9560   */\n      dup7\n        /* \"#utility.yul\":9547:9569   */\n      add\n        /* \"#utility.yul\":9526:9579   */\n      tag_327\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":9516:9579   */\n      swap3\n      pop\n        /* \"#utility.yul\":9472:9589   */\n      pop\n        /* \"#utility.yul\":9628:9630   */\n      0x20\n        /* \"#utility.yul\":9654:9707   */\n      tag_456\n        /* \"#utility.yul\":9699:9706   */\n      dup6\n        /* \"#utility.yul\":9690:9696   */\n      dup3\n        /* \"#utility.yul\":9679:9688   */\n      dup7\n        /* \"#utility.yul\":9675:9697   */\n      add\n        /* \"#utility.yul\":9654:9707   */\n      tag_327\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":9644:9707   */\n      swap2\n      pop\n        /* \"#utility.yul\":9599:9717   */\n      pop\n        /* \"#utility.yul\":9250:9724   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9730:9910   */\n    tag_340:\n        /* \"#utility.yul\":9778:9855   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9775:9776   */\n      0x00\n        /* \"#utility.yul\":9768:9856   */\n      mstore\n        /* \"#utility.yul\":9875:9879   */\n      0x11\n        /* \"#utility.yul\":9872:9873   */\n      0x04\n        /* \"#utility.yul\":9865:9880   */\n      mstore\n        /* \"#utility.yul\":9899:9903   */\n      0x24\n        /* \"#utility.yul\":9896:9897   */\n      0x00\n        /* \"#utility.yul\":9889:9904   */\n      revert\n        /* \"#utility.yul\":9916:10107   */\n    tag_103:\n        /* \"#utility.yul\":9956:9959   */\n      0x00\n        /* \"#utility.yul\":9975:9995   */\n      tag_459\n        /* \"#utility.yul\":9993:9994   */\n      dup3\n        /* \"#utility.yul\":9975:9995   */\n      tag_315\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":9970:9995   */\n      swap2\n      pop\n        /* \"#utility.yul\":10009:10029   */\n      tag_460\n        /* \"#utility.yul\":10027:10028   */\n      dup4\n        /* \"#utility.yul\":10009:10029   */\n      tag_315\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":10004:10029   */\n      swap3\n      pop\n        /* \"#utility.yul\":10052:10053   */\n      dup3\n        /* \"#utility.yul\":10049:10050   */\n      dup3\n        /* \"#utility.yul\":10045:10054   */\n      add\n        /* \"#utility.yul\":10038:10054   */\n      swap1\n      pop\n        /* \"#utility.yul\":10073:10076   */\n      dup1\n        /* \"#utility.yul\":10070:10071   */\n      dup3\n        /* \"#utility.yul\":10067:10077   */\n      gt\n        /* \"#utility.yul\":10064:10100   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":10080:10098   */\n      tag_462\n      tag_340\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":10064:10100   */\n    tag_461:\n        /* \"#utility.yul\":9916:10107   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10113:10523   */\n    tag_105:\n        /* \"#utility.yul\":10153:10160   */\n      0x00\n        /* \"#utility.yul\":10176:10196   */\n      tag_464\n        /* \"#utility.yul\":10194:10195   */\n      dup3\n        /* \"#utility.yul\":10176:10196   */\n      tag_315\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":10171:10196   */\n      swap2\n      pop\n        /* \"#utility.yul\":10210:10230   */\n      tag_465\n        /* \"#utility.yul\":10228:10229   */\n      dup4\n        /* \"#utility.yul\":10210:10230   */\n      tag_315\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":10205:10230   */\n      swap3\n      pop\n        /* \"#utility.yul\":10265:10266   */\n      dup3\n        /* \"#utility.yul\":10262:10263   */\n      dup3\n        /* \"#utility.yul\":10258:10267   */\n      mul\n        /* \"#utility.yul\":10287:10317   */\n      tag_466\n        /* \"#utility.yul\":10305:10316   */\n      dup2\n        /* \"#utility.yul\":10287:10317   */\n      tag_315\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":10276:10317   */\n      swap2\n      pop\n        /* \"#utility.yul\":10466:10467   */\n      dup3\n        /* \"#utility.yul\":10457:10464   */\n      dup3\n        /* \"#utility.yul\":10453:10468   */\n      div\n        /* \"#utility.yul\":10450:10451   */\n      dup5\n        /* \"#utility.yul\":10447:10469   */\n      eq\n        /* \"#utility.yul\":10427:10428   */\n      dup4\n        /* \"#utility.yul\":10420:10429   */\n      iszero\n        /* \"#utility.yul\":10400:10483   */\n      or\n        /* \"#utility.yul\":10377:10516   */\n      tag_467\n      jumpi\n        /* \"#utility.yul\":10496:10514   */\n      tag_468\n      tag_340\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":10377:10516   */\n    tag_467:\n        /* \"#utility.yul\":10161:10523   */\n      pop\n        /* \"#utility.yul\":10113:10523   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10529:10709   */\n    tag_341:\n        /* \"#utility.yul\":10577:10654   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10574:10575   */\n      0x00\n        /* \"#utility.yul\":10567:10655   */\n      mstore\n        /* \"#utility.yul\":10674:10678   */\n      0x12\n        /* \"#utility.yul\":10671:10672   */\n      0x04\n        /* \"#utility.yul\":10664:10679   */\n      mstore\n        /* \"#utility.yul\":10698:10702   */\n      0x24\n        /* \"#utility.yul\":10695:10696   */\n      0x00\n        /* \"#utility.yul\":10688:10703   */\n      revert\n        /* \"#utility.yul\":10715:10900   */\n    tag_107:\n        /* \"#utility.yul\":10755:10756   */\n      0x00\n        /* \"#utility.yul\":10772:10792   */\n      tag_471\n        /* \"#utility.yul\":10790:10791   */\n      dup3\n        /* \"#utility.yul\":10772:10792   */\n      tag_315\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":10767:10792   */\n      swap2\n      pop\n        /* \"#utility.yul\":10806:10826   */\n      tag_472\n        /* \"#utility.yul\":10824:10825   */\n      dup4\n        /* \"#utility.yul\":10806:10826   */\n      tag_315\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":10801:10826   */\n      swap3\n      pop\n        /* \"#utility.yul\":10845:10846   */\n      dup3\n        /* \"#utility.yul\":10835:10870   */\n      tag_473\n      jumpi\n        /* \"#utility.yul\":10850:10868   */\n      tag_474\n      tag_341\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":10835:10870   */\n    tag_473:\n        /* \"#utility.yul\":10892:10893   */\n      dup3\n        /* \"#utility.yul\":10889:10890   */\n      dup3\n        /* \"#utility.yul\":10885:10894   */\n      div\n        /* \"#utility.yul\":10880:10894   */\n      swap1\n      pop\n        /* \"#utility.yul\":10715:10900   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10906:11086   */\n    tag_342:\n        /* \"#utility.yul\":10954:11031   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10951:10952   */\n      0x00\n        /* \"#utility.yul\":10944:11032   */\n      mstore\n        /* \"#utility.yul\":11051:11055   */\n      0x22\n        /* \"#utility.yul\":11048:11049   */\n      0x04\n        /* \"#utility.yul\":11041:11056   */\n      mstore\n        /* \"#utility.yul\":11075:11079   */\n      0x24\n        /* \"#utility.yul\":11072:11073   */\n      0x00\n        /* \"#utility.yul\":11065:11080   */\n      revert\n        /* \"#utility.yul\":11092:11412   */\n    tag_110:\n        /* \"#utility.yul\":11136:11142   */\n      0x00\n        /* \"#utility.yul\":11173:11174   */\n      0x02\n        /* \"#utility.yul\":11167:11171   */\n      dup3\n        /* \"#utility.yul\":11163:11175   */\n      div\n        /* \"#utility.yul\":11153:11175   */\n      swap1\n      pop\n        /* \"#utility.yul\":11220:11221   */\n      0x01\n        /* \"#utility.yul\":11214:11218   */\n      dup3\n        /* \"#utility.yul\":11210:11222   */\n      and\n        /* \"#utility.yul\":11241:11259   */\n      dup1\n        /* \"#utility.yul\":11231:11312   */\n      tag_477\n      jumpi\n        /* \"#utility.yul\":11297:11301   */\n      0x7f\n        /* \"#utility.yul\":11289:11295   */\n      dup3\n        /* \"#utility.yul\":11285:11302   */\n      and\n        /* \"#utility.yul\":11275:11302   */\n      swap2\n      pop\n        /* \"#utility.yul\":11231:11312   */\n    tag_477:\n        /* \"#utility.yul\":11359:11361   */\n      0x20\n        /* \"#utility.yul\":11351:11357   */\n      dup3\n        /* \"#utility.yul\":11348:11362   */\n      lt\n        /* \"#utility.yul\":11328:11346   */\n      dup2\n        /* \"#utility.yul\":11325:11363   */\n      sub\n        /* \"#utility.yul\":11322:11406   */\n      tag_478\n      jumpi\n        /* \"#utility.yul\":11378:11396   */\n      tag_479\n      tag_342\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":11322:11406   */\n    tag_478:\n        /* \"#utility.yul\":11143:11412   */\n      pop\n        /* \"#utility.yul\":11092:11412   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11418:11536   */\n    tag_343:\n        /* \"#utility.yul\":11505:11529   */\n      tag_481\n        /* \"#utility.yul\":11523:11528   */\n      dup2\n        /* \"#utility.yul\":11505:11529   */\n      tag_325\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":11500:11503   */\n      dup3\n        /* \"#utility.yul\":11493:11530   */\n      mstore\n        /* \"#utility.yul\":11418:11536   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11542:11764   */\n    tag_133:\n        /* \"#utility.yul\":11635:11639   */\n      0x00\n        /* \"#utility.yul\":11673:11675   */\n      0x20\n        /* \"#utility.yul\":11662:11671   */\n      dup3\n        /* \"#utility.yul\":11658:11676   */\n      add\n        /* \"#utility.yul\":11650:11676   */\n      swap1\n      pop\n        /* \"#utility.yul\":11686:11757   */\n      tag_483\n        /* \"#utility.yul\":11754:11755   */\n      0x00\n        /* \"#utility.yul\":11743:11752   */\n      dup4\n        /* \"#utility.yul\":11739:11756   */\n      add\n        /* \"#utility.yul\":11730:11736   */\n      dup5\n        /* \"#utility.yul\":11686:11757   */\n      tag_343\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":11542:11764   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11770:11913   */\n    tag_344:\n        /* \"#utility.yul\":11827:11832   */\n      0x00\n        /* \"#utility.yul\":11858:11864   */\n      dup2\n        /* \"#utility.yul\":11852:11865   */\n      mload\n        /* \"#utility.yul\":11843:11865   */\n      swap1\n      pop\n        /* \"#utility.yul\":11874:11907   */\n      tag_485\n        /* \"#utility.yul\":11901:11906   */\n      dup2\n        /* \"#utility.yul\":11874:11907   */\n      tag_316\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":11770:11913   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11919:12270   */\n    tag_137:\n        /* \"#utility.yul\":11989:11995   */\n      0x00\n        /* \"#utility.yul\":12038:12040   */\n      0x20\n        /* \"#utility.yul\":12026:12035   */\n      dup3\n        /* \"#utility.yul\":12017:12024   */\n      dup5\n        /* \"#utility.yul\":12013:12036   */\n      sub\n        /* \"#utility.yul\":12009:12041   */\n      slt\n        /* \"#utility.yul\":12006:12125   */\n      iszero\n      tag_487\n      jumpi\n        /* \"#utility.yul\":12044:12123   */\n      tag_488\n      tag_313\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":12006:12125   */\n    tag_487:\n        /* \"#utility.yul\":12164:12165   */\n      0x00\n        /* \"#utility.yul\":12189:12253   */\n      tag_489\n        /* \"#utility.yul\":12245:12252   */\n      dup5\n        /* \"#utility.yul\":12236:12242   */\n      dup3\n        /* \"#utility.yul\":12225:12234   */\n      dup6\n        /* \"#utility.yul\":12221:12243   */\n      add\n        /* \"#utility.yul\":12189:12253   */\n      tag_344\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":12179:12253   */\n      swap2\n      pop\n        /* \"#utility.yul\":12135:12263   */\n      pop\n        /* \"#utility.yul\":11919:12270   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12276:12718   */\n    tag_146:\n        /* \"#utility.yul\":12425:12429   */\n      0x00\n        /* \"#utility.yul\":12463:12465   */\n      0x60\n        /* \"#utility.yul\":12452:12461   */\n      dup3\n        /* \"#utility.yul\":12448:12466   */\n      add\n        /* \"#utility.yul\":12440:12466   */\n      swap1\n      pop\n        /* \"#utility.yul\":12476:12547   */\n      tag_491\n        /* \"#utility.yul\":12544:12545   */\n      0x00\n        /* \"#utility.yul\":12533:12542   */\n      dup4\n        /* \"#utility.yul\":12529:12546   */\n      add\n        /* \"#utility.yul\":12520:12526   */\n      dup7\n        /* \"#utility.yul\":12476:12547   */\n      tag_343\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":12557:12629   */\n      tag_492\n        /* \"#utility.yul\":12625:12627   */\n      0x20\n        /* \"#utility.yul\":12614:12623   */\n      dup4\n        /* \"#utility.yul\":12610:12628   */\n      add\n        /* \"#utility.yul\":12601:12607   */\n      dup6\n        /* \"#utility.yul\":12557:12629   */\n      tag_343\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":12639:12711   */\n      tag_493\n        /* \"#utility.yul\":12707:12709   */\n      0x40\n        /* \"#utility.yul\":12696:12705   */\n      dup4\n        /* \"#utility.yul\":12692:12710   */\n      add\n        /* \"#utility.yul\":12683:12689   */\n      dup5\n        /* \"#utility.yul\":12639:12711   */\n      tag_318\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":12276:12718   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12724:12840   */\n    tag_345:\n        /* \"#utility.yul\":12794:12815   */\n      tag_495\n        /* \"#utility.yul\":12809:12814   */\n      dup2\n        /* \"#utility.yul\":12794:12815   */\n      tag_328\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":12787:12792   */\n      dup2\n        /* \"#utility.yul\":12784:12816   */\n      eq\n        /* \"#utility.yul\":12774:12834   */\n      tag_496\n      jumpi\n        /* \"#utility.yul\":12830:12831   */\n      0x00\n        /* \"#utility.yul\":12827:12828   */\n      dup1\n        /* \"#utility.yul\":12820:12832   */\n      revert\n        /* \"#utility.yul\":12774:12834   */\n    tag_496:\n        /* \"#utility.yul\":12724:12840   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12846:12983   */\n    tag_346:\n        /* \"#utility.yul\":12900:12905   */\n      0x00\n        /* \"#utility.yul\":12931:12937   */\n      dup2\n        /* \"#utility.yul\":12925:12938   */\n      mload\n        /* \"#utility.yul\":12916:12938   */\n      swap1\n      pop\n        /* \"#utility.yul\":12947:12977   */\n      tag_498\n        /* \"#utility.yul\":12971:12976   */\n      dup2\n        /* \"#utility.yul\":12947:12977   */\n      tag_345\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":12846:12983   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12989:13334   */\n    tag_150:\n        /* \"#utility.yul\":13056:13062   */\n      0x00\n        /* \"#utility.yul\":13105:13107   */\n      0x20\n        /* \"#utility.yul\":13093:13102   */\n      dup3\n        /* \"#utility.yul\":13084:13091   */\n      dup5\n        /* \"#utility.yul\":13080:13103   */\n      sub\n        /* \"#utility.yul\":13076:13108   */\n      slt\n        /* \"#utility.yul\":13073:13192   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":13111:13190   */\n      tag_501\n      tag_313\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":13073:13192   */\n    tag_500:\n        /* \"#utility.yul\":13231:13232   */\n      0x00\n        /* \"#utility.yul\":13256:13317   */\n      tag_502\n        /* \"#utility.yul\":13309:13316   */\n      dup5\n        /* \"#utility.yul\":13300:13306   */\n      dup3\n        /* \"#utility.yul\":13289:13298   */\n      dup6\n        /* \"#utility.yul\":13285:13307   */\n      add\n        /* \"#utility.yul\":13256:13317   */\n      tag_346\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":13246:13317   */\n      swap2\n      pop\n        /* \"#utility.yul\":13202:13327   */\n      pop\n        /* \"#utility.yul\":12989:13334   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13340:13672   */\n    tag_152:\n        /* \"#utility.yul\":13461:13465   */\n      0x00\n        /* \"#utility.yul\":13499:13501   */\n      0x40\n        /* \"#utility.yul\":13488:13497   */\n      dup3\n        /* \"#utility.yul\":13484:13502   */\n      add\n        /* \"#utility.yul\":13476:13502   */\n      swap1\n      pop\n        /* \"#utility.yul\":13512:13583   */\n      tag_504\n        /* \"#utility.yul\":13580:13581   */\n      0x00\n        /* \"#utility.yul\":13569:13578   */\n      dup4\n        /* \"#utility.yul\":13565:13582   */\n      add\n        /* \"#utility.yul\":13556:13562   */\n      dup6\n        /* \"#utility.yul\":13512:13583   */\n      tag_343\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":13593:13665   */\n      tag_505\n        /* \"#utility.yul\":13661:13663   */\n      0x20\n        /* \"#utility.yul\":13650:13659   */\n      dup4\n        /* \"#utility.yul\":13646:13664   */\n      add\n        /* \"#utility.yul\":13637:13643   */\n      dup5\n        /* \"#utility.yul\":13593:13665   */\n      tag_318\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":13340:13672   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13678:14231   */\n    tag_176:\n        /* \"#utility.yul\":13855:13859   */\n      0x00\n        /* \"#utility.yul\":13893:13896   */\n      0x80\n        /* \"#utility.yul\":13882:13891   */\n      dup3\n        /* \"#utility.yul\":13878:13897   */\n      add\n        /* \"#utility.yul\":13870:13897   */\n      swap1\n      pop\n        /* \"#utility.yul\":13907:13978   */\n      tag_507\n        /* \"#utility.yul\":13975:13976   */\n      0x00\n        /* \"#utility.yul\":13964:13973   */\n      dup4\n        /* \"#utility.yul\":13960:13977   */\n      add\n        /* \"#utility.yul\":13951:13957   */\n      dup8\n        /* \"#utility.yul\":13907:13978   */\n      tag_318\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":13988:14060   */\n      tag_508\n        /* \"#utility.yul\":14056:14058   */\n      0x20\n        /* \"#utility.yul\":14045:14054   */\n      dup4\n        /* \"#utility.yul\":14041:14059   */\n      add\n        /* \"#utility.yul\":14032:14038   */\n      dup7\n        /* \"#utility.yul\":13988:14060   */\n      tag_343\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":14070:14142   */\n      tag_509\n        /* \"#utility.yul\":14138:14140   */\n      0x40\n        /* \"#utility.yul\":14127:14136   */\n      dup4\n        /* \"#utility.yul\":14123:14141   */\n      add\n        /* \"#utility.yul\":14114:14120   */\n      dup6\n        /* \"#utility.yul\":14070:14142   */\n      tag_318\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":14152:14224   */\n      tag_510\n        /* \"#utility.yul\":14220:14222   */\n      0x60\n        /* \"#utility.yul\":14209:14218   */\n      dup4\n        /* \"#utility.yul\":14205:14223   */\n      add\n        /* \"#utility.yul\":14196:14202   */\n      dup5\n        /* \"#utility.yul\":14152:14224   */\n      tag_343\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":13678:14231   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14237:14679   */\n    tag_265:\n        /* \"#utility.yul\":14386:14390   */\n      0x00\n        /* \"#utility.yul\":14424:14426   */\n      0x60\n        /* \"#utility.yul\":14413:14422   */\n      dup3\n        /* \"#utility.yul\":14409:14427   */\n      add\n        /* \"#utility.yul\":14401:14427   */\n      swap1\n      pop\n        /* \"#utility.yul\":14437:14508   */\n      tag_512\n        /* \"#utility.yul\":14505:14506   */\n      0x00\n        /* \"#utility.yul\":14494:14503   */\n      dup4\n        /* \"#utility.yul\":14490:14507   */\n      add\n        /* \"#utility.yul\":14481:14487   */\n      dup7\n        /* \"#utility.yul\":14437:14508   */\n      tag_343\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":14518:14590   */\n      tag_513\n        /* \"#utility.yul\":14586:14588   */\n      0x20\n        /* \"#utility.yul\":14575:14584   */\n      dup4\n        /* \"#utility.yul\":14571:14589   */\n      add\n        /* \"#utility.yul\":14562:14568   */\n      dup6\n        /* \"#utility.yul\":14518:14590   */\n      tag_318\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":14600:14672   */\n      tag_514\n        /* \"#utility.yul\":14668:14670   */\n      0x40\n        /* \"#utility.yul\":14657:14666   */\n      dup4\n        /* \"#utility.yul\":14653:14671   */\n      add\n        /* \"#utility.yul\":14644:14650   */\n      dup5\n        /* \"#utility.yul\":14600:14672   */\n      tag_318\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":14237:14679   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220355687e0160e5326a04cbb9176f530046cddce93542fce638fd45216848759d264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_64": {
									"entryPoint": null,
									"id": 64,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_754": {
									"entryPoint": null,
									"id": 754,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_IERC20_$1295_fromMemory": {
									"entryPoint": 417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_IERC20_$1295t_contract$_IERC20_$1295_fromMemory": {
									"entryPoint": 437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 647,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 932,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$1295": {
									"entryPoint": 378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 791,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1069,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 599,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1042,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 554,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 509,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 326,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 680,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1002,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 692,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 833,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$1295": {
									"entryPoint": 395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 870,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6819:6",
										"nodeType": "YulBlock",
										"src": "0:6819:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:81:6",
													"nodeType": "YulBlock",
													"src": "379:81:6",
													"statements": [
														{
															"nativeSrc": "389:65:6",
															"nodeType": "YulAssignment",
															"src": "389:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:6",
																		"nodeType": "YulLiteral",
																		"src": "411:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:6"
																},
																"nativeSrc": "400:54:6",
																"nodeType": "YulFunctionCall",
																"src": "400:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:126:6"
											},
											{
												"body": {
													"nativeSrc": "511:51:6",
													"nodeType": "YulBlock",
													"src": "511:51:6",
													"statements": [
														{
															"nativeSrc": "521:35:6",
															"nodeType": "YulAssignment",
															"src": "521:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:6"
																},
																"nativeSrc": "532:24:6",
																"nodeType": "YulFunctionCall",
																"src": "532:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:6",
														"nodeType": "YulTypedName",
														"src": "493:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:6",
														"nodeType": "YulTypedName",
														"src": "503:7:6",
														"type": ""
													}
												],
												"src": "466:96:6"
											},
											{
												"body": {
													"nativeSrc": "628:51:6",
													"nodeType": "YulBlock",
													"src": "628:51:6",
													"statements": [
														{
															"nativeSrc": "638:35:6",
															"nodeType": "YulAssignment",
															"src": "638:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "667:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "667:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "649:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "649:17:6"
																},
																"nativeSrc": "649:24:6",
																"nodeType": "YulFunctionCall",
																"src": "649:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "638:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "638:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$1295",
												"nativeSrc": "568:111:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "610:5:6",
														"nodeType": "YulTypedName",
														"src": "610:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "620:7:6",
														"nodeType": "YulTypedName",
														"src": "620:7:6",
														"type": ""
													}
												],
												"src": "568:111:6"
											},
											{
												"body": {
													"nativeSrc": "743:94:6",
													"nodeType": "YulBlock",
													"src": "743:94:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "815:16:6",
																"nodeType": "YulBlock",
																"src": "815:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "824:1:6",
																					"nodeType": "YulLiteral",
																					"src": "824:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "827:1:6",
																					"nodeType": "YulLiteral",
																					"src": "827:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "817:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "817:6:6"
																			},
																			"nativeSrc": "817:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "817:12:6"
																		},
																		"nativeSrc": "817:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "817:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "766:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "766:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "806:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "806:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$1295",
																					"nativeSrc": "773:32:6",
																					"nodeType": "YulIdentifier",
																					"src": "773:32:6"
																				},
																				"nativeSrc": "773:39:6",
																				"nodeType": "YulFunctionCall",
																				"src": "773:39:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "763:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "763:2:6"
																		},
																		"nativeSrc": "763:50:6",
																		"nodeType": "YulFunctionCall",
																		"src": "763:50:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "756:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "756:6:6"
																},
																"nativeSrc": "756:58:6",
																"nodeType": "YulFunctionCall",
																"src": "756:58:6"
															},
															"nativeSrc": "753:78:6",
															"nodeType": "YulIf",
															"src": "753:78:6"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$1295",
												"nativeSrc": "685:152:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "736:5:6",
														"nodeType": "YulTypedName",
														"src": "736:5:6",
														"type": ""
													}
												],
												"src": "685:152:6"
											},
											{
												"body": {
													"nativeSrc": "921:95:6",
													"nodeType": "YulBlock",
													"src": "921:95:6",
													"statements": [
														{
															"nativeSrc": "931:22:6",
															"nodeType": "YulAssignment",
															"src": "931:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "946:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "946:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "940:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "940:5:6"
																},
																"nativeSrc": "940:13:6",
																"nodeType": "YulFunctionCall",
																"src": "940:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "931:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "931:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1004:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1004:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$1295",
																	"nativeSrc": "962:41:6",
																	"nodeType": "YulIdentifier",
																	"src": "962:41:6"
																},
																"nativeSrc": "962:48:6",
																"nodeType": "YulFunctionCall",
																"src": "962:48:6"
															},
															"nativeSrc": "962:48:6",
															"nodeType": "YulExpressionStatement",
															"src": "962:48:6"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$1295_fromMemory",
												"nativeSrc": "843:173:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "899:6:6",
														"nodeType": "YulTypedName",
														"src": "899:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "907:3:6",
														"nodeType": "YulTypedName",
														"src": "907:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "915:5:6",
														"nodeType": "YulTypedName",
														"src": "915:5:6",
														"type": ""
													}
												],
												"src": "843:173:6"
											},
											{
												"body": {
													"nativeSrc": "1146:443:6",
													"nodeType": "YulBlock",
													"src": "1146:443:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1192:83:6",
																"nodeType": "YulBlock",
																"src": "1192:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1194:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "1194:77:6"
																			},
																			"nativeSrc": "1194:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1194:79:6"
																		},
																		"nativeSrc": "1194:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1194:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1167:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1167:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1176:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1176:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1163:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1163:3:6"
																		},
																		"nativeSrc": "1163:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1163:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1188:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1188:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1159:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1159:3:6"
																},
																"nativeSrc": "1159:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1159:32:6"
															},
															"nativeSrc": "1156:119:6",
															"nodeType": "YulIf",
															"src": "1156:119:6"
														},
														{
															"nativeSrc": "1285:143:6",
															"nodeType": "YulBlock",
															"src": "1285:143:6",
															"statements": [
																{
																	"nativeSrc": "1300:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1300:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1314:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1314:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1304:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1304:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1329:89:6",
																	"nodeType": "YulAssignment",
																	"src": "1329:89:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1390:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1390:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1401:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1401:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1386:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1386:3:6"
																				},
																				"nativeSrc": "1386:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1386:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1410:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1410:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$1295_fromMemory",
																			"nativeSrc": "1339:46:6",
																			"nodeType": "YulIdentifier",
																			"src": "1339:46:6"
																		},
																		"nativeSrc": "1339:79:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1339:79:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1329:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1329:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1438:144:6",
															"nodeType": "YulBlock",
															"src": "1438:144:6",
															"statements": [
																{
																	"nativeSrc": "1453:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1453:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1467:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1467:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1457:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1457:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1483:89:6",
																	"nodeType": "YulAssignment",
																	"src": "1483:89:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1544:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1544:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1555:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1555:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1540:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1540:3:6"
																				},
																				"nativeSrc": "1540:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1540:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1564:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1564:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$1295_fromMemory",
																			"nativeSrc": "1493:46:6",
																			"nodeType": "YulIdentifier",
																			"src": "1493:46:6"
																		},
																		"nativeSrc": "1493:79:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1493:79:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1483:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1483:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_IERC20_$1295t_contract$_IERC20_$1295_fromMemory",
												"nativeSrc": "1022:567:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1108:9:6",
														"nodeType": "YulTypedName",
														"src": "1108:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1119:7:6",
														"nodeType": "YulTypedName",
														"src": "1119:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1131:6:6",
														"nodeType": "YulTypedName",
														"src": "1131:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1139:6:6",
														"nodeType": "YulTypedName",
														"src": "1139:6:6",
														"type": ""
													}
												],
												"src": "1022:567:6"
											},
											{
												"body": {
													"nativeSrc": "1654:40:6",
													"nodeType": "YulBlock",
													"src": "1654:40:6",
													"statements": [
														{
															"nativeSrc": "1665:22:6",
															"nodeType": "YulAssignment",
															"src": "1665:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1681:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1681:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1675:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1675:5:6"
																},
																"nativeSrc": "1675:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1675:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1665:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1665:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1595:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1637:5:6",
														"nodeType": "YulTypedName",
														"src": "1637:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1647:6:6",
														"nodeType": "YulTypedName",
														"src": "1647:6:6",
														"type": ""
													}
												],
												"src": "1595:99:6"
											},
											{
												"body": {
													"nativeSrc": "1728:152:6",
													"nodeType": "YulBlock",
													"src": "1728:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1745:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1745:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1748:77:6",
																		"nodeType": "YulLiteral",
																		"src": "1748:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1738:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1738:6:6"
																},
																"nativeSrc": "1738:88:6",
																"nodeType": "YulFunctionCall",
																"src": "1738:88:6"
															},
															"nativeSrc": "1738:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "1738:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1842:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1842:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1845:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1845:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1835:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1835:6:6"
																},
																"nativeSrc": "1835:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1835:15:6"
															},
															"nativeSrc": "1835:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1835:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1866:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1866:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1869:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1869:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1859:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:6"
																},
																"nativeSrc": "1859:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1859:15:6"
															},
															"nativeSrc": "1859:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1859:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1700:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1700:180:6"
											},
											{
												"body": {
													"nativeSrc": "1914:152:6",
													"nodeType": "YulBlock",
													"src": "1914:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1931:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1931:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1934:77:6",
																		"nodeType": "YulLiteral",
																		"src": "1934:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1924:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1924:6:6"
																},
																"nativeSrc": "1924:88:6",
																"nodeType": "YulFunctionCall",
																"src": "1924:88:6"
															},
															"nativeSrc": "1924:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "1924:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2028:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2028:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2031:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2031:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2021:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2021:6:6"
																},
																"nativeSrc": "2021:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2021:15:6"
															},
															"nativeSrc": "2021:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2021:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2052:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2052:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2055:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2055:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2045:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2045:6:6"
																},
																"nativeSrc": "2045:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2045:15:6"
															},
															"nativeSrc": "2045:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2045:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1886:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1886:180:6"
											},
											{
												"body": {
													"nativeSrc": "2123:269:6",
													"nodeType": "YulBlock",
													"src": "2123:269:6",
													"statements": [
														{
															"nativeSrc": "2133:22:6",
															"nodeType": "YulAssignment",
															"src": "2133:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2147:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2147:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2153:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2153:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2143:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2143:3:6"
																},
																"nativeSrc": "2143:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2143:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2133:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2133:6:6"
																}
															]
														},
														{
															"nativeSrc": "2164:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2164:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2194:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2194:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2200:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2200:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2190:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2190:3:6"
																},
																"nativeSrc": "2190:12:6",
																"nodeType": "YulFunctionCall",
																"src": "2190:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2168:18:6",
																	"nodeType": "YulTypedName",
																	"src": "2168:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2241:51:6",
																"nodeType": "YulBlock",
																"src": "2241:51:6",
																"statements": [
																	{
																		"nativeSrc": "2255:27:6",
																		"nodeType": "YulAssignment",
																		"src": "2255:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2269:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2269:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2277:4:6",
																					"nodeType": "YulLiteral",
																					"src": "2277:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2265:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2265:3:6"
																			},
																			"nativeSrc": "2265:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2265:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2255:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2255:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2221:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "2221:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2214:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2214:6:6"
																},
																"nativeSrc": "2214:26:6",
																"nodeType": "YulFunctionCall",
																"src": "2214:26:6"
															},
															"nativeSrc": "2211:81:6",
															"nodeType": "YulIf",
															"src": "2211:81:6"
														},
														{
															"body": {
																"nativeSrc": "2344:42:6",
																"nodeType": "YulBlock",
																"src": "2344:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2358:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "2358:16:6"
																			},
																			"nativeSrc": "2358:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2358:18:6"
																		},
																		"nativeSrc": "2358:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2358:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2308:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "2308:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2331:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2331:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2339:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2339:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2328:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2328:2:6"
																		},
																		"nativeSrc": "2328:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2328:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2305:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2305:2:6"
																},
																"nativeSrc": "2305:38:6",
																"nodeType": "YulFunctionCall",
																"src": "2305:38:6"
															},
															"nativeSrc": "2302:84:6",
															"nodeType": "YulIf",
															"src": "2302:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2072:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2107:4:6",
														"nodeType": "YulTypedName",
														"src": "2107:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2116:6:6",
														"nodeType": "YulTypedName",
														"src": "2116:6:6",
														"type": ""
													}
												],
												"src": "2072:320:6"
											},
											{
												"body": {
													"nativeSrc": "2452:87:6",
													"nodeType": "YulBlock",
													"src": "2452:87:6",
													"statements": [
														{
															"nativeSrc": "2462:11:6",
															"nodeType": "YulAssignment",
															"src": "2462:11:6",
															"value": {
																"name": "ptr",
																"nativeSrc": "2470:3:6",
																"nodeType": "YulIdentifier",
																"src": "2470:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2462:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2462:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2490:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2490:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2493:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2493:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2483:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2483:6:6"
																},
																"nativeSrc": "2483:14:6",
																"nodeType": "YulFunctionCall",
																"src": "2483:14:6"
															},
															"nativeSrc": "2483:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "2483:14:6"
														},
														{
															"nativeSrc": "2506:26:6",
															"nodeType": "YulAssignment",
															"src": "2506:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2524:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2524:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2527:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2527:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2514:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "2514:9:6"
																},
																"nativeSrc": "2514:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2514:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2506:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2506:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2398:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2439:3:6",
														"nodeType": "YulTypedName",
														"src": "2439:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2447:4:6",
														"nodeType": "YulTypedName",
														"src": "2447:4:6",
														"type": ""
													}
												],
												"src": "2398:141:6"
											},
											{
												"body": {
													"nativeSrc": "2589:49:6",
													"nodeType": "YulBlock",
													"src": "2589:49:6",
													"statements": [
														{
															"nativeSrc": "2599:33:6",
															"nodeType": "YulAssignment",
															"src": "2599:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2617:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2617:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2624:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2624:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2613:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2613:3:6"
																		},
																		"nativeSrc": "2613:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2613:14:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2629:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2629:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2609:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2609:3:6"
																},
																"nativeSrc": "2609:23:6",
																"nodeType": "YulFunctionCall",
																"src": "2609:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2599:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2599:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2545:93:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2572:5:6",
														"nodeType": "YulTypedName",
														"src": "2572:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2582:6:6",
														"nodeType": "YulTypedName",
														"src": "2582:6:6",
														"type": ""
													}
												],
												"src": "2545:93:6"
											},
											{
												"body": {
													"nativeSrc": "2697:54:6",
													"nodeType": "YulBlock",
													"src": "2697:54:6",
													"statements": [
														{
															"nativeSrc": "2707:37:6",
															"nodeType": "YulAssignment",
															"src": "2707:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2732:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2732:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2738:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2738:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2728:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2728:3:6"
																},
																"nativeSrc": "2728:16:6",
																"nodeType": "YulFunctionCall",
																"src": "2728:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2707:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "2707:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2644:107:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2672:4:6",
														"nodeType": "YulTypedName",
														"src": "2672:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2678:5:6",
														"nodeType": "YulTypedName",
														"src": "2678:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2688:8:6",
														"nodeType": "YulTypedName",
														"src": "2688:8:6",
														"type": ""
													}
												],
												"src": "2644:107:6"
											},
											{
												"body": {
													"nativeSrc": "2833:317:6",
													"nodeType": "YulBlock",
													"src": "2833:317:6",
													"statements": [
														{
															"nativeSrc": "2843:35:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2843:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2864:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "2864:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2876:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2876:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2860:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2860:3:6"
																},
																"nativeSrc": "2860:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2860:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2847:9:6",
																	"nodeType": "YulTypedName",
																	"src": "2847:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2887:109:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2887:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2918:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2918:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2929:66:6",
																		"nodeType": "YulLiteral",
																		"src": "2929:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2899:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2899:18:6"
																},
																"nativeSrc": "2899:97:6",
																"nodeType": "YulFunctionCall",
																"src": "2899:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2891:4:6",
																	"nodeType": "YulTypedName",
																	"src": "2891:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3005:51:6",
															"nodeType": "YulAssignment",
															"src": "3005:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "3036:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3036:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "3047:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "3047:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "3017:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "3017:18:6"
																},
																"nativeSrc": "3017:39:6",
																"nodeType": "YulFunctionCall",
																"src": "3017:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "3005:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "3005:8:6"
																}
															]
														},
														{
															"nativeSrc": "3065:30:6",
															"nodeType": "YulAssignment",
															"src": "3065:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3078:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3078:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "3089:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "3089:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3085:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3085:3:6"
																		},
																		"nativeSrc": "3085:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3085:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3074:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3074:3:6"
																},
																"nativeSrc": "3074:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3074:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3065:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3065:5:6"
																}
															]
														},
														{
															"nativeSrc": "3104:40:6",
															"nodeType": "YulAssignment",
															"src": "3104:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3117:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3117:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "3128:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "3128:8:6"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "3138:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "3138:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "3124:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3124:3:6"
																		},
																		"nativeSrc": "3124:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3124:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3114:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3114:2:6"
																},
																"nativeSrc": "3114:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3114:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3104:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3104:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2757:393:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2794:5:6",
														"nodeType": "YulTypedName",
														"src": "2794:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2801:10:6",
														"nodeType": "YulTypedName",
														"src": "2801:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2813:8:6",
														"nodeType": "YulTypedName",
														"src": "2813:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2826:6:6",
														"nodeType": "YulTypedName",
														"src": "2826:6:6",
														"type": ""
													}
												],
												"src": "2757:393:6"
											},
											{
												"body": {
													"nativeSrc": "3201:32:6",
													"nodeType": "YulBlock",
													"src": "3201:32:6",
													"statements": [
														{
															"nativeSrc": "3211:16:6",
															"nodeType": "YulAssignment",
															"src": "3211:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "3222:5:6",
																"nodeType": "YulIdentifier",
																"src": "3222:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3211:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "3211:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "3156:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3183:5:6",
														"nodeType": "YulTypedName",
														"src": "3183:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3193:7:6",
														"nodeType": "YulTypedName",
														"src": "3193:7:6",
														"type": ""
													}
												],
												"src": "3156:77:6"
											},
											{
												"body": {
													"nativeSrc": "3271:28:6",
													"nodeType": "YulBlock",
													"src": "3271:28:6",
													"statements": [
														{
															"nativeSrc": "3281:12:6",
															"nodeType": "YulAssignment",
															"src": "3281:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "3288:5:6",
																"nodeType": "YulIdentifier",
																"src": "3288:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3281:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3281:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3239:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3257:5:6",
														"nodeType": "YulTypedName",
														"src": "3257:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3267:3:6",
														"nodeType": "YulTypedName",
														"src": "3267:3:6",
														"type": ""
													}
												],
												"src": "3239:60:6"
											},
											{
												"body": {
													"nativeSrc": "3365:82:6",
													"nodeType": "YulBlock",
													"src": "3365:82:6",
													"statements": [
														{
															"nativeSrc": "3375:66:6",
															"nodeType": "YulAssignment",
															"src": "3375:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3433:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3433:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3415:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "3415:17:6"
																				},
																				"nativeSrc": "3415:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3415:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3406:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "3406:8:6"
																		},
																		"nativeSrc": "3406:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3406:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3388:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3388:17:6"
																},
																"nativeSrc": "3388:53:6",
																"nodeType": "YulFunctionCall",
																"src": "3388:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3375:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "3375:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3305:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3345:5:6",
														"nodeType": "YulTypedName",
														"src": "3345:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3355:9:6",
														"nodeType": "YulTypedName",
														"src": "3355:9:6",
														"type": ""
													}
												],
												"src": "3305:142:6"
											},
											{
												"body": {
													"nativeSrc": "3500:28:6",
													"nodeType": "YulBlock",
													"src": "3500:28:6",
													"statements": [
														{
															"nativeSrc": "3510:12:6",
															"nodeType": "YulAssignment",
															"src": "3510:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "3517:5:6",
																"nodeType": "YulIdentifier",
																"src": "3517:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3510:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3510:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3453:75:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3486:5:6",
														"nodeType": "YulTypedName",
														"src": "3486:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3496:3:6",
														"nodeType": "YulTypedName",
														"src": "3496:3:6",
														"type": ""
													}
												],
												"src": "3453:75:6"
											},
											{
												"body": {
													"nativeSrc": "3610:193:6",
													"nodeType": "YulBlock",
													"src": "3610:193:6",
													"statements": [
														{
															"nativeSrc": "3620:63:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3620:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3675:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "3675:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3644:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "3644:30:6"
																},
																"nativeSrc": "3644:39:6",
																"nodeType": "YulFunctionCall",
																"src": "3644:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3624:16:6",
																	"nodeType": "YulTypedName",
																	"src": "3624:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3699:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3699:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3739:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "3739:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3733:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "3733:5:6"
																				},
																				"nativeSrc": "3733:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3733:11:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3746:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3746:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3778:16:6",
																						"nodeType": "YulIdentifier",
																						"src": "3778:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3754:23:6",
																					"nodeType": "YulIdentifier",
																					"src": "3754:23:6"
																				},
																				"nativeSrc": "3754:41:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3754:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3705:27:6",
																			"nodeType": "YulIdentifier",
																			"src": "3705:27:6"
																		},
																		"nativeSrc": "3705:91:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3705:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3692:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3692:6:6"
																},
																"nativeSrc": "3692:105:6",
																"nodeType": "YulFunctionCall",
																"src": "3692:105:6"
															},
															"nativeSrc": "3692:105:6",
															"nodeType": "YulExpressionStatement",
															"src": "3692:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3534:269:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3587:4:6",
														"nodeType": "YulTypedName",
														"src": "3587:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3593:6:6",
														"nodeType": "YulTypedName",
														"src": "3593:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3601:7:6",
														"nodeType": "YulTypedName",
														"src": "3601:7:6",
														"type": ""
													}
												],
												"src": "3534:269:6"
											},
											{
												"body": {
													"nativeSrc": "3858:24:6",
													"nodeType": "YulBlock",
													"src": "3858:24:6",
													"statements": [
														{
															"nativeSrc": "3868:8:6",
															"nodeType": "YulAssignment",
															"src": "3868:8:6",
															"value": {
																"kind": "number",
																"nativeSrc": "3875:1:6",
																"nodeType": "YulLiteral",
																"src": "3875:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3868:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3868:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3809:73:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3854:3:6",
														"nodeType": "YulTypedName",
														"src": "3854:3:6",
														"type": ""
													}
												],
												"src": "3809:73:6"
											},
											{
												"body": {
													"nativeSrc": "3941:136:6",
													"nodeType": "YulBlock",
													"src": "3941:136:6",
													"statements": [
														{
															"nativeSrc": "3951:46:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3951:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3965:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "3965:30:6"
																},
																"nativeSrc": "3965:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3965:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3955:6:6",
																	"nodeType": "YulTypedName",
																	"src": "3955:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4050:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4050:4:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4056:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4056:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "4064:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4064:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "4006:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "4006:43:6"
																},
																"nativeSrc": "4006:65:6",
																"nodeType": "YulFunctionCall",
																"src": "4006:65:6"
															},
															"nativeSrc": "4006:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "4006:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3888:189:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3927:4:6",
														"nodeType": "YulTypedName",
														"src": "3927:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3933:6:6",
														"nodeType": "YulTypedName",
														"src": "3933:6:6",
														"type": ""
													}
												],
												"src": "3888:189:6"
											},
											{
												"body": {
													"nativeSrc": "4133:136:6",
													"nodeType": "YulBlock",
													"src": "4133:136:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4200:63:6",
																"nodeType": "YulBlock",
																"src": "4200:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4244:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "4244:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4251:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4251:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "4214:29:6",
																				"nodeType": "YulIdentifier",
																				"src": "4214:29:6"
																			},
																			"nativeSrc": "4214:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4214:39:6"
																		},
																		"nativeSrc": "4214:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4214:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "4153:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4153:5:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "4160:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4160:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4150:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4150:2:6"
																},
																"nativeSrc": "4150:14:6",
																"nodeType": "YulFunctionCall",
																"src": "4150:14:6"
															},
															"nativeSrc": "4143:120:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4165:26:6",
																"nodeType": "YulBlock",
																"src": "4165:26:6",
																"statements": [
																	{
																		"nativeSrc": "4167:22:6",
																		"nodeType": "YulAssignment",
																		"src": "4167:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4180:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "4180:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4187:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4187:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4176:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4176:3:6"
																			},
																			"nativeSrc": "4176:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4176:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "4167:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4167:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4147:2:6",
																"nodeType": "YulBlock",
																"src": "4147:2:6",
																"statements": []
															},
															"src": "4143:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "4083:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "4121:5:6",
														"nodeType": "YulTypedName",
														"src": "4121:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4128:3:6",
														"nodeType": "YulTypedName",
														"src": "4128:3:6",
														"type": ""
													}
												],
												"src": "4083:186:6"
											},
											{
												"body": {
													"nativeSrc": "4354:464:6",
													"nodeType": "YulBlock",
													"src": "4354:464:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4380:431:6",
																"nodeType": "YulBlock",
																"src": "4380:431:6",
																"statements": [
																	{
																		"nativeSrc": "4394:54:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4394:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4442:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "4442:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4410:31:6",
																				"nodeType": "YulIdentifier",
																				"src": "4410:31:6"
																			},
																			"nativeSrc": "4410:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4410:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4398:8:6",
																				"nodeType": "YulTypedName",
																				"src": "4398:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4461:63:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4461:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4484:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "4484:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4512:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "4512:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4494:17:6",
																						"nodeType": "YulIdentifier",
																						"src": "4494:17:6"
																					},
																					"nativeSrc": "4494:29:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4494:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4480:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4480:3:6"
																			},
																			"nativeSrc": "4480:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4480:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4465:11:6",
																				"nodeType": "YulTypedName",
																				"src": "4465:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4681:27:6",
																			"nodeType": "YulBlock",
																			"src": "4681:27:6",
																			"statements": [
																				{
																					"nativeSrc": "4683:23:6",
																					"nodeType": "YulAssignment",
																					"src": "4683:23:6",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4698:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "4698:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4683:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "4683:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4665:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "4665:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4677:2:6",
																					"nodeType": "YulLiteral",
																					"src": "4677:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4662:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "4662:2:6"
																			},
																			"nativeSrc": "4662:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4662:18:6"
																		},
																		"nativeSrc": "4659:49:6",
																		"nodeType": "YulIf",
																		"src": "4659:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4750:11:6",
																					"nodeType": "YulIdentifier",
																					"src": "4750:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4767:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "4767:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4795:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "4795:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4777:17:6",
																								"nodeType": "YulIdentifier",
																								"src": "4777:17:6"
																							},
																							"nativeSrc": "4777:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "4777:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4763:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4763:3:6"
																					},
																					"nativeSrc": "4763:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4763:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4721:28:6",
																				"nodeType": "YulIdentifier",
																				"src": "4721:28:6"
																			},
																			"nativeSrc": "4721:80:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4721:80:6"
																		},
																		"nativeSrc": "4721:80:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4721:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4371:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4371:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4376:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4376:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4368:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4368:2:6"
																},
																"nativeSrc": "4368:11:6",
																"nodeType": "YulFunctionCall",
																"src": "4368:11:6"
															},
															"nativeSrc": "4365:446:6",
															"nodeType": "YulIf",
															"src": "4365:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4275:543:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4330:5:6",
														"nodeType": "YulTypedName",
														"src": "4330:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4337:3:6",
														"nodeType": "YulTypedName",
														"src": "4337:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4342:10:6",
														"nodeType": "YulTypedName",
														"src": "4342:10:6",
														"type": ""
													}
												],
												"src": "4275:543:6"
											},
											{
												"body": {
													"nativeSrc": "4887:54:6",
													"nodeType": "YulBlock",
													"src": "4887:54:6",
													"statements": [
														{
															"nativeSrc": "4897:37:6",
															"nodeType": "YulAssignment",
															"src": "4897:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4922:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4922:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4928:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4928:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4918:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4918:3:6"
																},
																"nativeSrc": "4918:16:6",
																"nodeType": "YulFunctionCall",
																"src": "4918:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4897:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "4897:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4824:117:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4862:4:6",
														"nodeType": "YulTypedName",
														"src": "4862:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4868:5:6",
														"nodeType": "YulTypedName",
														"src": "4868:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4878:8:6",
														"nodeType": "YulTypedName",
														"src": "4878:8:6",
														"type": ""
													}
												],
												"src": "4824:117:6"
											},
											{
												"body": {
													"nativeSrc": "4998:118:6",
													"nodeType": "YulBlock",
													"src": "4998:118:6",
													"statements": [
														{
															"nativeSrc": "5008:68:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5008:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5057:1:6",
																						"nodeType": "YulLiteral",
																						"src": "5057:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "5060:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "5060:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5053:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5053:3:6"
																				},
																				"nativeSrc": "5053:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5053:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "5072:1:6",
																						"nodeType": "YulLiteral",
																						"src": "5072:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "5068:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5068:3:6"
																				},
																				"nativeSrc": "5068:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5068:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "5024:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "5024:28:6"
																		},
																		"nativeSrc": "5024:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5024:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "5020:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5020:3:6"
																},
																"nativeSrc": "5020:56:6",
																"nodeType": "YulFunctionCall",
																"src": "5020:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "5012:4:6",
																	"nodeType": "YulTypedName",
																	"src": "5012:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5085:25:6",
															"nodeType": "YulAssignment",
															"src": "5085:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5099:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5099:4:6"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "5105:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5105:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5095:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5095:3:6"
																},
																"nativeSrc": "5095:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5095:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "5085:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5085:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4947:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4975:4:6",
														"nodeType": "YulTypedName",
														"src": "4975:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4981:5:6",
														"nodeType": "YulTypedName",
														"src": "4981:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4991:6:6",
														"nodeType": "YulTypedName",
														"src": "4991:6:6",
														"type": ""
													}
												],
												"src": "4947:169:6"
											},
											{
												"body": {
													"nativeSrc": "5202:214:6",
													"nodeType": "YulBlock",
													"src": "5202:214:6",
													"statements": [
														{
															"nativeSrc": "5335:37:6",
															"nodeType": "YulAssignment",
															"src": "5335:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5362:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5362:4:6"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5368:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5368:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5343:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "5343:18:6"
																},
																"nativeSrc": "5343:29:6",
																"nodeType": "YulFunctionCall",
																"src": "5343:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5335:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5335:4:6"
																}
															]
														},
														{
															"nativeSrc": "5381:29:6",
															"nodeType": "YulAssignment",
															"src": "5381:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5392:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5392:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5402:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5402:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5405:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5405:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5398:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5398:3:6"
																		},
																		"nativeSrc": "5398:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5398:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5389:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5389:2:6"
																},
																"nativeSrc": "5389:21:6",
																"nodeType": "YulFunctionCall",
																"src": "5389:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5381:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5381:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "5121:295:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5183:4:6",
														"nodeType": "YulTypedName",
														"src": "5183:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5189:3:6",
														"nodeType": "YulTypedName",
														"src": "5189:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "5197:4:6",
														"nodeType": "YulTypedName",
														"src": "5197:4:6",
														"type": ""
													}
												],
												"src": "5121:295:6"
											},
											{
												"body": {
													"nativeSrc": "5513:1303:6",
													"nodeType": "YulBlock",
													"src": "5513:1303:6",
													"statements": [
														{
															"nativeSrc": "5524:51:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5524:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5571:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "5571:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5538:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "5538:32:6"
																},
																"nativeSrc": "5538:37:6",
																"nodeType": "YulFunctionCall",
																"src": "5538:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5528:6:6",
																	"nodeType": "YulTypedName",
																	"src": "5528:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5660:22:6",
																"nodeType": "YulBlock",
																"src": "5660:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5662:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "5662:16:6"
																			},
																			"nativeSrc": "5662:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5662:18:6"
																		},
																		"nativeSrc": "5662:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5662:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5632:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5632:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5640:18:6",
																		"nodeType": "YulLiteral",
																		"src": "5640:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5629:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5629:2:6"
																},
																"nativeSrc": "5629:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5629:30:6"
															},
															"nativeSrc": "5626:56:6",
															"nodeType": "YulIf",
															"src": "5626:56:6"
														},
														{
															"nativeSrc": "5692:52:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5692:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5738:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5738:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5732:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "5732:5:6"
																		},
																		"nativeSrc": "5732:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5732:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5706:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "5706:25:6"
																},
																"nativeSrc": "5706:38:6",
																"nodeType": "YulFunctionCall",
																"src": "5706:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5696:6:6",
																	"nodeType": "YulTypedName",
																	"src": "5696:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5837:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5837:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5843:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5843:6:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5851:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5851:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5791:45:6",
																	"nodeType": "YulIdentifier",
																	"src": "5791:45:6"
																},
																"nativeSrc": "5791:67:6",
																"nodeType": "YulFunctionCall",
																"src": "5791:67:6"
															},
															"nativeSrc": "5791:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "5791:67:6"
														},
														{
															"nativeSrc": "5868:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5868:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "5885:1:6",
																"nodeType": "YulLiteral",
																"src": "5885:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5872:9:6",
																	"nodeType": "YulTypedName",
																	"src": "5872:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5896:17:6",
															"nodeType": "YulAssignment",
															"src": "5896:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "5909:4:6",
																"nodeType": "YulLiteral",
																"src": "5909:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5896:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "5896:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5960:611:6",
																		"nodeType": "YulBlock",
																		"src": "5960:611:6",
																		"statements": [
																			{
																				"nativeSrc": "5974:37:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5974:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5993:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "5993:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "6005:4:6",
																									"nodeType": "YulLiteral",
																									"src": "6005:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "6001:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "6001:3:6"
																							},
																							"nativeSrc": "6001:9:6",
																							"nodeType": "YulFunctionCall",
																							"src": "6001:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5989:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "5989:3:6"
																					},
																					"nativeSrc": "5989:22:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5989:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5978:7:6",
																						"nodeType": "YulTypedName",
																						"src": "5978:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6025:51:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6025:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6071:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "6071:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "6039:31:6",
																						"nodeType": "YulIdentifier",
																						"src": "6039:31:6"
																					},
																					"nativeSrc": "6039:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6039:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "6029:6:6",
																						"nodeType": "YulTypedName",
																						"src": "6029:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "6089:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6089:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6098:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6098:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "6093:1:6",
																						"nodeType": "YulTypedName",
																						"src": "6093:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6157:163:6",
																					"nodeType": "YulBlock",
																					"src": "6157:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6182:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "6182:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "6200:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "6200:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "6205:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "6205:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "6196:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "6196:3:6"
																												},
																												"nativeSrc": "6196:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "6196:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "6190:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "6190:5:6"
																										},
																										"nativeSrc": "6190:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "6190:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6175:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "6175:6:6"
																								},
																								"nativeSrc": "6175:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6175:42:6"
																							},
																							"nativeSrc": "6175:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "6175:42:6"
																						},
																						{
																							"nativeSrc": "6234:24:6",
																							"nodeType": "YulAssignment",
																							"src": "6234:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6248:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "6248:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6256:1:6",
																										"nodeType": "YulLiteral",
																										"src": "6256:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6244:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "6244:3:6"
																								},
																								"nativeSrc": "6244:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6244:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "6234:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "6234:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6275:31:6",
																							"nodeType": "YulAssignment",
																							"src": "6275:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6292:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "6292:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6303:2:6",
																										"nodeType": "YulLiteral",
																										"src": "6303:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6288:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "6288:3:6"
																								},
																								"nativeSrc": "6288:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6288:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6275:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "6275:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "6123:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "6123:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6126:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "6126:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6120:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "6120:2:6"
																					},
																					"nativeSrc": "6120:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6120:14:6"
																				},
																				"nativeSrc": "6112:208:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "6135:21:6",
																					"nodeType": "YulBlock",
																					"src": "6135:21:6",
																					"statements": [
																						{
																							"nativeSrc": "6137:17:6",
																							"nodeType": "YulAssignment",
																							"src": "6137:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "6146:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "6146:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6149:4:6",
																										"nodeType": "YulLiteral",
																										"src": "6149:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6142:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "6142:3:6"
																								},
																								"nativeSrc": "6142:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6142:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "6137:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "6137:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "6116:3:6",
																					"nodeType": "YulBlock",
																					"src": "6116:3:6",
																					"statements": []
																				},
																				"src": "6112:208:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "6356:156:6",
																					"nodeType": "YulBlock",
																					"src": "6356:156:6",
																					"statements": [
																						{
																							"nativeSrc": "6374:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6374:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6401:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "6401:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6406:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "6406:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6397:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "6397:3:6"
																										},
																										"nativeSrc": "6397:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "6397:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6391:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "6391:5:6"
																								},
																								"nativeSrc": "6391:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6391:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6378:9:6",
																									"nodeType": "YulTypedName",
																									"src": "6378:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6441:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "6441:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6468:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "6468:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6483:6:6",
																														"nodeType": "YulIdentifier",
																														"src": "6483:6:6"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6491:4:6",
																														"nodeType": "YulLiteral",
																														"src": "6491:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6479:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "6479:3:6"
																												},
																												"nativeSrc": "6479:17:6",
																												"nodeType": "YulFunctionCall",
																												"src": "6479:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6449:18:6",
																											"nodeType": "YulIdentifier",
																											"src": "6449:18:6"
																										},
																										"nativeSrc": "6449:48:6",
																										"nodeType": "YulFunctionCall",
																										"src": "6449:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6434:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "6434:6:6"
																								},
																								"nativeSrc": "6434:64:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6434:64:6"
																							},
																							"nativeSrc": "6434:64:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "6434:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6339:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "6339:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6348:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "6348:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6336:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "6336:2:6"
																					},
																					"nativeSrc": "6336:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6336:19:6"
																				},
																				"nativeSrc": "6333:179:6",
																				"nodeType": "YulIf",
																				"src": "6333:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6532:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "6532:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6546:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "6546:6:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6554:1:6",
																											"nodeType": "YulLiteral",
																											"src": "6554:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6542:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "6542:3:6"
																									},
																									"nativeSrc": "6542:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "6542:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6558:1:6",
																									"nodeType": "YulLiteral",
																									"src": "6558:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6538:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "6538:3:6"
																							},
																							"nativeSrc": "6538:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "6538:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6525:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6525:6:6"
																					},
																					"nativeSrc": "6525:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6525:36:6"
																				},
																				"nativeSrc": "6525:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "6525:36:6"
																			}
																		]
																	},
																	"nativeSrc": "5953:618:6",
																	"nodeType": "YulCase",
																	"src": "5953:618:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5958:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5958:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6588:222:6",
																		"nodeType": "YulBlock",
																		"src": "6588:222:6",
																		"statements": [
																			{
																				"nativeSrc": "6602:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6602:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6615:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6615:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6606:5:6",
																						"nodeType": "YulTypedName",
																						"src": "6606:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6639:67:6",
																					"nodeType": "YulBlock",
																					"src": "6639:67:6",
																					"statements": [
																						{
																							"nativeSrc": "6657:35:6",
																							"nodeType": "YulAssignment",
																							"src": "6657:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6676:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "6676:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6681:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "6681:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6672:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "6672:3:6"
																										},
																										"nativeSrc": "6672:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "6672:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6666:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "6666:5:6"
																								},
																								"nativeSrc": "6666:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6666:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6657:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "6657:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6632:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "6632:6:6"
																				},
																				"nativeSrc": "6629:77:6",
																				"nodeType": "YulIf",
																				"src": "6629:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6726:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "6726:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6785:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "6785:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6792:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "6792:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6732:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "6732:52:6"
																							},
																							"nativeSrc": "6732:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "6732:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6719:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6719:6:6"
																					},
																					"nativeSrc": "6719:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6719:81:6"
																				},
																				"nativeSrc": "6719:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "6719:81:6"
																			}
																		]
																	},
																	"nativeSrc": "6580:230:6",
																	"nodeType": "YulCase",
																	"src": "6580:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5933:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5933:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5941:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5941:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5930:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5930:2:6"
																},
																"nativeSrc": "5930:14:6",
																"nodeType": "YulFunctionCall",
																"src": "5930:14:6"
															},
															"nativeSrc": "5923:887:6",
															"nodeType": "YulSwitch",
															"src": "5923:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5421:1395:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5502:4:6",
														"nodeType": "YulTypedName",
														"src": "5502:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5508:3:6",
														"nodeType": "YulTypedName",
														"src": "5508:3:6",
														"type": ""
													}
												],
												"src": "5421:1395:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$1295(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$1295(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$1295(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$1295_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$1295(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$1295t_contract$_IERC20_$1295_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$1295_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$1295_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506040516128b33803806128b3833981810160405281019061003191906101b5565b6040518060400160405280600a81526020017f53696d706c6553776170000000000000000000000000000000000000000000008152506040518060400160405280600281526020017f535300000000000000000000000000000000000000000000000000000000000081525081600390816100ac919061042d565b5080600490816100bc919061042d565b5050508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506104fc565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101738261014a565b9050919050565b5f61018482610169565b9050919050565b6101948161017a565b811461019e575f80fd5b50565b5f815190506101af8161018b565b92915050565b5f80604083850312156101cb576101ca610146565b5b5f6101d8858286016101a1565b92505060206101e9858286016101a1565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061026e57607f821691505b6020821081036102815761028061022a565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026102e37fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826102a8565b6102ed86836102a8565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61033161032c61032784610305565b61030e565b610305565b9050919050565b5f819050919050565b61034a83610317565b61035e61035682610338565b8484546102b4565b825550505050565b5f90565b610372610366565b61037d818484610341565b505050565b5b818110156103a0576103955f8261036a565b600181019050610383565b5050565b601f8211156103e5576103b681610287565b6103bf84610299565b810160208510156103ce578190505b6103e26103da85610299565b830182610382565b50505b505050565b5f82821c905092915050565b5f6104055f19846008026103ea565b1980831691505092915050565b5f61041d83836103f6565b9150826002028217905092915050565b610436826101f3565b67ffffffffffffffff81111561044f5761044e6101fd565b5b6104598254610257565b6104648282856103a4565b5f60209050601f831160018114610495575f8415610483578287015190505b61048d8582610412565b8655506104f4565b601f1984166104a386610287565b5f5b828110156104ca578489015182556001820191506020850194506020810190506104a5565b868310156104e757848901516104e3601f8916826103f6565b8355505b6001600288020188555050505b505050505050565b6123aa806105095f395ff3fe608060405234801561000f575f80fd5b5060043610610109575f3560e01c80634543c7cf116100a05780639cd441da1161006f5780639cd441da146102e3578063a9059cbb14610313578063d21220a714610343578063dd62ed3e14610361578063f000ead91461039157610109565b80634543c7cf1461024657806370a082311461026457806395d89b41146102945780639c8f9f23146102b257610109565b806318160ddd116100dc57806318160ddd146101a957806323b872dd146101c7578063313ce567146101f7578063432643491461021557610109565b8063054d50d41461010d57806306fdde031461013d578063095ea7b31461015b5780630dfe16811461018b575b5f80fd5b61012760048036038101906101229190611c13565b6103af565b6040516101349190611c72565b60405180910390f35b6101456103fc565b6040516101529190611cfb565b60405180910390f35b61017560048036038101906101709190611d75565b61048c565b6040516101829190611dcd565b60405180910390f35b6101936104ae565b6040516101a09190611e41565b60405180910390f35b6101b16104d3565b6040516101be9190611c72565b60405180910390f35b6101e160048036038101906101dc9190611e5a565b6104dc565b6040516101ee9190611dcd565b60405180910390f35b6101ff61050a565b60405161020c9190611ec5565b60405180910390f35b61022f600480360381019061022a9190611f19565b610512565b60405161023d929190611f69565b60405180910390f35b61024e610b68565b60405161025b9190611c72565b60405180910390f35b61027e60048036038101906102799190611f90565b610b6e565b60405161028b9190611c72565b60405180910390f35b61029c610bb3565b6040516102a99190611cfb565b60405180910390f35b6102cc60048036038101906102c79190611fbb565b610c43565b6040516102da929190611fe6565b60405180910390f35b6102fd60048036038101906102f8919061200d565b6110aa565b60405161030a9190611c72565b60405180910390f35b61032d60048036038101906103289190611d75565b6113fd565b60405161033a9190611dcd565b60405180910390f35b61034b61141f565b6040516103589190611e41565b60405180910390f35b61037b6004803603810190610376919061204b565b611444565b6040516103889190611c72565b60405180910390f35b6103996114c6565b6040516103a69190611c72565b60405180910390f35b5f8084116103bb575f80fd5b5f831180156103c957505f82115b6103d1575f80fd5b83836103dd91906120b6565b82856103e991906120e9565b6103f39190612157565b90509392505050565b60606003805461040b906121b4565b80601f0160208091040260200160405190810160405280929190818152602001828054610437906121b4565b80156104825780601f1061045957610100808354040283529160200191610482565b820191905f5260205f20905b81548152906001019060200180831161046557829003601f168201915b5050505050905090565b5f806104966114cc565b90506104a38185856114d3565b600191505092915050565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f600254905090565b5f806104e66114cc565b90506104f38582856114e5565b6104fe858585611577565b60019150509392505050565b5f6012905090565b5f805f851161051f575f80fd5b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806105c6575060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16145b6105ce575f80fd5b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161062991906121f3565b602060405180830381865afa158015610644573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106689190612220565b90505f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016106c591906121f3565b602060405180830381865afa1580156106e0573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107049190612220565b905060055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16036108955760065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1692506107898783836103af565b9350848411610796575f80fd5b8573ffffffffffffffffffffffffffffffffffffffff166323b872dd33308a6040518463ffffffff1660e01b81526004016107d39392919061224b565b6020604051808303815f875af11580156107ef573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061081391906122aa565b508273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b815260040161084f9291906122d5565b6020604051808303815f875af115801561086b573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061088f91906122aa565b506109cc565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1695506108c48782846103af565b93508484116108d1575f80fd5b8573ffffffffffffffffffffffffffffffffffffffff166323b872dd33308a6040518463ffffffff1660e01b815260040161090e9392919061224b565b6020604051808303815f875af115801561092a573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061094e91906122aa565b508273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b815260040161098a9291906122d5565b6020604051808303815f875af11580156109a6573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906109ca91906122aa565b505b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a2691906121f3565b602060405180830381865afa158015610a41573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a659190612220565b60078190555060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610ac591906121f3565b602060405180830381865afa158015610ae0573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b049190612220565b6008819055503373ffffffffffffffffffffffffffffffffffffffff167f24043855bfbfea0ccea141e5a73d7116bf0bfe083ea900a791f4b407ff03e52588888787604051610b5694939291906122fc565b60405180910390a25050935093915050565b60075481565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b606060048054610bc2906121b4565b80601f0160208091040260200160405190810160405280929190818152602001828054610bee906121b4565b8015610c395780601f10610c1057610100808354040283529160200191610c39565b820191905f5260205f20905b815481529060010190602001808311610c1c57829003601f168201915b5050505050905090565b5f805f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610ca091906121f3565b602060405180830381865afa158015610cbb573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610cdf9190612220565b90505f60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610d3c91906121f3565b602060405180830381865afa158015610d57573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d7b9190612220565b90505f610d866104d3565b9050808387610d9591906120e9565b610d9f9190612157565b9450808287610dae91906120e9565b610db89190612157565b93505f85118015610dc857505f84115b610dd0575f80fd5b610dda3387611667565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33876040518363ffffffff1660e01b8152600401610e369291906122d5565b6020604051808303815f875af1158015610e52573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610e7691906122aa565b5060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33866040518363ffffffff1660e01b8152600401610ed39291906122d5565b6020604051808303815f875af1158015610eef573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610f1391906122aa565b5060055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610f6e91906121f3565b602060405180830381865afa158015610f89573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fad9190612220565b60078190555060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161100d91906121f3565b602060405180830381865afa158015611028573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061104c9190612220565b6008819055503373ffffffffffffffffffffffffffffffffffffffff167f49995e5dd6158cf69ad3e9777c46755a1a826a446c6416992167462dad033b2a868660405161109a929190611fe6565b60405180910390a2505050915091565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330866040518463ffffffff1660e01b81526004016111099392919061224b565b6020604051808303815f875af1158015611125573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061114991906122aa565b5060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016111a89392919061224b565b6020604051808303815f875af11580156111c4573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906111e891906122aa565b505f6111f26104d3565b90505f81036112165761120f838561120a91906120e9565b6116e6565b9150611253565b611250600754828661122891906120e9565b6112329190612157565b600854838661124191906120e9565b61124b9190612157565b61175d565b91505b5f821161125e575f80fd5b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016112b891906121f3565b602060405180830381865afa1580156112d3573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112f79190612220565b60078190555060065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161135791906121f3565b602060405180830381865afa158015611372573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906113969190612220565b6008819055506113a63383611775565b3373ffffffffffffffffffffffffffffffffffffffff167f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f85856040516113ee929190611fe6565b60405180910390a25092915050565b5f806114076114cc565b9050611414818585611577565b600191505092915050565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b60085481565b5f33905090565b6114e083838360016117f4565b505050565b5f6114f08484611444565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146115715781811015611562578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016115599392919061233f565b60405180910390fd5b61157084848484035f6117f4565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036115e7575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016115de91906121f3565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611657575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161164e91906121f3565b60405180910390fd5b6116628383836119c3565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036116d7575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016116ce91906121f3565b60405180910390fd5b6116e2825f836119c3565b5050565b5f600382111561174b578190505f60016002846117039190612157565b61170d91906120b6565b90505b8181101561174557809150600281828561172a9190612157565b61173491906120b6565b61173e9190612157565b9050611710565b50611758565b5f821461175757600190505b5b919050565b5f81831161176b578261176d565b815b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036117e5575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016117dc91906121f3565b60405180910390fd5b6117f05f83836119c3565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611864575f6040517fe602df0500000000000000000000000000000000000000000000000000000000815260040161185b91906121f3565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036118d4575f6040517f94280d620000000000000000000000000000000000000000000000000000000081526004016118cb91906121f3565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555080156119bd578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516119b49190611c72565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a13578060025f828254611a0791906120b6565b92505081905550611ae1565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611a9c578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611a939392919061233f565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611b28578060025f8282540392505081905550611b72565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611bcf9190611c72565b60405180910390a3505050565b5f80fd5b5f819050919050565b611bf281611be0565b8114611bfc575f80fd5b50565b5f81359050611c0d81611be9565b92915050565b5f805f60608486031215611c2a57611c29611bdc565b5b5f611c3786828701611bff565b9350506020611c4886828701611bff565b9250506040611c5986828701611bff565b9150509250925092565b611c6c81611be0565b82525050565b5f602082019050611c855f830184611c63565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611ccd82611c8b565b611cd78185611c95565b9350611ce7818560208601611ca5565b611cf081611cb3565b840191505092915050565b5f6020820190508181035f830152611d138184611cc3565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611d4482611d1b565b9050919050565b611d5481611d3a565b8114611d5e575f80fd5b50565b5f81359050611d6f81611d4b565b92915050565b5f8060408385031215611d8b57611d8a611bdc565b5b5f611d9885828601611d61565b9250506020611da985828601611bff565b9150509250929050565b5f8115159050919050565b611dc781611db3565b82525050565b5f602082019050611de05f830184611dbe565b92915050565b5f819050919050565b5f611e09611e04611dff84611d1b565b611de6565b611d1b565b9050919050565b5f611e1a82611def565b9050919050565b5f611e2b82611e10565b9050919050565b611e3b81611e21565b82525050565b5f602082019050611e545f830184611e32565b92915050565b5f805f60608486031215611e7157611e70611bdc565b5b5f611e7e86828701611d61565b9350506020611e8f86828701611d61565b9250506040611ea086828701611bff565b9150509250925092565b5f60ff82169050919050565b611ebf81611eaa565b82525050565b5f602082019050611ed85f830184611eb6565b92915050565b5f611ee882611d3a565b9050919050565b611ef881611ede565b8114611f02575f80fd5b50565b5f81359050611f1381611eef565b92915050565b5f805f60608486031215611f3057611f2f611bdc565b5b5f611f3d86828701611bff565b9350506020611f4e86828701611f05565b9250506040611f5f86828701611bff565b9150509250925092565b5f604082019050611f7c5f830185611c63565b611f896020830184611e32565b9392505050565b5f60208284031215611fa557611fa4611bdc565b5b5f611fb284828501611d61565b91505092915050565b5f60208284031215611fd057611fcf611bdc565b5b5f611fdd84828501611bff565b91505092915050565b5f604082019050611ff95f830185611c63565b6120066020830184611c63565b9392505050565b5f806040838503121561202357612022611bdc565b5b5f61203085828601611bff565b925050602061204185828601611bff565b9150509250929050565b5f806040838503121561206157612060611bdc565b5b5f61206e85828601611d61565b925050602061207f85828601611d61565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6120c082611be0565b91506120cb83611be0565b92508282019050808211156120e3576120e2612089565b5b92915050565b5f6120f382611be0565b91506120fe83611be0565b925082820261210c81611be0565b9150828204841483151761212357612122612089565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61216182611be0565b915061216c83611be0565b92508261217c5761217b61212a565b5b828204905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806121cb57607f821691505b6020821081036121de576121dd612187565b5b50919050565b6121ed81611d3a565b82525050565b5f6020820190506122065f8301846121e4565b92915050565b5f8151905061221a81611be9565b92915050565b5f6020828403121561223557612234611bdc565b5b5f6122428482850161220c565b91505092915050565b5f60608201905061225e5f8301866121e4565b61226b60208301856121e4565b6122786040830184611c63565b949350505050565b61228981611db3565b8114612293575f80fd5b50565b5f815190506122a481612280565b92915050565b5f602082840312156122bf576122be611bdc565b5b5f6122cc84828501612296565b91505092915050565b5f6040820190506122e85f8301856121e4565b6122f56020830184611c63565b9392505050565b5f60808201905061230f5f830187611c63565b61231c60208301866121e4565b6123296040830185611c63565b61233660608301846121e4565b95945050505050565b5f6060820190506123525f8301866121e4565b61235f6020830185611c63565b61236c6040830184611c63565b94935050505056fea2646970667358221220355687e0160e5326a04cbb9176f530046cddce93542fce638fd45216848759d264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x28B3 CODESIZE SUB DUP1 PUSH2 0x28B3 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x1B5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x53696D706C655377617000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5353000000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x42D JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x42D JUMP JUMPDEST POP POP POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x4FC JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x173 DUP3 PUSH2 0x14A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x184 DUP3 PUSH2 0x169 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x194 DUP2 PUSH2 0x17A JUMP JUMPDEST DUP2 EQ PUSH2 0x19E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1AF DUP2 PUSH2 0x18B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1CB JUMPI PUSH2 0x1CA PUSH2 0x146 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D8 DUP6 DUP3 DUP7 ADD PUSH2 0x1A1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E9 DUP6 DUP3 DUP7 ADD PUSH2 0x1A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x26E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x281 JUMPI PUSH2 0x280 PUSH2 0x22A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2E3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2A8 JUMP JUMPDEST PUSH2 0x2ED DUP7 DUP4 PUSH2 0x2A8 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x331 PUSH2 0x32C PUSH2 0x327 DUP5 PUSH2 0x305 JUMP JUMPDEST PUSH2 0x30E JUMP JUMPDEST PUSH2 0x305 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34A DUP4 PUSH2 0x317 JUMP JUMPDEST PUSH2 0x35E PUSH2 0x356 DUP3 PUSH2 0x338 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2B4 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x372 PUSH2 0x366 JUMP JUMPDEST PUSH2 0x37D DUP2 DUP5 DUP5 PUSH2 0x341 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3A0 JUMPI PUSH2 0x395 PUSH0 DUP3 PUSH2 0x36A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x383 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3E5 JUMPI PUSH2 0x3B6 DUP2 PUSH2 0x287 JUMP JUMPDEST PUSH2 0x3BF DUP5 PUSH2 0x299 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3CE JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3E2 PUSH2 0x3DA DUP6 PUSH2 0x299 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x382 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x405 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3EA JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x41D DUP4 DUP4 PUSH2 0x3F6 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x436 DUP3 PUSH2 0x1F3 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x44F JUMPI PUSH2 0x44E PUSH2 0x1FD JUMP JUMPDEST JUMPDEST PUSH2 0x459 DUP3 SLOAD PUSH2 0x257 JUMP JUMPDEST PUSH2 0x464 DUP3 DUP3 DUP6 PUSH2 0x3A4 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x495 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x483 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x48D DUP6 DUP3 PUSH2 0x412 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x4F4 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4A3 DUP7 PUSH2 0x287 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4CA JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4A5 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x4E7 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4E3 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3F6 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x23AA DUP1 PUSH2 0x509 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4543C7CF GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x9CD441DA GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0xF000EAD9 EQ PUSH2 0x391 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x4543C7CF EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x2B2 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x43264349 EQ PUSH2 0x215 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x54D50D4 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x18B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1C13 JUMP JUMPDEST PUSH2 0x3AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x1C72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH2 0x48C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x1DCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1E41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x1C72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x1E5A JUMP JUMPDEST PUSH2 0x4DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x1DCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH2 0x50A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x1EC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x1F19 JUMP JUMPDEST PUSH2 0x512 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP3 SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH2 0xB68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x1C72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x1F90 JUMP JUMPDEST PUSH2 0xB6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x1C72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH2 0xBB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST PUSH2 0xC43 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP3 SWAP2 SWAP1 PUSH2 0x1FE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x200D JUMP JUMPDEST PUSH2 0x10AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x1C72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH2 0x13FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x1DCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34B PUSH2 0x141F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x1E41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x204B JUMP JUMPDEST PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x388 SWAP2 SWAP1 PUSH2 0x1C72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x399 PUSH2 0x14C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x1C72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 DUP5 GT PUSH2 0x3BB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP4 GT DUP1 ISZERO PUSH2 0x3C9 JUMPI POP PUSH0 DUP3 GT JUMPDEST PUSH2 0x3D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH2 0x3DD SWAP2 SWAP1 PUSH2 0x20B6 JUMP JUMPDEST DUP3 DUP6 PUSH2 0x3E9 SWAP2 SWAP1 PUSH2 0x20E9 JUMP JUMPDEST PUSH2 0x3F3 SWAP2 SWAP1 PUSH2 0x2157 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x40B SWAP1 PUSH2 0x21B4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x437 SWAP1 PUSH2 0x21B4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x482 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x459 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x482 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x465 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x496 PUSH2 0x14CC JUMP JUMPDEST SWAP1 POP PUSH2 0x4A3 DUP2 DUP6 DUP6 PUSH2 0x14D3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4E6 PUSH2 0x14CC JUMP JUMPDEST SWAP1 POP PUSH2 0x4F3 DUP6 DUP3 DUP6 PUSH2 0x14E5 JUMP JUMPDEST PUSH2 0x4FE DUP6 DUP6 DUP6 PUSH2 0x1577 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 GT PUSH2 0x51F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5C6 JUMPI POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x5CE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x629 SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x644 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x668 SWAP2 SWAP1 PUSH2 0x2220 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C5 SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6E0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x704 SWAP2 SWAP1 PUSH2 0x2220 JUMP JUMPDEST SWAP1 POP PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x895 JUMPI PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP PUSH2 0x789 DUP8 DUP4 DUP4 PUSH2 0x3AF JUMP JUMPDEST SWAP4 POP DUP5 DUP5 GT PUSH2 0x796 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP11 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x224B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7EF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x813 SWAP2 SWAP1 PUSH2 0x22AA JUMP JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84F SWAP3 SWAP2 SWAP1 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x86B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x88F SWAP2 SWAP1 PUSH2 0x22AA JUMP JUMPDEST POP PUSH2 0x9CC JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP6 POP PUSH2 0x8C4 DUP8 DUP3 DUP5 PUSH2 0x3AF JUMP JUMPDEST SWAP4 POP DUP5 DUP5 GT PUSH2 0x8D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP11 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x224B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x92A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x94E SWAP2 SWAP1 PUSH2 0x22AA JUMP JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98A SWAP3 SWAP2 SWAP1 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9A6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9CA SWAP2 SWAP1 PUSH2 0x22AA JUMP JUMPDEST POP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA26 SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA41 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA65 SWAP2 SWAP1 PUSH2 0x2220 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC5 SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAE0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB04 SWAP2 SWAP1 PUSH2 0x2220 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x24043855BFBFEA0CCEA141E5A73D7116BF0BFE083EA900A791F4B407FF03E525 DUP9 DUP9 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xB56 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xBC2 SWAP1 PUSH2 0x21B4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBEE SWAP1 PUSH2 0x21B4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC39 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC10 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC39 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC1C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA0 SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCBB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCDF SWAP2 SWAP1 PUSH2 0x2220 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD3C SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD57 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD7B SWAP2 SWAP1 PUSH2 0x2220 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xD86 PUSH2 0x4D3 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP8 PUSH2 0xD95 SWAP2 SWAP1 PUSH2 0x20E9 JUMP JUMPDEST PUSH2 0xD9F SWAP2 SWAP1 PUSH2 0x2157 JUMP JUMPDEST SWAP5 POP DUP1 DUP3 DUP8 PUSH2 0xDAE SWAP2 SWAP1 PUSH2 0x20E9 JUMP JUMPDEST PUSH2 0xDB8 SWAP2 SWAP1 PUSH2 0x2157 JUMP JUMPDEST SWAP4 POP PUSH0 DUP6 GT DUP1 ISZERO PUSH2 0xDC8 JUMPI POP PUSH0 DUP5 GT JUMPDEST PUSH2 0xDD0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xDDA CALLER DUP8 PUSH2 0x1667 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE36 SWAP3 SWAP2 SWAP1 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE52 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE76 SWAP2 SWAP1 PUSH2 0x22AA JUMP JUMPDEST POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED3 SWAP3 SWAP2 SWAP1 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEEF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF13 SWAP2 SWAP1 PUSH2 0x22AA JUMP JUMPDEST POP PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF6E SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF89 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFAD SWAP2 SWAP1 PUSH2 0x2220 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100D SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1028 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x104C SWAP2 SWAP1 PUSH2 0x2220 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x49995E5DD6158CF69AD3E9777C46755A1A826A446C6416992167462DAD033B2A DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x109A SWAP3 SWAP2 SWAP1 PUSH2 0x1FE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1109 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x224B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1125 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1149 SWAP2 SWAP1 PUSH2 0x22AA JUMP JUMPDEST POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x224B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11C4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11E8 SWAP2 SWAP1 PUSH2 0x22AA JUMP JUMPDEST POP PUSH0 PUSH2 0x11F2 PUSH2 0x4D3 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x1216 JUMPI PUSH2 0x120F DUP4 DUP6 PUSH2 0x120A SWAP2 SWAP1 PUSH2 0x20E9 JUMP JUMPDEST PUSH2 0x16E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1253 JUMP JUMPDEST PUSH2 0x1250 PUSH1 0x7 SLOAD DUP3 DUP7 PUSH2 0x1228 SWAP2 SWAP1 PUSH2 0x20E9 JUMP JUMPDEST PUSH2 0x1232 SWAP2 SWAP1 PUSH2 0x2157 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP4 DUP7 PUSH2 0x1241 SWAP2 SWAP1 PUSH2 0x20E9 JUMP JUMPDEST PUSH2 0x124B SWAP2 SWAP1 PUSH2 0x2157 JUMP JUMPDEST PUSH2 0x175D JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH0 DUP3 GT PUSH2 0x125E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B8 SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12D3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12F7 SWAP2 SWAP1 PUSH2 0x2220 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1357 SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1372 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1396 SWAP2 SWAP1 PUSH2 0x2220 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x13A6 CALLER DUP4 PUSH2 0x1775 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x13EE SWAP3 SWAP2 SWAP1 PUSH2 0x1FE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1407 PUSH2 0x14CC JUMP JUMPDEST SWAP1 POP PUSH2 0x1414 DUP2 DUP6 DUP6 PUSH2 0x1577 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x14E0 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x17F4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14F0 DUP5 DUP5 PUSH2 0x1444 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1571 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1562 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1559 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x233F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1570 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x17F4 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15E7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15DE SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1657 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x164E SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1662 DUP4 DUP4 DUP4 PUSH2 0x19C3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16D7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16CE SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16E2 DUP3 PUSH0 DUP4 PUSH2 0x19C3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x174B JUMPI DUP2 SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0x1703 SWAP2 SWAP1 PUSH2 0x2157 JUMP JUMPDEST PUSH2 0x170D SWAP2 SWAP1 PUSH2 0x20B6 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1745 JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 PUSH2 0x172A SWAP2 SWAP1 PUSH2 0x2157 JUMP JUMPDEST PUSH2 0x1734 SWAP2 SWAP1 PUSH2 0x20B6 JUMP JUMPDEST PUSH2 0x173E SWAP2 SWAP1 PUSH2 0x2157 JUMP JUMPDEST SWAP1 POP PUSH2 0x1710 JUMP JUMPDEST POP PUSH2 0x1758 JUMP JUMPDEST PUSH0 DUP3 EQ PUSH2 0x1757 JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 GT PUSH2 0x176B JUMPI DUP3 PUSH2 0x176D JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17E5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17DC SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17F0 PUSH0 DUP4 DUP4 PUSH2 0x19C3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1864 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x185B SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18D4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18CB SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x19BD JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x19B4 SWAP2 SWAP1 PUSH2 0x1C72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A13 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1A07 SWAP2 SWAP1 PUSH2 0x20B6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1AE1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1A9C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A93 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x233F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B28 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1B72 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1BCF SWAP2 SWAP1 PUSH2 0x1C72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BF2 DUP2 PUSH2 0x1BE0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BFC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C0D DUP2 PUSH2 0x1BE9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C2A JUMPI PUSH2 0x1C29 PUSH2 0x1BDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C37 DUP7 DUP3 DUP8 ADD PUSH2 0x1BFF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C48 DUP7 DUP3 DUP8 ADD PUSH2 0x1BFF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C59 DUP7 DUP3 DUP8 ADD PUSH2 0x1BFF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1C6C DUP2 PUSH2 0x1BE0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C85 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CCD DUP3 PUSH2 0x1C8B JUMP JUMPDEST PUSH2 0x1CD7 DUP2 DUP6 PUSH2 0x1C95 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CE7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CA5 JUMP JUMPDEST PUSH2 0x1CF0 DUP2 PUSH2 0x1CB3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D13 DUP2 DUP5 PUSH2 0x1CC3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D44 DUP3 PUSH2 0x1D1B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D54 DUP2 PUSH2 0x1D3A JUMP JUMPDEST DUP2 EQ PUSH2 0x1D5E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D6F DUP2 PUSH2 0x1D4B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D8B JUMPI PUSH2 0x1D8A PUSH2 0x1BDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D98 DUP6 DUP3 DUP7 ADD PUSH2 0x1D61 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DA9 DUP6 DUP3 DUP7 ADD PUSH2 0x1BFF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DC7 DUP2 PUSH2 0x1DB3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DE0 PUSH0 DUP4 ADD DUP5 PUSH2 0x1DBE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E09 PUSH2 0x1E04 PUSH2 0x1DFF DUP5 PUSH2 0x1D1B JUMP JUMPDEST PUSH2 0x1DE6 JUMP JUMPDEST PUSH2 0x1D1B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E1A DUP3 PUSH2 0x1DEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E2B DUP3 PUSH2 0x1E10 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E3B DUP2 PUSH2 0x1E21 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E54 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E71 JUMPI PUSH2 0x1E70 PUSH2 0x1BDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E7E DUP7 DUP3 DUP8 ADD PUSH2 0x1D61 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1E8F DUP7 DUP3 DUP8 ADD PUSH2 0x1D61 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1EA0 DUP7 DUP3 DUP8 ADD PUSH2 0x1BFF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EBF DUP2 PUSH2 0x1EAA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ED8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1EB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EE8 DUP3 PUSH2 0x1D3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EF8 DUP2 PUSH2 0x1EDE JUMP JUMPDEST DUP2 EQ PUSH2 0x1F02 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F13 DUP2 PUSH2 0x1EEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F30 JUMPI PUSH2 0x1F2F PUSH2 0x1BDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F3D DUP7 DUP3 DUP8 ADD PUSH2 0x1BFF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F4E DUP7 DUP3 DUP8 ADD PUSH2 0x1F05 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F5F DUP7 DUP3 DUP8 ADD PUSH2 0x1BFF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F7C PUSH0 DUP4 ADD DUP6 PUSH2 0x1C63 JUMP JUMPDEST PUSH2 0x1F89 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E32 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FA5 JUMPI PUSH2 0x1FA4 PUSH2 0x1BDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FB2 DUP5 DUP3 DUP6 ADD PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FD0 JUMPI PUSH2 0x1FCF PUSH2 0x1BDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FDD DUP5 DUP3 DUP6 ADD PUSH2 0x1BFF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1FF9 PUSH0 DUP4 ADD DUP6 PUSH2 0x1C63 JUMP JUMPDEST PUSH2 0x2006 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C63 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2023 JUMPI PUSH2 0x2022 PUSH2 0x1BDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2030 DUP6 DUP3 DUP7 ADD PUSH2 0x1BFF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2041 DUP6 DUP3 DUP7 ADD PUSH2 0x1BFF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2061 JUMPI PUSH2 0x2060 PUSH2 0x1BDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x206E DUP6 DUP3 DUP7 ADD PUSH2 0x1D61 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x207F DUP6 DUP3 DUP7 ADD PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x20C0 DUP3 PUSH2 0x1BE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x20CB DUP4 PUSH2 0x1BE0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x20E3 JUMPI PUSH2 0x20E2 PUSH2 0x2089 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20F3 DUP3 PUSH2 0x1BE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x20FE DUP4 PUSH2 0x1BE0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x210C DUP2 PUSH2 0x1BE0 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2123 JUMPI PUSH2 0x2122 PUSH2 0x2089 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2161 DUP3 PUSH2 0x1BE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x216C DUP4 PUSH2 0x1BE0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x217C JUMPI PUSH2 0x217B PUSH2 0x212A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x21CB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x21DE JUMPI PUSH2 0x21DD PUSH2 0x2187 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21ED DUP2 PUSH2 0x1D3A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2206 PUSH0 DUP4 ADD DUP5 PUSH2 0x21E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x221A DUP2 PUSH2 0x1BE9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2235 JUMPI PUSH2 0x2234 PUSH2 0x1BDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2242 DUP5 DUP3 DUP6 ADD PUSH2 0x220C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x225E PUSH0 DUP4 ADD DUP7 PUSH2 0x21E4 JUMP JUMPDEST PUSH2 0x226B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x21E4 JUMP JUMPDEST PUSH2 0x2278 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C63 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2289 DUP2 PUSH2 0x1DB3 JUMP JUMPDEST DUP2 EQ PUSH2 0x2293 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x22A4 DUP2 PUSH2 0x2280 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22BF JUMPI PUSH2 0x22BE PUSH2 0x1BDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22CC DUP5 DUP3 DUP6 ADD PUSH2 0x2296 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x22E8 PUSH0 DUP4 ADD DUP6 PUSH2 0x21E4 JUMP JUMPDEST PUSH2 0x22F5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C63 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x230F PUSH0 DUP4 ADD DUP8 PUSH2 0x1C63 JUMP JUMPDEST PUSH2 0x231C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x21E4 JUMP JUMPDEST PUSH2 0x2329 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C63 JUMP JUMPDEST PUSH2 0x2336 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x21E4 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2352 PUSH0 DUP4 ADD DUP7 PUSH2 0x21E4 JUMP JUMPDEST PUSH2 0x235F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C63 JUMP JUMPDEST PUSH2 0x236C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C63 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD JUMP DUP8 0xE0 AND 0xE MSTORE8 0x26 LOG0 0x4C 0xBB SWAP2 PUSH23 0xF530046CDDCE93542FCE638FD45216848759D264736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "116:4252:0:-:0;;;675:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1896:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;764:7:0::1;755:6;;:16;;;;;;;;;;;;;;;;;;791:7;782:6;;:16;;;;;;;;;;;;;;;;;;675:131:::0;;116:4252;;88:117:6;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:111::-;620:7;649:24;667:5;649:24;:::i;:::-;638:35;;568:111;;;:::o;685:152::-;773:39;806:5;773:39;:::i;:::-;766:5;763:50;753:78;;827:1;824;817:12;753:78;685:152;:::o;843:173::-;915:5;946:6;940:13;931:22;;962:48;1004:5;962:48;:::i;:::-;843:173;;;;:::o;1022:567::-;1131:6;1139;1188:2;1176:9;1167:7;1163:23;1159:32;1156:119;;;1194:79;;:::i;:::-;1156:119;1314:1;1339:79;1410:7;1401:6;1390:9;1386:22;1339:79;:::i;:::-;1329:89;;1285:143;1467:2;1493:79;1564:7;1555:6;1544:9;1540:22;1493:79;:::i;:::-;1483:89;;1438:144;1022:567;;;;;:::o;1595:99::-;1647:6;1681:5;1675:12;1665:22;;1595:99;;;:::o;1700:180::-;1748:77;1745:1;1738:88;1845:4;1842:1;1835:15;1869:4;1866:1;1859:15;1886:180;1934:77;1931:1;1924:88;2031:4;2028:1;2021:15;2055:4;2052:1;2045:15;2072:320;2116:6;2153:1;2147:4;2143:12;2133:22;;2200:1;2194:4;2190:12;2221:18;2211:81;;2277:4;2269:6;2265:17;2255:27;;2211:81;2339:2;2331:6;2328:14;2308:18;2305:38;2302:84;;2358:18;;:::i;:::-;2302:84;2123:269;2072:320;;;:::o;2398:141::-;2447:4;2470:3;2462:11;;2493:3;2490:1;2483:14;2527:4;2524:1;2514:18;2506:26;;2398:141;;;:::o;2545:93::-;2582:6;2629:2;2624;2617:5;2613:14;2609:23;2599:33;;2545:93;;;:::o;2644:107::-;2688:8;2738:5;2732:4;2728:16;2707:37;;2644:107;;;;:::o;2757:393::-;2826:6;2876:1;2864:10;2860:18;2899:97;2929:66;2918:9;2899:97;:::i;:::-;3017:39;3047:8;3036:9;3017:39;:::i;:::-;3005:51;;3089:4;3085:9;3078:5;3074:21;3065:30;;3138:4;3128:8;3124:19;3117:5;3114:30;3104:40;;2833:317;;2757:393;;;;;:::o;3156:77::-;3193:7;3222:5;3211:16;;3156:77;;;:::o;3239:60::-;3267:3;3288:5;3281:12;;3239:60;;;:::o;3305:142::-;3355:9;3388:53;3406:34;3415:24;3433:5;3415:24;:::i;:::-;3406:34;:::i;:::-;3388:53;:::i;:::-;3375:66;;3305:142;;;:::o;3453:75::-;3496:3;3517:5;3510:12;;3453:75;;;:::o;3534:269::-;3644:39;3675:7;3644:39;:::i;:::-;3705:91;3754:41;3778:16;3754:41;:::i;:::-;3746:6;3739:4;3733:11;3705:91;:::i;:::-;3699:4;3692:105;3610:193;3534:269;;;:::o;3809:73::-;3854:3;3809:73;:::o;3888:189::-;3965:32;;:::i;:::-;4006:65;4064:6;4056;4050:4;4006:65;:::i;:::-;3941:136;3888:189;;:::o;4083:186::-;4143:120;4160:3;4153:5;4150:14;4143:120;;;4214:39;4251:1;4244:5;4214:39;:::i;:::-;4187:1;4180:5;4176:13;4167:22;;4143:120;;;4083:186;;:::o;4275:543::-;4376:2;4371:3;4368:11;4365:446;;;4410:38;4442:5;4410:38;:::i;:::-;4494:29;4512:10;4494:29;:::i;:::-;4484:8;4480:44;4677:2;4665:10;4662:18;4659:49;;;4698:8;4683:23;;4659:49;4721:80;4777:22;4795:3;4777:22;:::i;:::-;4767:8;4763:37;4750:11;4721:80;:::i;:::-;4380:431;;4365:446;4275:543;;;:::o;4824:117::-;4878:8;4928:5;4922:4;4918:16;4897:37;;4824:117;;;;:::o;4947:169::-;4991:6;5024:51;5072:1;5068:6;5060:5;5057:1;5053:13;5024:51;:::i;:::-;5020:56;5105:4;5099;5095:15;5085:25;;4998:118;4947:169;;;;:::o;5121:295::-;5197:4;5343:29;5368:3;5362:4;5343:29;:::i;:::-;5335:37;;5405:3;5402:1;5398:11;5392:4;5389:21;5381:29;;5121:295;;;;:::o;5421:1395::-;5538:37;5571:3;5538:37;:::i;:::-;5640:18;5632:6;5629:30;5626:56;;;5662:18;;:::i;:::-;5626:56;5706:38;5738:4;5732:11;5706:38;:::i;:::-;5791:67;5851:6;5843;5837:4;5791:67;:::i;:::-;5885:1;5909:4;5896:17;;5941:2;5933:6;5930:14;5958:1;5953:618;;;;6615:1;6632:6;6629:77;;;6681:9;6676:3;6672:19;6666:26;6657:35;;6629:77;6732:67;6792:6;6785:5;6732:67;:::i;:::-;6726:4;6719:81;6588:222;5923:887;;5953:618;6005:4;6001:9;5993:6;5989:22;6039:37;6071:4;6039:37;:::i;:::-;6098:1;6112:208;6126:7;6123:1;6120:14;6112:208;;;6205:9;6200:3;6196:19;6190:26;6182:6;6175:42;6256:1;6248:6;6244:14;6234:24;;6303:2;6292:9;6288:18;6275:31;;6149:4;6146:1;6142:12;6137:17;;6112:208;;;6348:6;6339:7;6336:19;6333:179;;;6406:9;6401:3;6397:19;6391:26;6449:48;6491:4;6483:6;6479:17;6468:9;6449:48;:::i;:::-;6441:6;6434:64;6356:156;6333:179;6558:1;6554;6546:6;6542:14;6538:22;6532:4;6525:36;5960:611;;;5923:887;;5513:1303;;;5421:1395;;:::o;116:4252:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1108": {
									"entryPoint": 5331,
									"id": 1108,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_1168": {
									"entryPoint": 6132,
									"id": 1168,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_1090": {
									"entryPoint": 5735,
									"id": 1090,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_1057": {
									"entryPoint": 6005,
									"id": 1057,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1333": {
									"entryPoint": 5324,
									"id": 1333,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1216": {
									"entryPoint": 5349,
									"id": 1216,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_947": {
									"entryPoint": 5495,
									"id": 947,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_1024": {
									"entryPoint": 6595,
									"id": 1024,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addLiquidity_246": {
									"entryPoint": 4266,
									"id": 246,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_844": {
									"entryPoint": 5188,
									"id": 844,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_868": {
									"entryPoint": 1164,
									"id": 868,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_803": {
									"entryPoint": 2926,
									"id": 803,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_781": {
									"entryPoint": 1290,
									"id": 781,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getAmountOut_395": {
									"entryPoint": 943,
									"id": 395,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@min_83": {
									"entryPoint": 5981,
									"id": 83,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_763": {
									"entryPoint": 1020,
									"id": 763,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeLiquidity_356": {
									"entryPoint": 3139,
									"id": 356,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@resvers0_12": {
									"entryPoint": 2920,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@resvers1_14": {
									"entryPoint": 5318,
									"id": 14,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sqrt_139": {
									"entryPoint": 5862,
									"id": 139,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@swap_564": {
									"entryPoint": 1298,
									"id": 564,
									"parameterSlots": 3,
									"returnSlots": 2
								},
								"@symbol_772": {
									"entryPoint": 2995,
									"id": 772,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@token0_7": {
									"entryPoint": 1198,
									"id": 7,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@token1_10": {
									"entryPoint": 5151,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_790": {
									"entryPoint": 1235,
									"id": 790,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_900": {
									"entryPoint": 1244,
									"id": 900,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_827": {
									"entryPoint": 5117,
									"id": 827,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 8854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_contract$_IERC20_$1295": {
									"entryPoint": 7941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7167,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 8716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7770,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7541,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8874,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 8736,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_contract$_IERC20_$1295t_uint256": {
									"entryPoint": 7961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 8205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 7187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7614,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$1295_to_t_address_fromStack": {
									"entryPoint": 7730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7363,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7267,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 7862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8779,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8917,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9023,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$1295__to_t_address__fromStack_reversed": {
									"entryPoint": 7745,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7419,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7282,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_uint256_t_address__to_t_uint256_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 8956,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_contract$_IERC20_$1295__to_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 8041,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8166,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 7877,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7307,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8374,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8535,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_IERC20_$1295": {
									"entryPoint": 7902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7136,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 7850,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$1295_to_t_address": {
									"entryPoint": 7713,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 7696,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 7663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7333,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8628,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 7654,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8329,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8490,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8583,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7132,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7347,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 7499,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8832,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_IERC20_$1295": {
									"entryPoint": 7919,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7145,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14682:6",
										"nodeType": "YulBlock",
										"src": "0:14682:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:32:6",
													"nodeType": "YulBlock",
													"src": "379:32:6",
													"statements": [
														{
															"nativeSrc": "389:16:6",
															"nodeType": "YulAssignment",
															"src": "389:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:6",
																"nodeType": "YulIdentifier",
																"src": "400:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:77:6"
											},
											{
												"body": {
													"nativeSrc": "460:79:6",
													"nodeType": "YulBlock",
													"src": "460:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:6",
																"nodeType": "YulBlock",
																"src": "517:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:6",
																					"nodeType": "YulLiteral",
																					"src": "526:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:6",
																					"nodeType": "YulLiteral",
																					"src": "529:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:6"
																			},
																			"nativeSrc": "519:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:6"
																		},
																		"nativeSrc": "519:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:6"
																				},
																				"nativeSrc": "490:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:6"
																		},
																		"nativeSrc": "480:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:6"
																},
																"nativeSrc": "473:43:6",
																"nodeType": "YulFunctionCall",
																"src": "473:43:6"
															},
															"nativeSrc": "470:63:6",
															"nodeType": "YulIf",
															"src": "470:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:6",
														"nodeType": "YulTypedName",
														"src": "453:5:6",
														"type": ""
													}
												],
												"src": "417:122:6"
											},
											{
												"body": {
													"nativeSrc": "597:87:6",
													"nodeType": "YulBlock",
													"src": "597:87:6",
													"statements": [
														{
															"nativeSrc": "607:29:6",
															"nodeType": "YulAssignment",
															"src": "607:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:6"
																},
																"nativeSrc": "616:20:6",
																"nodeType": "YulFunctionCall",
																"src": "616:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:6"
																},
																"nativeSrc": "645:33:6",
																"nodeType": "YulFunctionCall",
																"src": "645:33:6"
															},
															"nativeSrc": "645:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:6",
														"nodeType": "YulTypedName",
														"src": "575:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:6",
														"nodeType": "YulTypedName",
														"src": "583:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:6",
														"nodeType": "YulTypedName",
														"src": "591:5:6",
														"type": ""
													}
												],
												"src": "545:139:6"
											},
											{
												"body": {
													"nativeSrc": "790:519:6",
													"nodeType": "YulBlock",
													"src": "790:519:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "836:83:6",
																"nodeType": "YulBlock",
																"src": "836:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "838:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "838:77:6"
																			},
																			"nativeSrc": "838:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "838:79:6"
																		},
																		"nativeSrc": "838:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "838:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "811:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "811:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "820:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "820:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "807:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "807:3:6"
																		},
																		"nativeSrc": "807:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "807:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "832:2:6",
																		"nodeType": "YulLiteral",
																		"src": "832:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "803:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "803:3:6"
																},
																"nativeSrc": "803:32:6",
																"nodeType": "YulFunctionCall",
																"src": "803:32:6"
															},
															"nativeSrc": "800:119:6",
															"nodeType": "YulIf",
															"src": "800:119:6"
														},
														{
															"nativeSrc": "929:117:6",
															"nodeType": "YulBlock",
															"src": "929:117:6",
															"statements": [
																{
																	"nativeSrc": "944:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "944:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "958:1:6",
																		"nodeType": "YulLiteral",
																		"src": "958:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "948:6:6",
																			"nodeType": "YulTypedName",
																			"src": "948:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "973:63:6",
																	"nodeType": "YulAssignment",
																	"src": "973:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1008:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1008:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1019:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1019:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1004:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1004:3:6"
																				},
																				"nativeSrc": "1004:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1004:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1028:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1028:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "983:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "983:20:6"
																		},
																		"nativeSrc": "983:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "983:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "973:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "973:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1056:118:6",
															"nodeType": "YulBlock",
															"src": "1056:118:6",
															"statements": [
																{
																	"nativeSrc": "1071:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1071:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1085:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1085:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1075:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1075:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1101:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1101:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1136:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1136:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1147:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1147:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1132:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1132:3:6"
																				},
																				"nativeSrc": "1132:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1132:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1156:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1156:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1111:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1111:20:6"
																		},
																		"nativeSrc": "1111:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1111:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1101:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1101:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1184:118:6",
															"nodeType": "YulBlock",
															"src": "1184:118:6",
															"statements": [
																{
																	"nativeSrc": "1199:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1199:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1213:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1213:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1203:6:6",
																			"nodeType": "YulTypedName",
																			"src": "1203:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1229:63:6",
																	"nodeType": "YulAssignment",
																	"src": "1229:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1264:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1264:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1275:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1275:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1260:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1260:3:6"
																				},
																				"nativeSrc": "1260:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1260:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1284:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1284:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1239:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "1239:20:6"
																		},
																		"nativeSrc": "1239:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1239:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1229:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "1229:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nativeSrc": "690:619:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "744:9:6",
														"nodeType": "YulTypedName",
														"src": "744:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "755:7:6",
														"nodeType": "YulTypedName",
														"src": "755:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "767:6:6",
														"nodeType": "YulTypedName",
														"src": "767:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "775:6:6",
														"nodeType": "YulTypedName",
														"src": "775:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "783:6:6",
														"nodeType": "YulTypedName",
														"src": "783:6:6",
														"type": ""
													}
												],
												"src": "690:619:6"
											},
											{
												"body": {
													"nativeSrc": "1380:53:6",
													"nodeType": "YulBlock",
													"src": "1380:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1397:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1397:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1420:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1420:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1402:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "1402:17:6"
																		},
																		"nativeSrc": "1402:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1402:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1390:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1390:6:6"
																},
																"nativeSrc": "1390:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1390:37:6"
															},
															"nativeSrc": "1390:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "1390:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1315:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1368:5:6",
														"nodeType": "YulTypedName",
														"src": "1368:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1375:3:6",
														"nodeType": "YulTypedName",
														"src": "1375:3:6",
														"type": ""
													}
												],
												"src": "1315:118:6"
											},
											{
												"body": {
													"nativeSrc": "1537:124:6",
													"nodeType": "YulBlock",
													"src": "1537:124:6",
													"statements": [
														{
															"nativeSrc": "1547:26:6",
															"nodeType": "YulAssignment",
															"src": "1547:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1559:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1559:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1570:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1570:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1555:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1555:3:6"
																},
																"nativeSrc": "1555:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1555:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1547:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1547:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1627:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1627:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1640:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1640:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1651:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1651:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1636:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:6"
																		},
																		"nativeSrc": "1636:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1636:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1583:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "1583:43:6"
																},
																"nativeSrc": "1583:71:6",
																"nodeType": "YulFunctionCall",
																"src": "1583:71:6"
															},
															"nativeSrc": "1583:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "1583:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1439:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1509:9:6",
														"nodeType": "YulTypedName",
														"src": "1509:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1521:6:6",
														"nodeType": "YulTypedName",
														"src": "1521:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1532:4:6",
														"nodeType": "YulTypedName",
														"src": "1532:4:6",
														"type": ""
													}
												],
												"src": "1439:222:6"
											},
											{
												"body": {
													"nativeSrc": "1726:40:6",
													"nodeType": "YulBlock",
													"src": "1726:40:6",
													"statements": [
														{
															"nativeSrc": "1737:22:6",
															"nodeType": "YulAssignment",
															"src": "1737:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1753:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1753:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1747:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1747:5:6"
																},
																"nativeSrc": "1747:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1747:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1737:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1737:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1667:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1709:5:6",
														"nodeType": "YulTypedName",
														"src": "1709:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1719:6:6",
														"nodeType": "YulTypedName",
														"src": "1719:6:6",
														"type": ""
													}
												],
												"src": "1667:99:6"
											},
											{
												"body": {
													"nativeSrc": "1868:73:6",
													"nodeType": "YulBlock",
													"src": "1868:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1885:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1885:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1890:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1890:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1878:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1878:6:6"
																},
																"nativeSrc": "1878:19:6",
																"nodeType": "YulFunctionCall",
																"src": "1878:19:6"
															},
															"nativeSrc": "1878:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "1878:19:6"
														},
														{
															"nativeSrc": "1906:29:6",
															"nodeType": "YulAssignment",
															"src": "1906:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1925:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1925:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1930:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1930:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1921:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1921:3:6"
																},
																"nativeSrc": "1921:14:6",
																"nodeType": "YulFunctionCall",
																"src": "1921:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1906:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "1906:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1772:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1840:3:6",
														"nodeType": "YulTypedName",
														"src": "1840:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1845:6:6",
														"nodeType": "YulTypedName",
														"src": "1845:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1856:11:6",
														"nodeType": "YulTypedName",
														"src": "1856:11:6",
														"type": ""
													}
												],
												"src": "1772:169:6"
											},
											{
												"body": {
													"nativeSrc": "2009:77:6",
													"nodeType": "YulBlock",
													"src": "2009:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2026:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2026:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2031:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2031:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2036:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2036:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2020:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2020:5:6"
																},
																"nativeSrc": "2020:23:6",
																"nodeType": "YulFunctionCall",
																"src": "2020:23:6"
															},
															"nativeSrc": "2020:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "2020:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2063:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "2063:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2068:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2068:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2059:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2059:3:6"
																		},
																		"nativeSrc": "2059:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2059:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2077:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2077:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2052:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2052:6:6"
																},
																"nativeSrc": "2052:27:6",
																"nodeType": "YulFunctionCall",
																"src": "2052:27:6"
															},
															"nativeSrc": "2052:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "2052:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1947:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1991:3:6",
														"nodeType": "YulTypedName",
														"src": "1991:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1996:3:6",
														"nodeType": "YulTypedName",
														"src": "1996:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2001:6:6",
														"nodeType": "YulTypedName",
														"src": "2001:6:6",
														"type": ""
													}
												],
												"src": "1947:139:6"
											},
											{
												"body": {
													"nativeSrc": "2140:54:6",
													"nodeType": "YulBlock",
													"src": "2140:54:6",
													"statements": [
														{
															"nativeSrc": "2150:38:6",
															"nodeType": "YulAssignment",
															"src": "2150:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2168:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2168:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2175:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2175:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2164:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2164:3:6"
																		},
																		"nativeSrc": "2164:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2164:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2184:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2184:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2180:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2180:3:6"
																		},
																		"nativeSrc": "2180:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2180:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2160:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2160:3:6"
																},
																"nativeSrc": "2160:28:6",
																"nodeType": "YulFunctionCall",
																"src": "2160:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2150:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2150:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2092:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2123:5:6",
														"nodeType": "YulTypedName",
														"src": "2123:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2133:6:6",
														"nodeType": "YulTypedName",
														"src": "2133:6:6",
														"type": ""
													}
												],
												"src": "2092:102:6"
											},
											{
												"body": {
													"nativeSrc": "2292:285:6",
													"nodeType": "YulBlock",
													"src": "2292:285:6",
													"statements": [
														{
															"nativeSrc": "2302:53:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2302:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2349:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2349:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2316:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "2316:32:6"
																},
																"nativeSrc": "2316:39:6",
																"nodeType": "YulFunctionCall",
																"src": "2316:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2306:6:6",
																	"nodeType": "YulTypedName",
																	"src": "2306:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2364:78:6",
															"nodeType": "YulAssignment",
															"src": "2364:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2430:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2430:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2435:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2435:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2371:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "2371:58:6"
																},
																"nativeSrc": "2371:71:6",
																"nodeType": "YulFunctionCall",
																"src": "2371:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2364:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2364:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2490:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2490:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2497:4:6",
																				"nodeType": "YulLiteral",
																				"src": "2497:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2486:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2486:3:6"
																		},
																		"nativeSrc": "2486:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2486:16:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2504:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2504:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2509:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2509:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2451:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "2451:34:6"
																},
																"nativeSrc": "2451:65:6",
																"nodeType": "YulFunctionCall",
																"src": "2451:65:6"
															},
															"nativeSrc": "2451:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "2451:65:6"
														},
														{
															"nativeSrc": "2525:46:6",
															"nodeType": "YulAssignment",
															"src": "2525:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2536:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "2536:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2563:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2563:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2541:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "2541:21:6"
																		},
																		"nativeSrc": "2541:29:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2541:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2532:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2532:3:6"
																},
																"nativeSrc": "2532:39:6",
																"nodeType": "YulFunctionCall",
																"src": "2532:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2525:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2525:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2200:377:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2273:5:6",
														"nodeType": "YulTypedName",
														"src": "2273:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2280:3:6",
														"nodeType": "YulTypedName",
														"src": "2280:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2288:3:6",
														"nodeType": "YulTypedName",
														"src": "2288:3:6",
														"type": ""
													}
												],
												"src": "2200:377:6"
											},
											{
												"body": {
													"nativeSrc": "2701:195:6",
													"nodeType": "YulBlock",
													"src": "2701:195:6",
													"statements": [
														{
															"nativeSrc": "2711:26:6",
															"nodeType": "YulAssignment",
															"src": "2711:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2723:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2723:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2734:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2734:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2719:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2719:3:6"
																},
																"nativeSrc": "2719:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2719:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2711:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2711:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2758:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2758:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2769:1:6",
																				"nodeType": "YulLiteral",
																				"src": "2769:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2754:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2754:3:6"
																		},
																		"nativeSrc": "2754:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2754:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2777:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "2777:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2783:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2783:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2773:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2773:3:6"
																		},
																		"nativeSrc": "2773:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2773:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2747:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2747:6:6"
																},
																"nativeSrc": "2747:47:6",
																"nodeType": "YulFunctionCall",
																"src": "2747:47:6"
															},
															"nativeSrc": "2747:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "2747:47:6"
														},
														{
															"nativeSrc": "2803:86:6",
															"nodeType": "YulAssignment",
															"src": "2803:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2875:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2875:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2884:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2884:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2811:63:6",
																	"nodeType": "YulIdentifier",
																	"src": "2811:63:6"
																},
																"nativeSrc": "2811:78:6",
																"nodeType": "YulFunctionCall",
																"src": "2811:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2803:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2803:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2583:313:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2673:9:6",
														"nodeType": "YulTypedName",
														"src": "2673:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2685:6:6",
														"nodeType": "YulTypedName",
														"src": "2685:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2696:4:6",
														"nodeType": "YulTypedName",
														"src": "2696:4:6",
														"type": ""
													}
												],
												"src": "2583:313:6"
											},
											{
												"body": {
													"nativeSrc": "2947:81:6",
													"nodeType": "YulBlock",
													"src": "2947:81:6",
													"statements": [
														{
															"nativeSrc": "2957:65:6",
															"nodeType": "YulAssignment",
															"src": "2957:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2972:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2972:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2979:42:6",
																		"nodeType": "YulLiteral",
																		"src": "2979:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2968:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2968:3:6"
																},
																"nativeSrc": "2968:54:6",
																"nodeType": "YulFunctionCall",
																"src": "2968:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2957:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2957:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "2902:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2929:5:6",
														"nodeType": "YulTypedName",
														"src": "2929:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2939:7:6",
														"nodeType": "YulTypedName",
														"src": "2939:7:6",
														"type": ""
													}
												],
												"src": "2902:126:6"
											},
											{
												"body": {
													"nativeSrc": "3079:51:6",
													"nodeType": "YulBlock",
													"src": "3079:51:6",
													"statements": [
														{
															"nativeSrc": "3089:35:6",
															"nodeType": "YulAssignment",
															"src": "3089:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3118:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3118:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3100:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "3100:17:6"
																},
																"nativeSrc": "3100:24:6",
																"nodeType": "YulFunctionCall",
																"src": "3100:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3089:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "3089:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3034:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3061:5:6",
														"nodeType": "YulTypedName",
														"src": "3061:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3071:7:6",
														"nodeType": "YulTypedName",
														"src": "3071:7:6",
														"type": ""
													}
												],
												"src": "3034:96:6"
											},
											{
												"body": {
													"nativeSrc": "3179:79:6",
													"nodeType": "YulBlock",
													"src": "3179:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3236:16:6",
																"nodeType": "YulBlock",
																"src": "3236:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3245:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3245:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3248:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3248:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3238:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3238:6:6"
																			},
																			"nativeSrc": "3238:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3238:12:6"
																		},
																		"nativeSrc": "3238:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3238:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3202:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3202:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3227:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "3227:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3209:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "3209:17:6"
																				},
																				"nativeSrc": "3209:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3209:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3199:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "3199:2:6"
																		},
																		"nativeSrc": "3199:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3199:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3192:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3192:6:6"
																},
																"nativeSrc": "3192:43:6",
																"nodeType": "YulFunctionCall",
																"src": "3192:43:6"
															},
															"nativeSrc": "3189:63:6",
															"nodeType": "YulIf",
															"src": "3189:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3136:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3172:5:6",
														"nodeType": "YulTypedName",
														"src": "3172:5:6",
														"type": ""
													}
												],
												"src": "3136:122:6"
											},
											{
												"body": {
													"nativeSrc": "3316:87:6",
													"nodeType": "YulBlock",
													"src": "3316:87:6",
													"statements": [
														{
															"nativeSrc": "3326:29:6",
															"nodeType": "YulAssignment",
															"src": "3326:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3348:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3348:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3335:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "3335:12:6"
																},
																"nativeSrc": "3335:20:6",
																"nodeType": "YulFunctionCall",
																"src": "3335:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3326:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "3326:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3391:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3391:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3364:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "3364:26:6"
																},
																"nativeSrc": "3364:33:6",
																"nodeType": "YulFunctionCall",
																"src": "3364:33:6"
															},
															"nativeSrc": "3364:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "3364:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3264:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3294:6:6",
														"nodeType": "YulTypedName",
														"src": "3294:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3302:3:6",
														"nodeType": "YulTypedName",
														"src": "3302:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3310:5:6",
														"nodeType": "YulTypedName",
														"src": "3310:5:6",
														"type": ""
													}
												],
												"src": "3264:139:6"
											},
											{
												"body": {
													"nativeSrc": "3492:391:6",
													"nodeType": "YulBlock",
													"src": "3492:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3538:83:6",
																"nodeType": "YulBlock",
																"src": "3538:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3540:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3540:77:6"
																			},
																			"nativeSrc": "3540:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3540:79:6"
																		},
																		"nativeSrc": "3540:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3540:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3513:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3513:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3522:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3522:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3509:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3509:3:6"
																		},
																		"nativeSrc": "3509:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3509:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3534:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3534:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3505:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3505:3:6"
																},
																"nativeSrc": "3505:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3505:32:6"
															},
															"nativeSrc": "3502:119:6",
															"nodeType": "YulIf",
															"src": "3502:119:6"
														},
														{
															"nativeSrc": "3631:117:6",
															"nodeType": "YulBlock",
															"src": "3631:117:6",
															"statements": [
																{
																	"nativeSrc": "3646:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3646:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3660:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3660:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3650:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3650:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3675:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3675:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3710:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3710:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3721:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3721:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3706:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3706:3:6"
																				},
																				"nativeSrc": "3706:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3706:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3730:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3730:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3685:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3685:20:6"
																		},
																		"nativeSrc": "3685:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3685:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3675:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3675:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3758:118:6",
															"nodeType": "YulBlock",
															"src": "3758:118:6",
															"statements": [
																{
																	"nativeSrc": "3773:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3773:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3787:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3787:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3777:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3777:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3803:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3803:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3838:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "3838:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3849:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "3849:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3834:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "3834:3:6"
																				},
																				"nativeSrc": "3834:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3834:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3858:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3858:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3813:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3813:20:6"
																		},
																		"nativeSrc": "3813:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3813:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3803:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3803:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3409:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3454:9:6",
														"nodeType": "YulTypedName",
														"src": "3454:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3465:7:6",
														"nodeType": "YulTypedName",
														"src": "3465:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3477:6:6",
														"nodeType": "YulTypedName",
														"src": "3477:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3485:6:6",
														"nodeType": "YulTypedName",
														"src": "3485:6:6",
														"type": ""
													}
												],
												"src": "3409:474:6"
											},
											{
												"body": {
													"nativeSrc": "3931:48:6",
													"nodeType": "YulBlock",
													"src": "3931:48:6",
													"statements": [
														{
															"nativeSrc": "3941:32:6",
															"nodeType": "YulAssignment",
															"src": "3941:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3966:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3966:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3959:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3959:6:6"
																		},
																		"nativeSrc": "3959:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3959:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3952:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3952:6:6"
																},
																"nativeSrc": "3952:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3952:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3941:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "3941:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3889:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3913:5:6",
														"nodeType": "YulTypedName",
														"src": "3913:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3923:7:6",
														"nodeType": "YulTypedName",
														"src": "3923:7:6",
														"type": ""
													}
												],
												"src": "3889:90:6"
											},
											{
												"body": {
													"nativeSrc": "4044:50:6",
													"nodeType": "YulBlock",
													"src": "4044:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4061:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4061:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4081:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4081:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "4066:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "4066:14:6"
																		},
																		"nativeSrc": "4066:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4066:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4054:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4054:6:6"
																},
																"nativeSrc": "4054:34:6",
																"nodeType": "YulFunctionCall",
																"src": "4054:34:6"
															},
															"nativeSrc": "4054:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "4054:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3985:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4032:5:6",
														"nodeType": "YulTypedName",
														"src": "4032:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4039:3:6",
														"nodeType": "YulTypedName",
														"src": "4039:3:6",
														"type": ""
													}
												],
												"src": "3985:109:6"
											},
											{
												"body": {
													"nativeSrc": "4192:118:6",
													"nodeType": "YulBlock",
													"src": "4192:118:6",
													"statements": [
														{
															"nativeSrc": "4202:26:6",
															"nodeType": "YulAssignment",
															"src": "4202:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4214:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4214:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4225:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4225:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4210:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4210:3:6"
																},
																"nativeSrc": "4210:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4210:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4202:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4202:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4276:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4276:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4289:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4289:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4300:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4300:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4285:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4285:3:6"
																		},
																		"nativeSrc": "4285:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4285:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "4238:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "4238:37:6"
																},
																"nativeSrc": "4238:65:6",
																"nodeType": "YulFunctionCall",
																"src": "4238:65:6"
															},
															"nativeSrc": "4238:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "4238:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "4100:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4164:9:6",
														"nodeType": "YulTypedName",
														"src": "4164:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4176:6:6",
														"nodeType": "YulTypedName",
														"src": "4176:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4187:4:6",
														"nodeType": "YulTypedName",
														"src": "4187:4:6",
														"type": ""
													}
												],
												"src": "4100:210:6"
											},
											{
												"body": {
													"nativeSrc": "4348:28:6",
													"nodeType": "YulBlock",
													"src": "4348:28:6",
													"statements": [
														{
															"nativeSrc": "4358:12:6",
															"nodeType": "YulAssignment",
															"src": "4358:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "4365:5:6",
																"nodeType": "YulIdentifier",
																"src": "4365:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4358:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4358:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4316:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4334:5:6",
														"nodeType": "YulTypedName",
														"src": "4334:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4344:3:6",
														"nodeType": "YulTypedName",
														"src": "4344:3:6",
														"type": ""
													}
												],
												"src": "4316:60:6"
											},
											{
												"body": {
													"nativeSrc": "4442:82:6",
													"nodeType": "YulBlock",
													"src": "4442:82:6",
													"statements": [
														{
															"nativeSrc": "4452:66:6",
															"nodeType": "YulAssignment",
															"src": "4452:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4510:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "4510:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "4492:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "4492:17:6"
																				},
																				"nativeSrc": "4492:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4492:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4483:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "4483:8:6"
																		},
																		"nativeSrc": "4483:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4483:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4465:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "4465:17:6"
																},
																"nativeSrc": "4465:53:6",
																"nodeType": "YulFunctionCall",
																"src": "4465:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4452:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "4452:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "4382:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4422:5:6",
														"nodeType": "YulTypedName",
														"src": "4422:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4432:9:6",
														"nodeType": "YulTypedName",
														"src": "4432:9:6",
														"type": ""
													}
												],
												"src": "4382:142:6"
											},
											{
												"body": {
													"nativeSrc": "4590:66:6",
													"nodeType": "YulBlock",
													"src": "4590:66:6",
													"statements": [
														{
															"nativeSrc": "4600:50:6",
															"nodeType": "YulAssignment",
															"src": "4600:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4644:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4644:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "4613:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "4613:30:6"
																},
																"nativeSrc": "4613:37:6",
																"nodeType": "YulFunctionCall",
																"src": "4613:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4600:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "4600:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "4530:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4570:5:6",
														"nodeType": "YulTypedName",
														"src": "4570:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4580:9:6",
														"nodeType": "YulTypedName",
														"src": "4580:9:6",
														"type": ""
													}
												],
												"src": "4530:126:6"
											},
											{
												"body": {
													"nativeSrc": "4737:66:6",
													"nodeType": "YulBlock",
													"src": "4737:66:6",
													"statements": [
														{
															"nativeSrc": "4747:50:6",
															"nodeType": "YulAssignment",
															"src": "4747:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4791:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4791:5:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "4760:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "4760:30:6"
																},
																"nativeSrc": "4760:37:6",
																"nodeType": "YulFunctionCall",
																"src": "4760:37:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4747:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "4747:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$1295_to_t_address",
												"nativeSrc": "4662:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4717:5:6",
														"nodeType": "YulTypedName",
														"src": "4717:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4727:9:6",
														"nodeType": "YulTypedName",
														"src": "4727:9:6",
														"type": ""
													}
												],
												"src": "4662:141:6"
											},
											{
												"body": {
													"nativeSrc": "4889:81:6",
													"nodeType": "YulBlock",
													"src": "4889:81:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4906:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4906:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4957:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4957:5:6"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$1295_to_t_address",
																			"nativeSrc": "4911:45:6",
																			"nodeType": "YulIdentifier",
																			"src": "4911:45:6"
																		},
																		"nativeSrc": "4911:52:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4911:52:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4899:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4899:6:6"
																},
																"nativeSrc": "4899:65:6",
																"nodeType": "YulFunctionCall",
																"src": "4899:65:6"
															},
															"nativeSrc": "4899:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "4899:65:6"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$1295_to_t_address_fromStack",
												"nativeSrc": "4809:161:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4877:5:6",
														"nodeType": "YulTypedName",
														"src": "4877:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4884:3:6",
														"nodeType": "YulTypedName",
														"src": "4884:3:6",
														"type": ""
													}
												],
												"src": "4809:161:6"
											},
											{
												"body": {
													"nativeSrc": "5089:139:6",
													"nodeType": "YulBlock",
													"src": "5089:139:6",
													"statements": [
														{
															"nativeSrc": "5099:26:6",
															"nodeType": "YulAssignment",
															"src": "5099:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5111:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "5111:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5122:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5122:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5107:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5107:3:6"
																},
																"nativeSrc": "5107:18:6",
																"nodeType": "YulFunctionCall",
																"src": "5107:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5099:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "5099:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5194:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5194:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5207:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5207:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5218:1:6",
																				"nodeType": "YulLiteral",
																				"src": "5218:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5203:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5203:3:6"
																		},
																		"nativeSrc": "5203:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5203:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$1295_to_t_address_fromStack",
																	"nativeSrc": "5135:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "5135:58:6"
																},
																"nativeSrc": "5135:86:6",
																"nodeType": "YulFunctionCall",
																"src": "5135:86:6"
															},
															"nativeSrc": "5135:86:6",
															"nodeType": "YulExpressionStatement",
															"src": "5135:86:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$1295__to_t_address__fromStack_reversed",
												"nativeSrc": "4976:252:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5061:9:6",
														"nodeType": "YulTypedName",
														"src": "5061:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5073:6:6",
														"nodeType": "YulTypedName",
														"src": "5073:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5084:4:6",
														"nodeType": "YulTypedName",
														"src": "5084:4:6",
														"type": ""
													}
												],
												"src": "4976:252:6"
											},
											{
												"body": {
													"nativeSrc": "5334:519:6",
													"nodeType": "YulBlock",
													"src": "5334:519:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5380:83:6",
																"nodeType": "YulBlock",
																"src": "5380:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5382:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5382:77:6"
																			},
																			"nativeSrc": "5382:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5382:79:6"
																		},
																		"nativeSrc": "5382:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5382:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5355:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5355:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5364:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5364:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5351:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5351:3:6"
																		},
																		"nativeSrc": "5351:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5351:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5376:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5376:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5347:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5347:3:6"
																},
																"nativeSrc": "5347:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5347:32:6"
															},
															"nativeSrc": "5344:119:6",
															"nodeType": "YulIf",
															"src": "5344:119:6"
														},
														{
															"nativeSrc": "5473:117:6",
															"nodeType": "YulBlock",
															"src": "5473:117:6",
															"statements": [
																{
																	"nativeSrc": "5488:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5488:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5502:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5502:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5492:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5492:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5517:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5517:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5552:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5552:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5563:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5563:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5548:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5548:3:6"
																				},
																				"nativeSrc": "5548:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5548:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5572:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5572:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5527:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5527:20:6"
																		},
																		"nativeSrc": "5527:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5527:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5517:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5517:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5600:118:6",
															"nodeType": "YulBlock",
															"src": "5600:118:6",
															"statements": [
																{
																	"nativeSrc": "5615:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5615:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5629:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5629:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5619:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5619:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5645:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5645:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5680:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5680:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5691:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5691:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5676:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5676:3:6"
																				},
																				"nativeSrc": "5676:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5676:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5700:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5700:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5655:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5655:20:6"
																		},
																		"nativeSrc": "5655:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5655:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5645:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5645:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5728:118:6",
															"nodeType": "YulBlock",
															"src": "5728:118:6",
															"statements": [
																{
																	"nativeSrc": "5743:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5743:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5757:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5757:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5747:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5747:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5773:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5773:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5808:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5808:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5819:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5819:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5804:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5804:3:6"
																				},
																				"nativeSrc": "5804:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5804:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5828:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5828:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5783:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5783:20:6"
																		},
																		"nativeSrc": "5783:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5783:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5773:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5773:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "5234:619:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5288:9:6",
														"nodeType": "YulTypedName",
														"src": "5288:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5299:7:6",
														"nodeType": "YulTypedName",
														"src": "5299:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5311:6:6",
														"nodeType": "YulTypedName",
														"src": "5311:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5319:6:6",
														"nodeType": "YulTypedName",
														"src": "5319:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5327:6:6",
														"nodeType": "YulTypedName",
														"src": "5327:6:6",
														"type": ""
													}
												],
												"src": "5234:619:6"
											},
											{
												"body": {
													"nativeSrc": "5902:43:6",
													"nodeType": "YulBlock",
													"src": "5902:43:6",
													"statements": [
														{
															"nativeSrc": "5912:27:6",
															"nodeType": "YulAssignment",
															"src": "5912:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5927:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "5927:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5934:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5934:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5923:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5923:3:6"
																},
																"nativeSrc": "5923:16:6",
																"nodeType": "YulFunctionCall",
																"src": "5923:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5912:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "5912:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5859:86:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5884:5:6",
														"nodeType": "YulTypedName",
														"src": "5884:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5894:7:6",
														"nodeType": "YulTypedName",
														"src": "5894:7:6",
														"type": ""
													}
												],
												"src": "5859:86:6"
											},
											{
												"body": {
													"nativeSrc": "6012:51:6",
													"nodeType": "YulBlock",
													"src": "6012:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6029:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6029:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6050:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6050:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "6034:15:6",
																			"nodeType": "YulIdentifier",
																			"src": "6034:15:6"
																		},
																		"nativeSrc": "6034:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6034:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6022:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6022:6:6"
																},
																"nativeSrc": "6022:35:6",
																"nodeType": "YulFunctionCall",
																"src": "6022:35:6"
															},
															"nativeSrc": "6022:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "6022:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5951:112:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6000:5:6",
														"nodeType": "YulTypedName",
														"src": "6000:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6007:3:6",
														"nodeType": "YulTypedName",
														"src": "6007:3:6",
														"type": ""
													}
												],
												"src": "5951:112:6"
											},
											{
												"body": {
													"nativeSrc": "6163:120:6",
													"nodeType": "YulBlock",
													"src": "6163:120:6",
													"statements": [
														{
															"nativeSrc": "6173:26:6",
															"nodeType": "YulAssignment",
															"src": "6173:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6185:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6185:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6196:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6196:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6181:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6181:3:6"
																},
																"nativeSrc": "6181:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6181:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6173:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6173:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6249:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6249:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6262:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6262:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6273:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6273:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6258:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6258:3:6"
																		},
																		"nativeSrc": "6258:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6258:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "6209:39:6",
																	"nodeType": "YulIdentifier",
																	"src": "6209:39:6"
																},
																"nativeSrc": "6209:67:6",
																"nodeType": "YulFunctionCall",
																"src": "6209:67:6"
															},
															"nativeSrc": "6209:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "6209:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "6069:214:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6135:9:6",
														"nodeType": "YulTypedName",
														"src": "6135:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6147:6:6",
														"nodeType": "YulTypedName",
														"src": "6147:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6158:4:6",
														"nodeType": "YulTypedName",
														"src": "6158:4:6",
														"type": ""
													}
												],
												"src": "6069:214:6"
											},
											{
												"body": {
													"nativeSrc": "6349:51:6",
													"nodeType": "YulBlock",
													"src": "6349:51:6",
													"statements": [
														{
															"nativeSrc": "6359:35:6",
															"nodeType": "YulAssignment",
															"src": "6359:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6388:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6388:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nativeSrc": "6370:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "6370:17:6"
																},
																"nativeSrc": "6370:24:6",
																"nodeType": "YulFunctionCall",
																"src": "6370:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6359:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "6359:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_IERC20_$1295",
												"nativeSrc": "6289:111:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6331:5:6",
														"nodeType": "YulTypedName",
														"src": "6331:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6341:7:6",
														"nodeType": "YulTypedName",
														"src": "6341:7:6",
														"type": ""
													}
												],
												"src": "6289:111:6"
											},
											{
												"body": {
													"nativeSrc": "6464:94:6",
													"nodeType": "YulBlock",
													"src": "6464:94:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6536:16:6",
																"nodeType": "YulBlock",
																"src": "6536:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6545:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6545:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6548:1:6",
																					"nodeType": "YulLiteral",
																					"src": "6548:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6538:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6538:6:6"
																			},
																			"nativeSrc": "6538:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6538:12:6"
																		},
																		"nativeSrc": "6538:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6538:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6487:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6487:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6527:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "6527:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_IERC20_$1295",
																					"nativeSrc": "6494:32:6",
																					"nodeType": "YulIdentifier",
																					"src": "6494:32:6"
																				},
																				"nativeSrc": "6494:39:6",
																				"nodeType": "YulFunctionCall",
																				"src": "6494:39:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6484:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6484:2:6"
																		},
																		"nativeSrc": "6484:50:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6484:50:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6477:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6477:6:6"
																},
																"nativeSrc": "6477:58:6",
																"nodeType": "YulFunctionCall",
																"src": "6477:58:6"
															},
															"nativeSrc": "6474:78:6",
															"nodeType": "YulIf",
															"src": "6474:78:6"
														}
													]
												},
												"name": "validator_revert_t_contract$_IERC20_$1295",
												"nativeSrc": "6406:152:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6457:5:6",
														"nodeType": "YulTypedName",
														"src": "6457:5:6",
														"type": ""
													}
												],
												"src": "6406:152:6"
											},
											{
												"body": {
													"nativeSrc": "6631:102:6",
													"nodeType": "YulBlock",
													"src": "6631:102:6",
													"statements": [
														{
															"nativeSrc": "6641:29:6",
															"nodeType": "YulAssignment",
															"src": "6641:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6663:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6663:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6650:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "6650:12:6"
																},
																"nativeSrc": "6650:20:6",
																"nodeType": "YulFunctionCall",
																"src": "6650:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6641:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "6641:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6721:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6721:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_IERC20_$1295",
																	"nativeSrc": "6679:41:6",
																	"nodeType": "YulIdentifier",
																	"src": "6679:41:6"
																},
																"nativeSrc": "6679:48:6",
																"nodeType": "YulFunctionCall",
																"src": "6679:48:6"
															},
															"nativeSrc": "6679:48:6",
															"nodeType": "YulExpressionStatement",
															"src": "6679:48:6"
														}
													]
												},
												"name": "abi_decode_t_contract$_IERC20_$1295",
												"nativeSrc": "6564:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6609:6:6",
														"nodeType": "YulTypedName",
														"src": "6609:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6617:3:6",
														"nodeType": "YulTypedName",
														"src": "6617:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6625:5:6",
														"nodeType": "YulTypedName",
														"src": "6625:5:6",
														"type": ""
													}
												],
												"src": "6564:169:6"
											},
											{
												"body": {
													"nativeSrc": "6854:534:6",
													"nodeType": "YulBlock",
													"src": "6854:534:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "6900:83:6",
																"nodeType": "YulBlock",
																"src": "6900:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6902:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "6902:77:6"
																			},
																			"nativeSrc": "6902:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6902:79:6"
																		},
																		"nativeSrc": "6902:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6902:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6875:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "6875:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6884:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6884:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6871:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6871:3:6"
																		},
																		"nativeSrc": "6871:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6871:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6896:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6896:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6867:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6867:3:6"
																},
																"nativeSrc": "6867:32:6",
																"nodeType": "YulFunctionCall",
																"src": "6867:32:6"
															},
															"nativeSrc": "6864:119:6",
															"nodeType": "YulIf",
															"src": "6864:119:6"
														},
														{
															"nativeSrc": "6993:117:6",
															"nodeType": "YulBlock",
															"src": "6993:117:6",
															"statements": [
																{
																	"nativeSrc": "7008:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7008:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7022:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7022:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7012:6:6",
																			"nodeType": "YulTypedName",
																			"src": "7012:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7037:63:6",
																	"nodeType": "YulAssignment",
																	"src": "7037:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7072:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7072:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7083:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7083:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7068:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7068:3:6"
																				},
																				"nativeSrc": "7068:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7068:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7092:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7092:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7047:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "7047:20:6"
																		},
																		"nativeSrc": "7047:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7047:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7037:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7037:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7120:133:6",
															"nodeType": "YulBlock",
															"src": "7120:133:6",
															"statements": [
																{
																	"nativeSrc": "7135:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7135:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7149:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7149:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7139:6:6",
																			"nodeType": "YulTypedName",
																			"src": "7139:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7165:78:6",
																	"nodeType": "YulAssignment",
																	"src": "7165:78:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7215:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7215:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7226:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7226:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7211:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7211:3:6"
																				},
																				"nativeSrc": "7211:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7211:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7235:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7235:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_IERC20_$1295",
																			"nativeSrc": "7175:35:6",
																			"nodeType": "YulIdentifier",
																			"src": "7175:35:6"
																		},
																		"nativeSrc": "7175:68:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7175:68:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7165:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7165:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7263:118:6",
															"nodeType": "YulBlock",
															"src": "7263:118:6",
															"statements": [
																{
																	"nativeSrc": "7278:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7278:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7292:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7292:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7282:6:6",
																			"nodeType": "YulTypedName",
																			"src": "7282:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7308:63:6",
																	"nodeType": "YulAssignment",
																	"src": "7308:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7343:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "7343:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7354:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "7354:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7339:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "7339:3:6"
																				},
																				"nativeSrc": "7339:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "7339:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7363:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7363:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7318:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "7318:20:6"
																		},
																		"nativeSrc": "7318:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7318:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7308:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "7308:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_contract$_IERC20_$1295t_uint256",
												"nativeSrc": "6739:649:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6808:9:6",
														"nodeType": "YulTypedName",
														"src": "6808:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6819:7:6",
														"nodeType": "YulTypedName",
														"src": "6819:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6831:6:6",
														"nodeType": "YulTypedName",
														"src": "6831:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6839:6:6",
														"nodeType": "YulTypedName",
														"src": "6839:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6847:6:6",
														"nodeType": "YulTypedName",
														"src": "6847:6:6",
														"type": ""
													}
												],
												"src": "6739:649:6"
											},
											{
												"body": {
													"nativeSrc": "7535:221:6",
													"nodeType": "YulBlock",
													"src": "7535:221:6",
													"statements": [
														{
															"nativeSrc": "7545:26:6",
															"nodeType": "YulAssignment",
															"src": "7545:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7557:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7557:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7568:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7568:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7553:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7553:3:6"
																},
																"nativeSrc": "7553:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7553:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7545:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7545:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7625:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7625:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7638:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7638:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7649:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7649:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7634:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7634:3:6"
																		},
																		"nativeSrc": "7634:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7634:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7581:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7581:43:6"
																},
																"nativeSrc": "7581:71:6",
																"nodeType": "YulFunctionCall",
																"src": "7581:71:6"
															},
															"nativeSrc": "7581:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "7581:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7721:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7721:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7734:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7734:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7745:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7745:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7730:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7730:3:6"
																		},
																		"nativeSrc": "7730:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7730:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$1295_to_t_address_fromStack",
																	"nativeSrc": "7662:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "7662:58:6"
																},
																"nativeSrc": "7662:87:6",
																"nodeType": "YulFunctionCall",
																"src": "7662:87:6"
															},
															"nativeSrc": "7662:87:6",
															"nodeType": "YulExpressionStatement",
															"src": "7662:87:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_contract$_IERC20_$1295__to_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "7394:362:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7499:9:6",
														"nodeType": "YulTypedName",
														"src": "7499:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7511:6:6",
														"nodeType": "YulTypedName",
														"src": "7511:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7519:6:6",
														"nodeType": "YulTypedName",
														"src": "7519:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7530:4:6",
														"nodeType": "YulTypedName",
														"src": "7530:4:6",
														"type": ""
													}
												],
												"src": "7394:362:6"
											},
											{
												"body": {
													"nativeSrc": "7828:263:6",
													"nodeType": "YulBlock",
													"src": "7828:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "7874:83:6",
																"nodeType": "YulBlock",
																"src": "7874:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7876:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "7876:77:6"
																			},
																			"nativeSrc": "7876:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7876:79:6"
																		},
																		"nativeSrc": "7876:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7876:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7849:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "7849:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7858:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7858:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7845:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7845:3:6"
																		},
																		"nativeSrc": "7845:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7845:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7870:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7870:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7841:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7841:3:6"
																},
																"nativeSrc": "7841:32:6",
																"nodeType": "YulFunctionCall",
																"src": "7841:32:6"
															},
															"nativeSrc": "7838:119:6",
															"nodeType": "YulIf",
															"src": "7838:119:6"
														},
														{
															"nativeSrc": "7967:117:6",
															"nodeType": "YulBlock",
															"src": "7967:117:6",
															"statements": [
																{
																	"nativeSrc": "7982:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7982:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7996:1:6",
																		"nodeType": "YulLiteral",
																		"src": "7996:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7986:6:6",
																			"nodeType": "YulTypedName",
																			"src": "7986:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8011:63:6",
																	"nodeType": "YulAssignment",
																	"src": "8011:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8046:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "8046:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8057:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8057:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8042:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8042:3:6"
																				},
																				"nativeSrc": "8042:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8042:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8066:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8066:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8021:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "8021:20:6"
																		},
																		"nativeSrc": "8021:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8021:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8011:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "8011:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7762:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7798:9:6",
														"nodeType": "YulTypedName",
														"src": "7798:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7809:7:6",
														"nodeType": "YulTypedName",
														"src": "7809:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7821:6:6",
														"nodeType": "YulTypedName",
														"src": "7821:6:6",
														"type": ""
													}
												],
												"src": "7762:329:6"
											},
											{
												"body": {
													"nativeSrc": "8163:263:6",
													"nodeType": "YulBlock",
													"src": "8163:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "8209:83:6",
																"nodeType": "YulBlock",
																"src": "8209:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8211:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "8211:77:6"
																			},
																			"nativeSrc": "8211:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8211:79:6"
																		},
																		"nativeSrc": "8211:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8211:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8184:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8184:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8193:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8193:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8180:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8180:3:6"
																		},
																		"nativeSrc": "8180:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8180:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8205:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8205:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8176:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8176:3:6"
																},
																"nativeSrc": "8176:32:6",
																"nodeType": "YulFunctionCall",
																"src": "8176:32:6"
															},
															"nativeSrc": "8173:119:6",
															"nodeType": "YulIf",
															"src": "8173:119:6"
														},
														{
															"nativeSrc": "8302:117:6",
															"nodeType": "YulBlock",
															"src": "8302:117:6",
															"statements": [
																{
																	"nativeSrc": "8317:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8317:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8331:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8331:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8321:6:6",
																			"nodeType": "YulTypedName",
																			"src": "8321:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8346:63:6",
																	"nodeType": "YulAssignment",
																	"src": "8346:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8381:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "8381:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8392:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "8392:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8377:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8377:3:6"
																				},
																				"nativeSrc": "8377:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "8377:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8401:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8401:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8356:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "8356:20:6"
																		},
																		"nativeSrc": "8356:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8356:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8346:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "8346:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "8097:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8133:9:6",
														"nodeType": "YulTypedName",
														"src": "8133:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8144:7:6",
														"nodeType": "YulTypedName",
														"src": "8144:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8156:6:6",
														"nodeType": "YulTypedName",
														"src": "8156:6:6",
														"type": ""
													}
												],
												"src": "8097:329:6"
											},
											{
												"body": {
													"nativeSrc": "8558:206:6",
													"nodeType": "YulBlock",
													"src": "8558:206:6",
													"statements": [
														{
															"nativeSrc": "8568:26:6",
															"nodeType": "YulAssignment",
															"src": "8568:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8580:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "8580:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8591:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8591:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8576:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8576:3:6"
																},
																"nativeSrc": "8576:18:6",
																"nodeType": "YulFunctionCall",
																"src": "8576:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8568:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8568:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8648:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8648:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8661:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8661:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8672:1:6",
																				"nodeType": "YulLiteral",
																				"src": "8672:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8657:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8657:3:6"
																		},
																		"nativeSrc": "8657:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8657:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8604:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "8604:43:6"
																},
																"nativeSrc": "8604:71:6",
																"nodeType": "YulFunctionCall",
																"src": "8604:71:6"
															},
															"nativeSrc": "8604:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "8604:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8729:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "8729:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8742:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8742:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8753:2:6",
																				"nodeType": "YulLiteral",
																				"src": "8753:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8738:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8738:3:6"
																		},
																		"nativeSrc": "8738:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8738:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8685:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "8685:43:6"
																},
																"nativeSrc": "8685:72:6",
																"nodeType": "YulFunctionCall",
																"src": "8685:72:6"
															},
															"nativeSrc": "8685:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "8685:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "8432:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8522:9:6",
														"nodeType": "YulTypedName",
														"src": "8522:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8534:6:6",
														"nodeType": "YulTypedName",
														"src": "8534:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8542:6:6",
														"nodeType": "YulTypedName",
														"src": "8542:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8553:4:6",
														"nodeType": "YulTypedName",
														"src": "8553:4:6",
														"type": ""
													}
												],
												"src": "8432:332:6"
											},
											{
												"body": {
													"nativeSrc": "8853:391:6",
													"nodeType": "YulBlock",
													"src": "8853:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "8899:83:6",
																"nodeType": "YulBlock",
																"src": "8899:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8901:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "8901:77:6"
																			},
																			"nativeSrc": "8901:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8901:79:6"
																		},
																		"nativeSrc": "8901:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8901:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8874:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "8874:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8883:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "8883:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8870:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8870:3:6"
																		},
																		"nativeSrc": "8870:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8870:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8895:2:6",
																		"nodeType": "YulLiteral",
																		"src": "8895:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8866:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "8866:3:6"
																},
																"nativeSrc": "8866:32:6",
																"nodeType": "YulFunctionCall",
																"src": "8866:32:6"
															},
															"nativeSrc": "8863:119:6",
															"nodeType": "YulIf",
															"src": "8863:119:6"
														},
														{
															"nativeSrc": "8992:117:6",
															"nodeType": "YulBlock",
															"src": "8992:117:6",
															"statements": [
																{
																	"nativeSrc": "9007:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9007:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9021:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9021:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9011:6:6",
																			"nodeType": "YulTypedName",
																			"src": "9011:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9036:63:6",
																	"nodeType": "YulAssignment",
																	"src": "9036:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9071:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "9071:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9082:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "9082:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9067:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "9067:3:6"
																				},
																				"nativeSrc": "9067:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "9067:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9091:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "9091:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9046:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "9046:20:6"
																		},
																		"nativeSrc": "9046:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9046:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9036:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "9036:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9119:118:6",
															"nodeType": "YulBlock",
															"src": "9119:118:6",
															"statements": [
																{
																	"nativeSrc": "9134:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9134:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9148:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9148:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9138:6:6",
																			"nodeType": "YulTypedName",
																			"src": "9138:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9164:63:6",
																	"nodeType": "YulAssignment",
																	"src": "9164:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9199:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "9199:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9210:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "9210:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9195:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "9195:3:6"
																				},
																				"nativeSrc": "9195:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "9195:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9219:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "9219:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9174:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "9174:20:6"
																		},
																		"nativeSrc": "9174:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9174:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9164:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "9164:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "8770:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8815:9:6",
														"nodeType": "YulTypedName",
														"src": "8815:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8826:7:6",
														"nodeType": "YulTypedName",
														"src": "8826:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8838:6:6",
														"nodeType": "YulTypedName",
														"src": "8838:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8846:6:6",
														"nodeType": "YulTypedName",
														"src": "8846:6:6",
														"type": ""
													}
												],
												"src": "8770:474:6"
											},
											{
												"body": {
													"nativeSrc": "9333:391:6",
													"nodeType": "YulBlock",
													"src": "9333:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "9379:83:6",
																"nodeType": "YulBlock",
																"src": "9379:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9381:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "9381:77:6"
																			},
																			"nativeSrc": "9381:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "9381:79:6"
																		},
																		"nativeSrc": "9381:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "9381:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9354:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "9354:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9363:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "9363:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9350:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9350:3:6"
																		},
																		"nativeSrc": "9350:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9350:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9375:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9375:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9346:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "9346:3:6"
																},
																"nativeSrc": "9346:32:6",
																"nodeType": "YulFunctionCall",
																"src": "9346:32:6"
															},
															"nativeSrc": "9343:119:6",
															"nodeType": "YulIf",
															"src": "9343:119:6"
														},
														{
															"nativeSrc": "9472:117:6",
															"nodeType": "YulBlock",
															"src": "9472:117:6",
															"statements": [
																{
																	"nativeSrc": "9487:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9487:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9501:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9501:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9491:6:6",
																			"nodeType": "YulTypedName",
																			"src": "9491:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9516:63:6",
																	"nodeType": "YulAssignment",
																	"src": "9516:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9551:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "9551:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9562:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "9562:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9547:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "9547:3:6"
																				},
																				"nativeSrc": "9547:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "9547:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9571:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "9571:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9526:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "9526:20:6"
																		},
																		"nativeSrc": "9526:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9526:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9516:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "9516:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9599:118:6",
															"nodeType": "YulBlock",
															"src": "9599:118:6",
															"statements": [
																{
																	"nativeSrc": "9614:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9614:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9628:2:6",
																		"nodeType": "YulLiteral",
																		"src": "9628:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9618:6:6",
																			"nodeType": "YulTypedName",
																			"src": "9618:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9644:63:6",
																	"nodeType": "YulAssignment",
																	"src": "9644:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9679:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "9679:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9690:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "9690:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9675:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "9675:3:6"
																				},
																				"nativeSrc": "9675:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "9675:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9699:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "9699:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9654:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "9654:20:6"
																		},
																		"nativeSrc": "9654:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9654:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9644:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "9644:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "9250:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9295:9:6",
														"nodeType": "YulTypedName",
														"src": "9295:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9306:7:6",
														"nodeType": "YulTypedName",
														"src": "9306:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9318:6:6",
														"nodeType": "YulTypedName",
														"src": "9318:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9326:6:6",
														"nodeType": "YulTypedName",
														"src": "9326:6:6",
														"type": ""
													}
												],
												"src": "9250:474:6"
											},
											{
												"body": {
													"nativeSrc": "9758:152:6",
													"nodeType": "YulBlock",
													"src": "9758:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9775:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9775:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9778:77:6",
																		"nodeType": "YulLiteral",
																		"src": "9778:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9768:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9768:6:6"
																},
																"nativeSrc": "9768:88:6",
																"nodeType": "YulFunctionCall",
																"src": "9768:88:6"
															},
															"nativeSrc": "9768:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "9768:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9865:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9865:6:6"
																},
																"nativeSrc": "9865:15:6",
																"nodeType": "YulFunctionCall",
																"src": "9865:15:6"
															},
															"nativeSrc": "9865:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "9865:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9896:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9896:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9899:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9899:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9889:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "9889:6:6"
																},
																"nativeSrc": "9889:15:6",
																"nodeType": "YulFunctionCall",
																"src": "9889:15:6"
															},
															"nativeSrc": "9889:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "9889:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9730:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "9730:180:6"
											},
											{
												"body": {
													"nativeSrc": "9960:147:6",
													"nodeType": "YulBlock",
													"src": "9960:147:6",
													"statements": [
														{
															"nativeSrc": "9970:25:6",
															"nodeType": "YulAssignment",
															"src": "9970:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9993:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "9993:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9975:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "9975:17:6"
																},
																"nativeSrc": "9975:20:6",
																"nodeType": "YulFunctionCall",
																"src": "9975:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9970:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "9970:1:6"
																}
															]
														},
														{
															"nativeSrc": "10004:25:6",
															"nodeType": "YulAssignment",
															"src": "10004:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10027:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10027:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10009:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10009:17:6"
																},
																"nativeSrc": "10009:20:6",
																"nodeType": "YulFunctionCall",
																"src": "10009:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10004:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "10004:1:6"
																}
															]
														},
														{
															"nativeSrc": "10038:16:6",
															"nodeType": "YulAssignment",
															"src": "10038:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10049:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10049:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10052:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10052:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10045:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10045:3:6"
																},
																"nativeSrc": "10045:9:6",
																"nodeType": "YulFunctionCall",
																"src": "10045:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10038:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10038:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10078:22:6",
																"nodeType": "YulBlock",
																"src": "10078:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10080:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "10080:16:6"
																			},
																			"nativeSrc": "10080:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10080:18:6"
																		},
																		"nativeSrc": "10080:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "10080:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10070:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10070:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10073:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "10073:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10067:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "10067:2:6"
																},
																"nativeSrc": "10067:10:6",
																"nodeType": "YulFunctionCall",
																"src": "10067:10:6"
															},
															"nativeSrc": "10064:36:6",
															"nodeType": "YulIf",
															"src": "10064:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9916:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9947:1:6",
														"nodeType": "YulTypedName",
														"src": "9947:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9950:1:6",
														"nodeType": "YulTypedName",
														"src": "9950:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9956:3:6",
														"nodeType": "YulTypedName",
														"src": "9956:3:6",
														"type": ""
													}
												],
												"src": "9916:191:6"
											},
											{
												"body": {
													"nativeSrc": "10161:362:6",
													"nodeType": "YulBlock",
													"src": "10161:362:6",
													"statements": [
														{
															"nativeSrc": "10171:25:6",
															"nodeType": "YulAssignment",
															"src": "10171:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10194:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10194:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10176:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10176:17:6"
																},
																"nativeSrc": "10176:20:6",
																"nodeType": "YulFunctionCall",
																"src": "10176:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10171:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "10171:1:6"
																}
															]
														},
														{
															"nativeSrc": "10205:25:6",
															"nodeType": "YulAssignment",
															"src": "10205:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10228:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10228:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10210:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10210:17:6"
																},
																"nativeSrc": "10210:20:6",
																"nodeType": "YulFunctionCall",
																"src": "10210:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10205:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "10205:1:6"
																}
															]
														},
														{
															"nativeSrc": "10239:28:6",
															"nodeType": "YulVariableDeclaration",
															"src": "10239:28:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10262:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10262:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10265:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10265:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10258:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10258:3:6"
																},
																"nativeSrc": "10258:9:6",
																"nodeType": "YulFunctionCall",
																"src": "10258:9:6"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "10243:11:6",
																	"nodeType": "YulTypedName",
																	"src": "10243:11:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10276:41:6",
															"nodeType": "YulAssignment",
															"src": "10276:41:6",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "10305:11:6",
																		"nodeType": "YulIdentifier",
																		"src": "10305:11:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10287:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10287:17:6"
																},
																"nativeSrc": "10287:30:6",
																"nodeType": "YulFunctionCall",
																"src": "10287:30:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10276:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "10276:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10494:22:6",
																"nodeType": "YulBlock",
																"src": "10494:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10496:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "10496:16:6"
																			},
																			"nativeSrc": "10496:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10496:18:6"
																		},
																		"nativeSrc": "10496:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "10496:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10427:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "10427:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10420:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "10420:6:6"
																				},
																				"nativeSrc": "10420:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "10420:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10450:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "10450:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10457:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "10457:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10466:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "10466:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10453:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "10453:3:6"
																						},
																						"nativeSrc": "10453:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "10453:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10447:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "10447:2:6"
																				},
																				"nativeSrc": "10447:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "10447:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10400:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "10400:2:6"
																		},
																		"nativeSrc": "10400:83:6",
																		"nodeType": "YulFunctionCall",
																		"src": "10400:83:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10380:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10380:6:6"
																},
																"nativeSrc": "10380:113:6",
																"nodeType": "YulFunctionCall",
																"src": "10380:113:6"
															},
															"nativeSrc": "10377:139:6",
															"nodeType": "YulIf",
															"src": "10377:139:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "10113:410:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10144:1:6",
														"nodeType": "YulTypedName",
														"src": "10144:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10147:1:6",
														"nodeType": "YulTypedName",
														"src": "10147:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10153:7:6",
														"nodeType": "YulTypedName",
														"src": "10153:7:6",
														"type": ""
													}
												],
												"src": "10113:410:6"
											},
											{
												"body": {
													"nativeSrc": "10557:152:6",
													"nodeType": "YulBlock",
													"src": "10557:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10574:1:6",
																		"nodeType": "YulLiteral",
																		"src": "10574:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10577:77:6",
																		"nodeType": "YulLiteral",
																		"src": "10577:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10567:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10567:6:6"
																},
																"nativeSrc": "10567:88:6",
																"nodeType": "YulFunctionCall",
																"src": "10567:88:6"
															},
															"nativeSrc": "10567:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "10567:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10671:1:6",
																		"nodeType": "YulLiteral",
																		"src": "10671:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10674:4:6",
																		"nodeType": "YulLiteral",
																		"src": "10674:4:6",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10664:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10664:6:6"
																},
																"nativeSrc": "10664:15:6",
																"nodeType": "YulFunctionCall",
																"src": "10664:15:6"
															},
															"nativeSrc": "10664:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "10664:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10695:1:6",
																		"nodeType": "YulLiteral",
																		"src": "10695:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10698:4:6",
																		"nodeType": "YulLiteral",
																		"src": "10698:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10688:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10688:6:6"
																},
																"nativeSrc": "10688:15:6",
																"nodeType": "YulFunctionCall",
																"src": "10688:15:6"
															},
															"nativeSrc": "10688:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "10688:15:6"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "10529:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "10529:180:6"
											},
											{
												"body": {
													"nativeSrc": "10757:143:6",
													"nodeType": "YulBlock",
													"src": "10757:143:6",
													"statements": [
														{
															"nativeSrc": "10767:25:6",
															"nodeType": "YulAssignment",
															"src": "10767:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10790:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10790:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10772:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10772:17:6"
																},
																"nativeSrc": "10772:20:6",
																"nodeType": "YulFunctionCall",
																"src": "10772:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10767:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "10767:1:6"
																}
															]
														},
														{
															"nativeSrc": "10801:25:6",
															"nodeType": "YulAssignment",
															"src": "10801:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10824:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10824:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10806:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "10806:17:6"
																},
																"nativeSrc": "10806:20:6",
																"nodeType": "YulFunctionCall",
																"src": "10806:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10801:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "10801:1:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10848:22:6",
																"nodeType": "YulBlock",
																"src": "10848:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "10850:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "10850:16:6"
																			},
																			"nativeSrc": "10850:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "10850:18:6"
																		},
																		"nativeSrc": "10850:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "10850:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10845:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10845:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10838:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10838:6:6"
																},
																"nativeSrc": "10838:9:6",
																"nodeType": "YulFunctionCall",
																"src": "10838:9:6"
															},
															"nativeSrc": "10835:35:6",
															"nodeType": "YulIf",
															"src": "10835:35:6"
														},
														{
															"nativeSrc": "10880:14:6",
															"nodeType": "YulAssignment",
															"src": "10880:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10889:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10889:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10892:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "10892:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10885:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "10885:3:6"
																},
																"nativeSrc": "10885:9:6",
																"nodeType": "YulFunctionCall",
																"src": "10885:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "10880:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "10880:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "10715:185:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10746:1:6",
														"nodeType": "YulTypedName",
														"src": "10746:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10749:1:6",
														"nodeType": "YulTypedName",
														"src": "10749:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "10755:1:6",
														"nodeType": "YulTypedName",
														"src": "10755:1:6",
														"type": ""
													}
												],
												"src": "10715:185:6"
											},
											{
												"body": {
													"nativeSrc": "10934:152:6",
													"nodeType": "YulBlock",
													"src": "10934:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10951:1:6",
																		"nodeType": "YulLiteral",
																		"src": "10951:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10954:77:6",
																		"nodeType": "YulLiteral",
																		"src": "10954:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10944:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "10944:6:6"
																},
																"nativeSrc": "10944:88:6",
																"nodeType": "YulFunctionCall",
																"src": "10944:88:6"
															},
															"nativeSrc": "10944:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "10944:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11048:1:6",
																		"nodeType": "YulLiteral",
																		"src": "11048:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11051:4:6",
																		"nodeType": "YulLiteral",
																		"src": "11051:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11041:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11041:6:6"
																},
																"nativeSrc": "11041:15:6",
																"nodeType": "YulFunctionCall",
																"src": "11041:15:6"
															},
															"nativeSrc": "11041:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "11041:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11072:1:6",
																		"nodeType": "YulLiteral",
																		"src": "11072:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11075:4:6",
																		"nodeType": "YulLiteral",
																		"src": "11075:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11065:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11065:6:6"
																},
																"nativeSrc": "11065:15:6",
																"nodeType": "YulFunctionCall",
																"src": "11065:15:6"
															},
															"nativeSrc": "11065:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "11065:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "10906:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "10906:180:6"
											},
											{
												"body": {
													"nativeSrc": "11143:269:6",
													"nodeType": "YulBlock",
													"src": "11143:269:6",
													"statements": [
														{
															"nativeSrc": "11153:22:6",
															"nodeType": "YulAssignment",
															"src": "11153:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11167:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11167:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11173:1:6",
																		"nodeType": "YulLiteral",
																		"src": "11173:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11163:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11163:3:6"
																},
																"nativeSrc": "11163:12:6",
																"nodeType": "YulFunctionCall",
																"src": "11163:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "11153:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11153:6:6"
																}
															]
														},
														{
															"nativeSrc": "11184:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "11184:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "11214:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "11214:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11220:1:6",
																		"nodeType": "YulLiteral",
																		"src": "11220:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11210:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11210:3:6"
																},
																"nativeSrc": "11210:12:6",
																"nodeType": "YulFunctionCall",
																"src": "11210:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "11188:18:6",
																	"nodeType": "YulTypedName",
																	"src": "11188:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11261:51:6",
																"nodeType": "YulBlock",
																"src": "11261:51:6",
																"statements": [
																	{
																		"nativeSrc": "11275:27:6",
																		"nodeType": "YulAssignment",
																		"src": "11275:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "11289:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "11289:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11297:4:6",
																					"nodeType": "YulLiteral",
																					"src": "11297:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "11285:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "11285:3:6"
																			},
																			"nativeSrc": "11285:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11285:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "11275:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "11275:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11241:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "11241:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11234:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11234:6:6"
																},
																"nativeSrc": "11234:26:6",
																"nodeType": "YulFunctionCall",
																"src": "11234:26:6"
															},
															"nativeSrc": "11231:81:6",
															"nodeType": "YulIf",
															"src": "11231:81:6"
														},
														{
															"body": {
																"nativeSrc": "11364:42:6",
																"nodeType": "YulBlock",
																"src": "11364:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "11378:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "11378:16:6"
																			},
																			"nativeSrc": "11378:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "11378:18:6"
																		},
																		"nativeSrc": "11378:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "11378:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "11328:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "11328:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11351:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "11351:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11359:2:6",
																				"nodeType": "YulLiteral",
																				"src": "11359:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "11348:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "11348:2:6"
																		},
																		"nativeSrc": "11348:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11348:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11325:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "11325:2:6"
																},
																"nativeSrc": "11325:38:6",
																"nodeType": "YulFunctionCall",
																"src": "11325:38:6"
															},
															"nativeSrc": "11322:84:6",
															"nodeType": "YulIf",
															"src": "11322:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "11092:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "11127:4:6",
														"nodeType": "YulTypedName",
														"src": "11127:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "11136:6:6",
														"nodeType": "YulTypedName",
														"src": "11136:6:6",
														"type": ""
													}
												],
												"src": "11092:320:6"
											},
											{
												"body": {
													"nativeSrc": "11483:53:6",
													"nodeType": "YulBlock",
													"src": "11483:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11500:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "11500:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11523:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "11523:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "11505:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "11505:17:6"
																		},
																		"nativeSrc": "11505:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11505:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11493:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "11493:6:6"
																},
																"nativeSrc": "11493:37:6",
																"nodeType": "YulFunctionCall",
																"src": "11493:37:6"
															},
															"nativeSrc": "11493:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "11493:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "11418:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11471:5:6",
														"nodeType": "YulTypedName",
														"src": "11471:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11478:3:6",
														"nodeType": "YulTypedName",
														"src": "11478:3:6",
														"type": ""
													}
												],
												"src": "11418:118:6"
											},
											{
												"body": {
													"nativeSrc": "11640:124:6",
													"nodeType": "YulBlock",
													"src": "11640:124:6",
													"statements": [
														{
															"nativeSrc": "11650:26:6",
															"nodeType": "YulAssignment",
															"src": "11650:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11662:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "11662:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11673:2:6",
																		"nodeType": "YulLiteral",
																		"src": "11673:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11658:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "11658:3:6"
																},
																"nativeSrc": "11658:18:6",
																"nodeType": "YulFunctionCall",
																"src": "11658:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11650:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "11650:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11730:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11730:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11743:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "11743:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11754:1:6",
																				"nodeType": "YulLiteral",
																				"src": "11754:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11739:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "11739:3:6"
																		},
																		"nativeSrc": "11739:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "11739:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "11686:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "11686:43:6"
																},
																"nativeSrc": "11686:71:6",
																"nodeType": "YulFunctionCall",
																"src": "11686:71:6"
															},
															"nativeSrc": "11686:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "11686:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "11542:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11612:9:6",
														"nodeType": "YulTypedName",
														"src": "11612:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11624:6:6",
														"nodeType": "YulTypedName",
														"src": "11624:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11635:4:6",
														"nodeType": "YulTypedName",
														"src": "11635:4:6",
														"type": ""
													}
												],
												"src": "11542:222:6"
											},
											{
												"body": {
													"nativeSrc": "11833:80:6",
													"nodeType": "YulBlock",
													"src": "11833:80:6",
													"statements": [
														{
															"nativeSrc": "11843:22:6",
															"nodeType": "YulAssignment",
															"src": "11843:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11858:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "11858:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11852:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "11852:5:6"
																},
																"nativeSrc": "11852:13:6",
																"nodeType": "YulFunctionCall",
																"src": "11852:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11843:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "11843:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11901:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "11901:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "11874:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "11874:26:6"
																},
																"nativeSrc": "11874:33:6",
																"nodeType": "YulFunctionCall",
																"src": "11874:33:6"
															},
															"nativeSrc": "11874:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "11874:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "11770:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11811:6:6",
														"nodeType": "YulTypedName",
														"src": "11811:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11819:3:6",
														"nodeType": "YulTypedName",
														"src": "11819:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "11827:5:6",
														"nodeType": "YulTypedName",
														"src": "11827:5:6",
														"type": ""
													}
												],
												"src": "11770:143:6"
											},
											{
												"body": {
													"nativeSrc": "11996:274:6",
													"nodeType": "YulBlock",
													"src": "11996:274:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "12042:83:6",
																"nodeType": "YulBlock",
																"src": "12042:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "12044:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "12044:77:6"
																			},
																			"nativeSrc": "12044:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "12044:79:6"
																		},
																		"nativeSrc": "12044:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "12044:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12017:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "12017:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12026:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12026:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12013:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12013:3:6"
																		},
																		"nativeSrc": "12013:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12013:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12038:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12038:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12009:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12009:3:6"
																},
																"nativeSrc": "12009:32:6",
																"nodeType": "YulFunctionCall",
																"src": "12009:32:6"
															},
															"nativeSrc": "12006:119:6",
															"nodeType": "YulIf",
															"src": "12006:119:6"
														},
														{
															"nativeSrc": "12135:128:6",
															"nodeType": "YulBlock",
															"src": "12135:128:6",
															"statements": [
																{
																	"nativeSrc": "12150:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12150:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12164:1:6",
																		"nodeType": "YulLiteral",
																		"src": "12164:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12154:6:6",
																			"nodeType": "YulTypedName",
																			"src": "12154:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12179:74:6",
																	"nodeType": "YulAssignment",
																	"src": "12179:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12225:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "12225:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12236:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "12236:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12221:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "12221:3:6"
																				},
																				"nativeSrc": "12221:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "12221:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12245:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "12245:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "12189:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "12189:31:6"
																		},
																		"nativeSrc": "12189:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12189:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "12179:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "12179:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "11919:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11966:9:6",
														"nodeType": "YulTypedName",
														"src": "11966:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11977:7:6",
														"nodeType": "YulTypedName",
														"src": "11977:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11989:6:6",
														"nodeType": "YulTypedName",
														"src": "11989:6:6",
														"type": ""
													}
												],
												"src": "11919:351:6"
											},
											{
												"body": {
													"nativeSrc": "12430:288:6",
													"nodeType": "YulBlock",
													"src": "12430:288:6",
													"statements": [
														{
															"nativeSrc": "12440:26:6",
															"nodeType": "YulAssignment",
															"src": "12440:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12452:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "12452:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12463:2:6",
																		"nodeType": "YulLiteral",
																		"src": "12463:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12448:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "12448:3:6"
																},
																"nativeSrc": "12448:18:6",
																"nodeType": "YulFunctionCall",
																"src": "12448:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12440:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "12440:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12520:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12520:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12533:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12533:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12544:1:6",
																				"nodeType": "YulLiteral",
																				"src": "12544:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12529:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12529:3:6"
																		},
																		"nativeSrc": "12529:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12529:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12476:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "12476:43:6"
																},
																"nativeSrc": "12476:71:6",
																"nodeType": "YulFunctionCall",
																"src": "12476:71:6"
															},
															"nativeSrc": "12476:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "12476:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12601:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12601:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12614:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12614:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12625:2:6",
																				"nodeType": "YulLiteral",
																				"src": "12625:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12610:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12610:3:6"
																		},
																		"nativeSrc": "12610:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12610:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12557:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "12557:43:6"
																},
																"nativeSrc": "12557:72:6",
																"nodeType": "YulFunctionCall",
																"src": "12557:72:6"
															},
															"nativeSrc": "12557:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "12557:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12683:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12683:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12696:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "12696:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12707:2:6",
																				"nodeType": "YulLiteral",
																				"src": "12707:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12692:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "12692:3:6"
																		},
																		"nativeSrc": "12692:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12692:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12639:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "12639:43:6"
																},
																"nativeSrc": "12639:72:6",
																"nodeType": "YulFunctionCall",
																"src": "12639:72:6"
															},
															"nativeSrc": "12639:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "12639:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "12276:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12386:9:6",
														"nodeType": "YulTypedName",
														"src": "12386:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12398:6:6",
														"nodeType": "YulTypedName",
														"src": "12398:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12406:6:6",
														"nodeType": "YulTypedName",
														"src": "12406:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12414:6:6",
														"nodeType": "YulTypedName",
														"src": "12414:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12425:4:6",
														"nodeType": "YulTypedName",
														"src": "12425:4:6",
														"type": ""
													}
												],
												"src": "12276:442:6"
											},
											{
												"body": {
													"nativeSrc": "12764:76:6",
													"nodeType": "YulBlock",
													"src": "12764:76:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "12818:16:6",
																"nodeType": "YulBlock",
																"src": "12818:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12827:1:6",
																					"nodeType": "YulLiteral",
																					"src": "12827:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12830:1:6",
																					"nodeType": "YulLiteral",
																					"src": "12830:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12820:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "12820:6:6"
																			},
																			"nativeSrc": "12820:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "12820:12:6"
																		},
																		"nativeSrc": "12820:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "12820:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12787:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "12787:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "12809:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "12809:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "12794:14:6",
																					"nodeType": "YulIdentifier",
																					"src": "12794:14:6"
																				},
																				"nativeSrc": "12794:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "12794:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "12784:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "12784:2:6"
																		},
																		"nativeSrc": "12784:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "12784:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "12777:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "12777:6:6"
																},
																"nativeSrc": "12777:40:6",
																"nodeType": "YulFunctionCall",
																"src": "12777:40:6"
															},
															"nativeSrc": "12774:60:6",
															"nodeType": "YulIf",
															"src": "12774:60:6"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "12724:116:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12757:5:6",
														"nodeType": "YulTypedName",
														"src": "12757:5:6",
														"type": ""
													}
												],
												"src": "12724:116:6"
											},
											{
												"body": {
													"nativeSrc": "12906:77:6",
													"nodeType": "YulBlock",
													"src": "12906:77:6",
													"statements": [
														{
															"nativeSrc": "12916:22:6",
															"nodeType": "YulAssignment",
															"src": "12916:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "12931:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "12931:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12925:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "12925:5:6"
																},
																"nativeSrc": "12925:13:6",
																"nodeType": "YulFunctionCall",
																"src": "12925:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12916:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "12916:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12971:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "12971:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "12947:23:6",
																	"nodeType": "YulIdentifier",
																	"src": "12947:23:6"
																},
																"nativeSrc": "12947:30:6",
																"nodeType": "YulFunctionCall",
																"src": "12947:30:6"
															},
															"nativeSrc": "12947:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "12947:30:6"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "12846:137:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "12884:6:6",
														"nodeType": "YulTypedName",
														"src": "12884:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12892:3:6",
														"nodeType": "YulTypedName",
														"src": "12892:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "12900:5:6",
														"nodeType": "YulTypedName",
														"src": "12900:5:6",
														"type": ""
													}
												],
												"src": "12846:137:6"
											},
											{
												"body": {
													"nativeSrc": "13063:271:6",
													"nodeType": "YulBlock",
													"src": "13063:271:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "13109:83:6",
																"nodeType": "YulBlock",
																"src": "13109:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13111:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "13111:77:6"
																			},
																			"nativeSrc": "13111:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "13111:79:6"
																		},
																		"nativeSrc": "13111:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "13111:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13084:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "13084:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13093:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13093:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13080:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13080:3:6"
																		},
																		"nativeSrc": "13080:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13080:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13105:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13105:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13076:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13076:3:6"
																},
																"nativeSrc": "13076:32:6",
																"nodeType": "YulFunctionCall",
																"src": "13076:32:6"
															},
															"nativeSrc": "13073:119:6",
															"nodeType": "YulIf",
															"src": "13073:119:6"
														},
														{
															"nativeSrc": "13202:125:6",
															"nodeType": "YulBlock",
															"src": "13202:125:6",
															"statements": [
																{
																	"nativeSrc": "13217:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13217:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13231:1:6",
																		"nodeType": "YulLiteral",
																		"src": "13231:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13221:6:6",
																			"nodeType": "YulTypedName",
																			"src": "13221:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13246:71:6",
																	"nodeType": "YulAssignment",
																	"src": "13246:71:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13289:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "13289:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13300:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "13300:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13285:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "13285:3:6"
																				},
																				"nativeSrc": "13285:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "13285:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13309:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "13309:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "13256:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "13256:28:6"
																		},
																		"nativeSrc": "13256:61:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13256:61:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13246:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "13246:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "12989:345:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13033:9:6",
														"nodeType": "YulTypedName",
														"src": "13033:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13044:7:6",
														"nodeType": "YulTypedName",
														"src": "13044:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13056:6:6",
														"nodeType": "YulTypedName",
														"src": "13056:6:6",
														"type": ""
													}
												],
												"src": "12989:345:6"
											},
											{
												"body": {
													"nativeSrc": "13466:206:6",
													"nodeType": "YulBlock",
													"src": "13466:206:6",
													"statements": [
														{
															"nativeSrc": "13476:26:6",
															"nodeType": "YulAssignment",
															"src": "13476:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13488:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "13488:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13499:2:6",
																		"nodeType": "YulLiteral",
																		"src": "13499:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13484:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13484:3:6"
																},
																"nativeSrc": "13484:18:6",
																"nodeType": "YulFunctionCall",
																"src": "13484:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13476:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13476:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13556:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13556:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13569:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13569:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13580:1:6",
																				"nodeType": "YulLiteral",
																				"src": "13580:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13565:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13565:3:6"
																		},
																		"nativeSrc": "13565:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13565:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13512:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "13512:43:6"
																},
																"nativeSrc": "13512:71:6",
																"nodeType": "YulFunctionCall",
																"src": "13512:71:6"
															},
															"nativeSrc": "13512:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "13512:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13637:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13637:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13650:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13650:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13661:2:6",
																				"nodeType": "YulLiteral",
																				"src": "13661:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13646:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13646:3:6"
																		},
																		"nativeSrc": "13646:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13646:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13593:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "13593:43:6"
																},
																"nativeSrc": "13593:72:6",
																"nodeType": "YulFunctionCall",
																"src": "13593:72:6"
															},
															"nativeSrc": "13593:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "13593:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "13340:332:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13430:9:6",
														"nodeType": "YulTypedName",
														"src": "13430:9:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13442:6:6",
														"nodeType": "YulTypedName",
														"src": "13442:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13450:6:6",
														"nodeType": "YulTypedName",
														"src": "13450:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13461:4:6",
														"nodeType": "YulTypedName",
														"src": "13461:4:6",
														"type": ""
													}
												],
												"src": "13340:332:6"
											},
											{
												"body": {
													"nativeSrc": "13860:371:6",
													"nodeType": "YulBlock",
													"src": "13860:371:6",
													"statements": [
														{
															"nativeSrc": "13870:27:6",
															"nodeType": "YulAssignment",
															"src": "13870:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13882:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "13882:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13893:3:6",
																		"nodeType": "YulLiteral",
																		"src": "13893:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13878:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "13878:3:6"
																},
																"nativeSrc": "13878:19:6",
																"nodeType": "YulFunctionCall",
																"src": "13878:19:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13870:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "13870:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13951:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "13951:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13964:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "13964:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13975:1:6",
																				"nodeType": "YulLiteral",
																				"src": "13975:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13960:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "13960:3:6"
																		},
																		"nativeSrc": "13960:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "13960:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13907:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "13907:43:6"
																},
																"nativeSrc": "13907:71:6",
																"nodeType": "YulFunctionCall",
																"src": "13907:71:6"
															},
															"nativeSrc": "13907:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "13907:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14032:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "14032:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14045:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14045:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14056:2:6",
																				"nodeType": "YulLiteral",
																				"src": "14056:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14041:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14041:3:6"
																		},
																		"nativeSrc": "14041:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14041:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13988:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "13988:43:6"
																},
																"nativeSrc": "13988:72:6",
																"nodeType": "YulFunctionCall",
																"src": "13988:72:6"
															},
															"nativeSrc": "13988:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "13988:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14114:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "14114:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14127:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14127:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14138:2:6",
																				"nodeType": "YulLiteral",
																				"src": "14138:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14123:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14123:3:6"
																		},
																		"nativeSrc": "14123:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14123:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14070:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "14070:43:6"
																},
																"nativeSrc": "14070:72:6",
																"nodeType": "YulFunctionCall",
																"src": "14070:72:6"
															},
															"nativeSrc": "14070:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "14070:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "14196:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "14196:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14209:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14209:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14220:2:6",
																				"nodeType": "YulLiteral",
																				"src": "14220:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14205:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14205:3:6"
																		},
																		"nativeSrc": "14205:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14205:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14152:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "14152:43:6"
																},
																"nativeSrc": "14152:72:6",
																"nodeType": "YulFunctionCall",
																"src": "14152:72:6"
															},
															"nativeSrc": "14152:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "14152:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_uint256_t_address__to_t_uint256_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "13678:553:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13808:9:6",
														"nodeType": "YulTypedName",
														"src": "13808:9:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "13820:6:6",
														"nodeType": "YulTypedName",
														"src": "13820:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13828:6:6",
														"nodeType": "YulTypedName",
														"src": "13828:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13836:6:6",
														"nodeType": "YulTypedName",
														"src": "13836:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13844:6:6",
														"nodeType": "YulTypedName",
														"src": "13844:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13855:4:6",
														"nodeType": "YulTypedName",
														"src": "13855:4:6",
														"type": ""
													}
												],
												"src": "13678:553:6"
											},
											{
												"body": {
													"nativeSrc": "14391:288:6",
													"nodeType": "YulBlock",
													"src": "14391:288:6",
													"statements": [
														{
															"nativeSrc": "14401:26:6",
															"nodeType": "YulAssignment",
															"src": "14401:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14413:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "14413:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14424:2:6",
																		"nodeType": "YulLiteral",
																		"src": "14424:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14409:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "14409:3:6"
																},
																"nativeSrc": "14409:18:6",
																"nodeType": "YulFunctionCall",
																"src": "14409:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14401:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "14401:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14481:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "14481:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14494:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14494:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14505:1:6",
																				"nodeType": "YulLiteral",
																				"src": "14505:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14490:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14490:3:6"
																		},
																		"nativeSrc": "14490:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14490:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14437:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "14437:43:6"
																},
																"nativeSrc": "14437:71:6",
																"nodeType": "YulFunctionCall",
																"src": "14437:71:6"
															},
															"nativeSrc": "14437:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "14437:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14562:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "14562:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14575:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14575:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14586:2:6",
																				"nodeType": "YulLiteral",
																				"src": "14586:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14571:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14571:3:6"
																		},
																		"nativeSrc": "14571:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14571:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14518:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "14518:43:6"
																},
																"nativeSrc": "14518:72:6",
																"nodeType": "YulFunctionCall",
																"src": "14518:72:6"
															},
															"nativeSrc": "14518:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "14518:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14644:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "14644:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14657:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "14657:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14668:2:6",
																				"nodeType": "YulLiteral",
																				"src": "14668:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14653:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "14653:3:6"
																		},
																		"nativeSrc": "14653:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "14653:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "14600:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "14600:43:6"
																},
																"nativeSrc": "14600:72:6",
																"nodeType": "YulFunctionCall",
																"src": "14600:72:6"
															},
															"nativeSrc": "14600:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "14600:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "14237:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14347:9:6",
														"nodeType": "YulTypedName",
														"src": "14347:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14359:6:6",
														"nodeType": "YulTypedName",
														"src": "14359:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14367:6:6",
														"nodeType": "YulTypedName",
														"src": "14367:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14375:6:6",
														"nodeType": "YulTypedName",
														"src": "14375:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14386:4:6",
														"nodeType": "YulTypedName",
														"src": "14386:4:6",
														"type": ""
													}
												],
												"src": "14237:442:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$1295_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$1295_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$1295_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$1295__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$1295_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_contract$_IERC20_$1295(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$1295(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$1295(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$1295(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$1295(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_contract$_IERC20_$1295t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$1295(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_contract$_IERC20_$1295__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_contract$_IERC20_$1295_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_uint256_t_address__to_t_uint256_t_address_t_uint256_t_address__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4543C7CF GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0x9CD441DA GT PUSH2 0x6F JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x343 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x361 JUMPI DUP1 PUSH4 0xF000EAD9 EQ PUSH2 0x391 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x4543C7CF EQ PUSH2 0x246 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x2B2 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1F7 JUMPI DUP1 PUSH4 0x43264349 EQ PUSH2 0x215 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x54D50D4 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x15B JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x18B JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1C13 JUMP JUMPDEST PUSH2 0x3AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x1C72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x145 PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x175 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x170 SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH2 0x48C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x1DCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x193 PUSH2 0x4AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP2 SWAP1 PUSH2 0x1E41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B1 PUSH2 0x4D3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x1C72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DC SWAP2 SWAP1 PUSH2 0x1E5A JUMP JUMPDEST PUSH2 0x4DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x1DCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FF PUSH2 0x50A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20C SWAP2 SWAP1 PUSH2 0x1EC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x1F19 JUMP JUMPDEST PUSH2 0x512 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP3 SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24E PUSH2 0xB68 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25B SWAP2 SWAP1 PUSH2 0x1C72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x1F90 JUMP JUMPDEST PUSH2 0xB6E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x1C72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH2 0xBB3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x1CFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x1FBB JUMP JUMPDEST PUSH2 0xC43 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2DA SWAP3 SWAP2 SWAP1 PUSH2 0x1FE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F8 SWAP2 SWAP1 PUSH2 0x200D JUMP JUMPDEST PUSH2 0x10AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x1C72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x1D75 JUMP JUMPDEST PUSH2 0x13FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33A SWAP2 SWAP1 PUSH2 0x1DCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34B PUSH2 0x141F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x358 SWAP2 SWAP1 PUSH2 0x1E41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x376 SWAP2 SWAP1 PUSH2 0x204B JUMP JUMPDEST PUSH2 0x1444 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x388 SWAP2 SWAP1 PUSH2 0x1C72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x399 PUSH2 0x14C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A6 SWAP2 SWAP1 PUSH2 0x1C72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 DUP5 GT PUSH2 0x3BB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP4 GT DUP1 ISZERO PUSH2 0x3C9 JUMPI POP PUSH0 DUP3 GT JUMPDEST PUSH2 0x3D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH2 0x3DD SWAP2 SWAP1 PUSH2 0x20B6 JUMP JUMPDEST DUP3 DUP6 PUSH2 0x3E9 SWAP2 SWAP1 PUSH2 0x20E9 JUMP JUMPDEST PUSH2 0x3F3 SWAP2 SWAP1 PUSH2 0x2157 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x40B SWAP1 PUSH2 0x21B4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x437 SWAP1 PUSH2 0x21B4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x482 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x459 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x482 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x465 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x496 PUSH2 0x14CC JUMP JUMPDEST SWAP1 POP PUSH2 0x4A3 DUP2 DUP6 DUP6 PUSH2 0x14D3 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x4E6 PUSH2 0x14CC JUMP JUMPDEST SWAP1 POP PUSH2 0x4F3 DUP6 DUP3 DUP6 PUSH2 0x14E5 JUMP JUMPDEST PUSH2 0x4FE DUP6 DUP6 DUP6 PUSH2 0x1577 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 GT PUSH2 0x51F JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x5C6 JUMPI POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0x5CE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x629 SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x644 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x668 SWAP2 SWAP1 PUSH2 0x2220 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6C5 SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6E0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x704 SWAP2 SWAP1 PUSH2 0x2220 JUMP JUMPDEST SWAP1 POP PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x895 JUMPI PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP3 POP PUSH2 0x789 DUP8 DUP4 DUP4 PUSH2 0x3AF JUMP JUMPDEST SWAP4 POP DUP5 DUP5 GT PUSH2 0x796 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP11 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x224B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7EF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x813 SWAP2 SWAP1 PUSH2 0x22AA JUMP JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x84F SWAP3 SWAP2 SWAP1 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x86B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x88F SWAP2 SWAP1 PUSH2 0x22AA JUMP JUMPDEST POP PUSH2 0x9CC JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP6 POP PUSH2 0x8C4 DUP8 DUP3 DUP5 PUSH2 0x3AF JUMP JUMPDEST SWAP4 POP DUP5 DUP5 GT PUSH2 0x8D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP11 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x224B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x92A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x94E SWAP2 SWAP1 PUSH2 0x22AA JUMP JUMPDEST POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x98A SWAP3 SWAP2 SWAP1 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9A6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9CA SWAP2 SWAP1 PUSH2 0x22AA JUMP JUMPDEST POP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA26 SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA41 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA65 SWAP2 SWAP1 PUSH2 0x2220 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAC5 SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xAE0 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB04 SWAP2 SWAP1 PUSH2 0x2220 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x24043855BFBFEA0CCEA141E5A73D7116BF0BFE083EA900A791F4B407FF03E525 DUP9 DUP9 DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xB56 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP SWAP4 POP SWAP4 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xBC2 SWAP1 PUSH2 0x21B4 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBEE SWAP1 PUSH2 0x21B4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC39 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC10 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC39 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC1C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCA0 SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCBB JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xCDF SWAP2 SWAP1 PUSH2 0x2220 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD3C SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD57 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD7B SWAP2 SWAP1 PUSH2 0x2220 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0xD86 PUSH2 0x4D3 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP8 PUSH2 0xD95 SWAP2 SWAP1 PUSH2 0x20E9 JUMP JUMPDEST PUSH2 0xD9F SWAP2 SWAP1 PUSH2 0x2157 JUMP JUMPDEST SWAP5 POP DUP1 DUP3 DUP8 PUSH2 0xDAE SWAP2 SWAP1 PUSH2 0x20E9 JUMP JUMPDEST PUSH2 0xDB8 SWAP2 SWAP1 PUSH2 0x2157 JUMP JUMPDEST SWAP4 POP PUSH0 DUP6 GT DUP1 ISZERO PUSH2 0xDC8 JUMPI POP PUSH0 DUP5 GT JUMPDEST PUSH2 0xDD0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0xDDA CALLER DUP8 PUSH2 0x1667 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP8 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE36 SWAP3 SWAP2 SWAP1 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE52 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE76 SWAP2 SWAP1 PUSH2 0x22AA JUMP JUMPDEST POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED3 SWAP3 SWAP2 SWAP1 PUSH2 0x22D5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEEF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF13 SWAP2 SWAP1 PUSH2 0x22AA JUMP JUMPDEST POP PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF6E SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF89 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFAD SWAP2 SWAP1 PUSH2 0x2220 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x100D SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1028 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x104C SWAP2 SWAP1 PUSH2 0x2220 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x49995E5DD6158CF69AD3E9777C46755A1A826A446C6416992167462DAD033B2A DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x109A SWAP3 SWAP2 SWAP1 PUSH2 0x1FE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1109 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x224B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1125 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1149 SWAP2 SWAP1 PUSH2 0x22AA JUMP JUMPDEST POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11A8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x224B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x11C4 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11E8 SWAP2 SWAP1 PUSH2 0x22AA JUMP JUMPDEST POP PUSH0 PUSH2 0x11F2 PUSH2 0x4D3 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x1216 JUMPI PUSH2 0x120F DUP4 DUP6 PUSH2 0x120A SWAP2 SWAP1 PUSH2 0x20E9 JUMP JUMPDEST PUSH2 0x16E6 JUMP JUMPDEST SWAP2 POP PUSH2 0x1253 JUMP JUMPDEST PUSH2 0x1250 PUSH1 0x7 SLOAD DUP3 DUP7 PUSH2 0x1228 SWAP2 SWAP1 PUSH2 0x20E9 JUMP JUMPDEST PUSH2 0x1232 SWAP2 SWAP1 PUSH2 0x2157 JUMP JUMPDEST PUSH1 0x8 SLOAD DUP4 DUP7 PUSH2 0x1241 SWAP2 SWAP1 PUSH2 0x20E9 JUMP JUMPDEST PUSH2 0x124B SWAP2 SWAP1 PUSH2 0x2157 JUMP JUMPDEST PUSH2 0x175D JUMP JUMPDEST SWAP2 POP JUMPDEST PUSH0 DUP3 GT PUSH2 0x125E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12B8 SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12D3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12F7 SWAP2 SWAP1 PUSH2 0x2220 JUMP JUMPDEST PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1357 SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1372 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1396 SWAP2 SWAP1 PUSH2 0x2220 JUMP JUMPDEST PUSH1 0x8 DUP2 SWAP1 SSTORE POP PUSH2 0x13A6 CALLER DUP4 PUSH2 0x1775 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x13EE SWAP3 SWAP2 SWAP1 PUSH2 0x1FE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x1407 PUSH2 0x14CC JUMP JUMPDEST SWAP1 POP PUSH2 0x1414 DUP2 DUP6 DUP6 PUSH2 0x1577 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x14E0 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x17F4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14F0 DUP5 DUP5 PUSH2 0x1444 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x1571 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x1562 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1559 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x233F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1570 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x17F4 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15E7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15DE SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1657 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x164E SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1662 DUP4 DUP4 DUP4 PUSH2 0x19C3 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x16D7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16CE SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x16E2 DUP3 PUSH0 DUP4 PUSH2 0x19C3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x174B JUMPI DUP2 SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0x1703 SWAP2 SWAP1 PUSH2 0x2157 JUMP JUMPDEST PUSH2 0x170D SWAP2 SWAP1 PUSH2 0x20B6 JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1745 JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 PUSH2 0x172A SWAP2 SWAP1 PUSH2 0x2157 JUMP JUMPDEST PUSH2 0x1734 SWAP2 SWAP1 PUSH2 0x20B6 JUMP JUMPDEST PUSH2 0x173E SWAP2 SWAP1 PUSH2 0x2157 JUMP JUMPDEST SWAP1 POP PUSH2 0x1710 JUMP JUMPDEST POP PUSH2 0x1758 JUMP JUMPDEST PUSH0 DUP3 EQ PUSH2 0x1757 JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 GT PUSH2 0x176B JUMPI DUP3 PUSH2 0x176D JUMP JUMPDEST DUP2 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17E5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17DC SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17F0 PUSH0 DUP4 DUP4 PUSH2 0x19C3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1864 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x185B SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18D4 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18CB SWAP2 SWAP1 PUSH2 0x21F3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x19BD JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x19B4 SWAP2 SWAP1 PUSH2 0x1C72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A13 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1A07 SWAP2 SWAP1 PUSH2 0x20B6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1AE1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1A9C JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A93 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x233F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B28 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1B72 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1BCF SWAP2 SWAP1 PUSH2 0x1C72 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BF2 DUP2 PUSH2 0x1BE0 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BFC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C0D DUP2 PUSH2 0x1BE9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C2A JUMPI PUSH2 0x1C29 PUSH2 0x1BDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C37 DUP7 DUP3 DUP8 ADD PUSH2 0x1BFF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1C48 DUP7 DUP3 DUP8 ADD PUSH2 0x1BFF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1C59 DUP7 DUP3 DUP8 ADD PUSH2 0x1BFF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1C6C DUP2 PUSH2 0x1BE0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C85 PUSH0 DUP4 ADD DUP5 PUSH2 0x1C63 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1CCD DUP3 PUSH2 0x1C8B JUMP JUMPDEST PUSH2 0x1CD7 DUP2 DUP6 PUSH2 0x1C95 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CE7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1CA5 JUMP JUMPDEST PUSH2 0x1CF0 DUP2 PUSH2 0x1CB3 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D13 DUP2 DUP5 PUSH2 0x1CC3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D44 DUP3 PUSH2 0x1D1B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D54 DUP2 PUSH2 0x1D3A JUMP JUMPDEST DUP2 EQ PUSH2 0x1D5E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D6F DUP2 PUSH2 0x1D4B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D8B JUMPI PUSH2 0x1D8A PUSH2 0x1BDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D98 DUP6 DUP3 DUP7 ADD PUSH2 0x1D61 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1DA9 DUP6 DUP3 DUP7 ADD PUSH2 0x1BFF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DC7 DUP2 PUSH2 0x1DB3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DE0 PUSH0 DUP4 ADD DUP5 PUSH2 0x1DBE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E09 PUSH2 0x1E04 PUSH2 0x1DFF DUP5 PUSH2 0x1D1B JUMP JUMPDEST PUSH2 0x1DE6 JUMP JUMPDEST PUSH2 0x1D1B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E1A DUP3 PUSH2 0x1DEF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E2B DUP3 PUSH2 0x1E10 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E3B DUP2 PUSH2 0x1E21 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E54 PUSH0 DUP4 ADD DUP5 PUSH2 0x1E32 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E71 JUMPI PUSH2 0x1E70 PUSH2 0x1BDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E7E DUP7 DUP3 DUP8 ADD PUSH2 0x1D61 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1E8F DUP7 DUP3 DUP8 ADD PUSH2 0x1D61 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1EA0 DUP7 DUP3 DUP8 ADD PUSH2 0x1BFF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EBF DUP2 PUSH2 0x1EAA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ED8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1EB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1EE8 DUP3 PUSH2 0x1D3A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EF8 DUP2 PUSH2 0x1EDE JUMP JUMPDEST DUP2 EQ PUSH2 0x1F02 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F13 DUP2 PUSH2 0x1EEF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F30 JUMPI PUSH2 0x1F2F PUSH2 0x1BDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F3D DUP7 DUP3 DUP8 ADD PUSH2 0x1BFF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F4E DUP7 DUP3 DUP8 ADD PUSH2 0x1F05 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F5F DUP7 DUP3 DUP8 ADD PUSH2 0x1BFF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F7C PUSH0 DUP4 ADD DUP6 PUSH2 0x1C63 JUMP JUMPDEST PUSH2 0x1F89 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1E32 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FA5 JUMPI PUSH2 0x1FA4 PUSH2 0x1BDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FB2 DUP5 DUP3 DUP6 ADD PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FD0 JUMPI PUSH2 0x1FCF PUSH2 0x1BDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FDD DUP5 DUP3 DUP6 ADD PUSH2 0x1BFF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1FF9 PUSH0 DUP4 ADD DUP6 PUSH2 0x1C63 JUMP JUMPDEST PUSH2 0x2006 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C63 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2023 JUMPI PUSH2 0x2022 PUSH2 0x1BDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2030 DUP6 DUP3 DUP7 ADD PUSH2 0x1BFF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2041 DUP6 DUP3 DUP7 ADD PUSH2 0x1BFF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2061 JUMPI PUSH2 0x2060 PUSH2 0x1BDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x206E DUP6 DUP3 DUP7 ADD PUSH2 0x1D61 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x207F DUP6 DUP3 DUP7 ADD PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x20C0 DUP3 PUSH2 0x1BE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x20CB DUP4 PUSH2 0x1BE0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x20E3 JUMPI PUSH2 0x20E2 PUSH2 0x2089 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x20F3 DUP3 PUSH2 0x1BE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x20FE DUP4 PUSH2 0x1BE0 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x210C DUP2 PUSH2 0x1BE0 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2123 JUMPI PUSH2 0x2122 PUSH2 0x2089 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2161 DUP3 PUSH2 0x1BE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x216C DUP4 PUSH2 0x1BE0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x217C JUMPI PUSH2 0x217B PUSH2 0x212A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x21CB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x21DE JUMPI PUSH2 0x21DD PUSH2 0x2187 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21ED DUP2 PUSH2 0x1D3A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2206 PUSH0 DUP4 ADD DUP5 PUSH2 0x21E4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x221A DUP2 PUSH2 0x1BE9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2235 JUMPI PUSH2 0x2234 PUSH2 0x1BDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2242 DUP5 DUP3 DUP6 ADD PUSH2 0x220C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x225E PUSH0 DUP4 ADD DUP7 PUSH2 0x21E4 JUMP JUMPDEST PUSH2 0x226B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x21E4 JUMP JUMPDEST PUSH2 0x2278 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C63 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x2289 DUP2 PUSH2 0x1DB3 JUMP JUMPDEST DUP2 EQ PUSH2 0x2293 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x22A4 DUP2 PUSH2 0x2280 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22BF JUMPI PUSH2 0x22BE PUSH2 0x1BDC JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22CC DUP5 DUP3 DUP6 ADD PUSH2 0x2296 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x22E8 PUSH0 DUP4 ADD DUP6 PUSH2 0x21E4 JUMP JUMPDEST PUSH2 0x22F5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C63 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x230F PUSH0 DUP4 ADD DUP8 PUSH2 0x1C63 JUMP JUMPDEST PUSH2 0x231C PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x21E4 JUMP JUMPDEST PUSH2 0x2329 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1C63 JUMP JUMPDEST PUSH2 0x2336 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x21E4 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2352 PUSH0 DUP4 ADD DUP7 PUSH2 0x21E4 JUMP JUMPDEST PUSH2 0x235F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1C63 JUMP JUMPDEST PUSH2 0x236C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1C63 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLDATALOAD JUMP DUP8 0xE0 AND 0xE MSTORE8 0x26 LOG0 0x4C 0xBB SWAP2 PUSH23 0xF530046CDDCE93542FCE638FD45216848759D264736F6C PUSH4 0x4300081A STOP CALLER ",
							"sourceMap": "116:4252:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2962:264;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4293:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;189:20:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3232:1133:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;269:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3299:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2122:730:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1252:841;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;216:20:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;296:20:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2962:264;3050:14;3096:1;3085:8;:12;3077:21;;;;;;3129:1;3117:9;:13;:31;;;;;3147:1;3134:10;:14;3117:31;3109:40;;;;;;3209:8;3197:9;:20;;;;:::i;:::-;3183:10;3172:8;:21;;;;:::i;:::-;:46;;;;:::i;:::-;3160:58;;2962:264;;;;;:::o;2074:89:2:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;4293:186::-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;189:20:0:-;;;;;;;;;;;;;:::o;3144:97:2:-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;3002:82::-;3051:5;3075:2;3068:9;;3002:82;:::o;3232:1133:0:-;3311:14;3326:15;3373:1;3362:8;:12;3354:21;;;;;;3405:6;;;;;;;;;;;3394:17;;:7;:17;;;:38;;;;3426:6;;;;;;;;;;;3415:17;;:7;:17;;;3394:38;3386:47;;;;;;3444:13;3460:6;;;;;;;;;;;:16;;;3485:4;3460:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3444:47;;3502:13;3518:6;;;;;;;;;;;:16;;;3543:4;3518:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3502:47;;3575:6;;;;;;;;;;;3564:17;;:7;:17;;;3560:602;;3609:6;;;;;;;;;;;3598:17;;3642:42;3655:8;3665;3675;3642:12;:42::i;:::-;3630:54;;3719:12;3707:9;:24;3699:33;;;;;;3747:7;:20;;;3768:10;3787:4;3794:8;3747:56;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3818:8;:17;;;3836:10;3848:9;3818:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3560:602;;;3900:6;;;;;;;;;;;3890:16;;3933:42;3946:8;3956;3966;3933:12;:42::i;:::-;3921:54;;4010:12;3998:9;:24;3990:33;;;;;;4038:7;:20;;;4059:10;4079:4;4086:8;4038:57;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4110:8;:17;;;4128:10;4140:9;4110:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3560:602;4183:6;;;;;;;;;;;:16;;;4208:4;4183:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4172:8;:42;;;;4236:6;;;;;;;;;;;:16;;;4261:4;4236:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4225:8;:42;;;;4288:10;4283:74;;;4300:8;4318:7;4328:9;4347:8;4283:74;;;;;;;;;:::i;:::-;;;;;;;;3343:1022;;3232:1133;;;;;;:::o;269:20::-;;;;:::o;3299:116:2:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2276:93::-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;2122:730:0:-;2180:12;2193;2218:13;2234:6;;;;;;;;;;;:16;;;2259:4;2234:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2218:47;;2276:13;2292:6;;;;;;;;;;;:16;;;2317:4;2292:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2276:47;;2334:17;2354:13;:11;:13::i;:::-;2334:33;;2441:12;2430:8;2418:9;:20;;;;:::i;:::-;:35;;;;:::i;:::-;2408:45;;2497:12;2486:8;2474:9;:20;;;;:::i;:::-;:35;;;;:::i;:::-;2464:45;;2538:1;2528:7;:11;:25;;;;;2552:1;2543:7;:10;2528:25;2520:34;;;;;;2565:28;2571:10;2583:9;2565:5;:28::i;:::-;2604:6;;;;;;;;;;;:15;;;2620:10;2632:7;2604:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2652:6;;;;;;;;;;;:15;;;2668:10;2680:7;2652:36;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2710:6;;;;;;;;;;;:16;;;2735:4;2710:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2699:8;:42;;;;2763:6;;;;;;;;;;;:16;;;2788:4;2763:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2752:8;:42;;;;2815:10;2810:34;;;2827:7;2836;2810:34;;;;;;;:::i;:::-;;;;;;;;2207:645;;;2122:730;;;:::o;1252:841::-;1330:14;1396:6;;;;;;;;;;;:19;;;1416:10;1436:4;1443:14;1396:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1469:6;;;;;;;;;;;:19;;;1489:10;1509:4;1516:14;1469:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1542:17;1562:13;:11;:13::i;:::-;1542:33;;1636:1;1620:12;:17;1616:228;;1666:35;1686:14;1671;:29;;;;:::i;:::-;1666:4;:35::i;:::-;1654:47;;1616:228;;;1745:87;1781:8;;1766:12;1749:14;:29;;;;:::i;:::-;:40;;;;:::i;:::-;1823:8;;1808:12;1791:14;:29;;;;:::i;:::-;:40;;;;:::i;:::-;1745:3;:87::i;:::-;1733:99;;1616:228;1874:1;1862:9;:13;1854:22;;;;;;1898:6;;;;;;;;;;;:16;;;1923:4;1898:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1887:8;:42;;;;1951:6;;;;;;;;;;;:16;;;1976:4;1951:31;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1940:8;:42;;;;1993:28;1999:10;2011:9;1993:5;:28::i;:::-;2042:10;2037:48;;;2054:14;2070;2037:48;;;;;;;:::i;:::-;;;;;;;;1346:747;1252:841;;;;:::o;3610:178:2:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;216:20:0:-;;;;;;;;;;;;;:::o;3846:140:2:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;296:20:0:-;;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;8247:206::-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;914:309:0:-;960:6;987:1;983;:5;979:237;;;1009:1;1005:5;;1025:6;1044:1;1039;1035;:5;;;;:::i;:::-;1034:11;;;;:::i;:::-;1025:20;;1060:94;1071:1;1067;:5;1060:94;;;1097:1;1093:5;;1137:1;1132;1127;1123;:5;;;;:::i;:::-;1122:11;;;;:::i;:::-;1121:17;;;;:::i;:::-;1117:21;;1060:94;;;990:176;979:237;;;1180:1;1175;:6;1171:45;;1202:1;1198:5;;1171:45;979:237;914:309;;;:::o;812:95::-;862:6;889:1;885;:5;:13;;897:1;885:13;;;893:1;885:13;881:17;;812:95;;;;:::o;7721:208:2:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;9949:432::-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;88:117:6:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:619::-;767:6;775;783;832:2;820:9;811:7;807:23;803:32;800:119;;;838:79;;:::i;:::-;800:119;958:1;983:53;1028:7;1019:6;1008:9;1004:22;983:53;:::i;:::-;973:63;;929:117;1085:2;1111:53;1156:7;1147:6;1136:9;1132:22;1111:53;:::i;:::-;1101:63;;1056:118;1213:2;1239:53;1284:7;1275:6;1264:9;1260:22;1239:53;:::i;:::-;1229:63;;1184:118;690:619;;;;;:::o;1315:118::-;1402:24;1420:5;1402:24;:::i;:::-;1397:3;1390:37;1315:118;;:::o;1439:222::-;1532:4;1570:2;1559:9;1555:18;1547:26;;1583:71;1651:1;1640:9;1636:17;1627:6;1583:71;:::i;:::-;1439:222;;;;:::o;1667:99::-;1719:6;1753:5;1747:12;1737:22;;1667:99;;;:::o;1772:169::-;1856:11;1890:6;1885:3;1878:19;1930:4;1925:3;1921:14;1906:29;;1772:169;;;;:::o;1947:139::-;2036:6;2031:3;2026;2020:23;2077:1;2068:6;2063:3;2059:16;2052:27;1947:139;;;:::o;2092:102::-;2133:6;2184:2;2180:7;2175:2;2168:5;2164:14;2160:28;2150:38;;2092:102;;;:::o;2200:377::-;2288:3;2316:39;2349:5;2316:39;:::i;:::-;2371:71;2435:6;2430:3;2371:71;:::i;:::-;2364:78;;2451:65;2509:6;2504:3;2497:4;2490:5;2486:16;2451:65;:::i;:::-;2541:29;2563:6;2541:29;:::i;:::-;2536:3;2532:39;2525:46;;2292:285;2200:377;;;;:::o;2583:313::-;2696:4;2734:2;2723:9;2719:18;2711:26;;2783:9;2777:4;2773:20;2769:1;2758:9;2754:17;2747:47;2811:78;2884:4;2875:6;2811:78;:::i;:::-;2803:86;;2583:313;;;;:::o;2902:126::-;2939:7;2979:42;2972:5;2968:54;2957:65;;2902:126;;;:::o;3034:96::-;3071:7;3100:24;3118:5;3100:24;:::i;:::-;3089:35;;3034:96;;;:::o;3136:122::-;3209:24;3227:5;3209:24;:::i;:::-;3202:5;3199:35;3189:63;;3248:1;3245;3238:12;3189:63;3136:122;:::o;3264:139::-;3310:5;3348:6;3335:20;3326:29;;3364:33;3391:5;3364:33;:::i;:::-;3264:139;;;;:::o;3409:474::-;3477:6;3485;3534:2;3522:9;3513:7;3509:23;3505:32;3502:119;;;3540:79;;:::i;:::-;3502:119;3660:1;3685:53;3730:7;3721:6;3710:9;3706:22;3685:53;:::i;:::-;3675:63;;3631:117;3787:2;3813:53;3858:7;3849:6;3838:9;3834:22;3813:53;:::i;:::-;3803:63;;3758:118;3409:474;;;;;:::o;3889:90::-;3923:7;3966:5;3959:13;3952:21;3941:32;;3889:90;;;:::o;3985:109::-;4066:21;4081:5;4066:21;:::i;:::-;4061:3;4054:34;3985:109;;:::o;4100:210::-;4187:4;4225:2;4214:9;4210:18;4202:26;;4238:65;4300:1;4289:9;4285:17;4276:6;4238:65;:::i;:::-;4100:210;;;;:::o;4316:60::-;4344:3;4365:5;4358:12;;4316:60;;;:::o;4382:142::-;4432:9;4465:53;4483:34;4492:24;4510:5;4492:24;:::i;:::-;4483:34;:::i;:::-;4465:53;:::i;:::-;4452:66;;4382:142;;;:::o;4530:126::-;4580:9;4613:37;4644:5;4613:37;:::i;:::-;4600:50;;4530:126;;;:::o;4662:141::-;4727:9;4760:37;4791:5;4760:37;:::i;:::-;4747:50;;4662:141;;;:::o;4809:161::-;4911:52;4957:5;4911:52;:::i;:::-;4906:3;4899:65;4809:161;;:::o;4976:252::-;5084:4;5122:2;5111:9;5107:18;5099:26;;5135:86;5218:1;5207:9;5203:17;5194:6;5135:86;:::i;:::-;4976:252;;;;:::o;5234:619::-;5311:6;5319;5327;5376:2;5364:9;5355:7;5351:23;5347:32;5344:119;;;5382:79;;:::i;:::-;5344:119;5502:1;5527:53;5572:7;5563:6;5552:9;5548:22;5527:53;:::i;:::-;5517:63;;5473:117;5629:2;5655:53;5700:7;5691:6;5680:9;5676:22;5655:53;:::i;:::-;5645:63;;5600:118;5757:2;5783:53;5828:7;5819:6;5808:9;5804:22;5783:53;:::i;:::-;5773:63;;5728:118;5234:619;;;;;:::o;5859:86::-;5894:7;5934:4;5927:5;5923:16;5912:27;;5859:86;;;:::o;5951:112::-;6034:22;6050:5;6034:22;:::i;:::-;6029:3;6022:35;5951:112;;:::o;6069:214::-;6158:4;6196:2;6185:9;6181:18;6173:26;;6209:67;6273:1;6262:9;6258:17;6249:6;6209:67;:::i;:::-;6069:214;;;;:::o;6289:111::-;6341:7;6370:24;6388:5;6370:24;:::i;:::-;6359:35;;6289:111;;;:::o;6406:152::-;6494:39;6527:5;6494:39;:::i;:::-;6487:5;6484:50;6474:78;;6548:1;6545;6538:12;6474:78;6406:152;:::o;6564:169::-;6625:5;6663:6;6650:20;6641:29;;6679:48;6721:5;6679:48;:::i;:::-;6564:169;;;;:::o;6739:649::-;6831:6;6839;6847;6896:2;6884:9;6875:7;6871:23;6867:32;6864:119;;;6902:79;;:::i;:::-;6864:119;7022:1;7047:53;7092:7;7083:6;7072:9;7068:22;7047:53;:::i;:::-;7037:63;;6993:117;7149:2;7175:68;7235:7;7226:6;7215:9;7211:22;7175:68;:::i;:::-;7165:78;;7120:133;7292:2;7318:53;7363:7;7354:6;7343:9;7339:22;7318:53;:::i;:::-;7308:63;;7263:118;6739:649;;;;;:::o;7394:362::-;7530:4;7568:2;7557:9;7553:18;7545:26;;7581:71;7649:1;7638:9;7634:17;7625:6;7581:71;:::i;:::-;7662:87;7745:2;7734:9;7730:18;7721:6;7662:87;:::i;:::-;7394:362;;;;;:::o;7762:329::-;7821:6;7870:2;7858:9;7849:7;7845:23;7841:32;7838:119;;;7876:79;;:::i;:::-;7838:119;7996:1;8021:53;8066:7;8057:6;8046:9;8042:22;8021:53;:::i;:::-;8011:63;;7967:117;7762:329;;;;:::o;8097:::-;8156:6;8205:2;8193:9;8184:7;8180:23;8176:32;8173:119;;;8211:79;;:::i;:::-;8173:119;8331:1;8356:53;8401:7;8392:6;8381:9;8377:22;8356:53;:::i;:::-;8346:63;;8302:117;8097:329;;;;:::o;8432:332::-;8553:4;8591:2;8580:9;8576:18;8568:26;;8604:71;8672:1;8661:9;8657:17;8648:6;8604:71;:::i;:::-;8685:72;8753:2;8742:9;8738:18;8729:6;8685:72;:::i;:::-;8432:332;;;;;:::o;8770:474::-;8838:6;8846;8895:2;8883:9;8874:7;8870:23;8866:32;8863:119;;;8901:79;;:::i;:::-;8863:119;9021:1;9046:53;9091:7;9082:6;9071:9;9067:22;9046:53;:::i;:::-;9036:63;;8992:117;9148:2;9174:53;9219:7;9210:6;9199:9;9195:22;9174:53;:::i;:::-;9164:63;;9119:118;8770:474;;;;;:::o;9250:::-;9318:6;9326;9375:2;9363:9;9354:7;9350:23;9346:32;9343:119;;;9381:79;;:::i;:::-;9343:119;9501:1;9526:53;9571:7;9562:6;9551:9;9547:22;9526:53;:::i;:::-;9516:63;;9472:117;9628:2;9654:53;9699:7;9690:6;9679:9;9675:22;9654:53;:::i;:::-;9644:63;;9599:118;9250:474;;;;;:::o;9730:180::-;9778:77;9775:1;9768:88;9875:4;9872:1;9865:15;9899:4;9896:1;9889:15;9916:191;9956:3;9975:20;9993:1;9975:20;:::i;:::-;9970:25;;10009:20;10027:1;10009:20;:::i;:::-;10004:25;;10052:1;10049;10045:9;10038:16;;10073:3;10070:1;10067:10;10064:36;;;10080:18;;:::i;:::-;10064:36;9916:191;;;;:::o;10113:410::-;10153:7;10176:20;10194:1;10176:20;:::i;:::-;10171:25;;10210:20;10228:1;10210:20;:::i;:::-;10205:25;;10265:1;10262;10258:9;10287:30;10305:11;10287:30;:::i;:::-;10276:41;;10466:1;10457:7;10453:15;10450:1;10447:22;10427:1;10420:9;10400:83;10377:139;;10496:18;;:::i;:::-;10377:139;10161:362;10113:410;;;;:::o;10529:180::-;10577:77;10574:1;10567:88;10674:4;10671:1;10664:15;10698:4;10695:1;10688:15;10715:185;10755:1;10772:20;10790:1;10772:20;:::i;:::-;10767:25;;10806:20;10824:1;10806:20;:::i;:::-;10801:25;;10845:1;10835:35;;10850:18;;:::i;:::-;10835:35;10892:1;10889;10885:9;10880:14;;10715:185;;;;:::o;10906:180::-;10954:77;10951:1;10944:88;11051:4;11048:1;11041:15;11075:4;11072:1;11065:15;11092:320;11136:6;11173:1;11167:4;11163:12;11153:22;;11220:1;11214:4;11210:12;11241:18;11231:81;;11297:4;11289:6;11285:17;11275:27;;11231:81;11359:2;11351:6;11348:14;11328:18;11325:38;11322:84;;11378:18;;:::i;:::-;11322:84;11143:269;11092:320;;;:::o;11418:118::-;11505:24;11523:5;11505:24;:::i;:::-;11500:3;11493:37;11418:118;;:::o;11542:222::-;11635:4;11673:2;11662:9;11658:18;11650:26;;11686:71;11754:1;11743:9;11739:17;11730:6;11686:71;:::i;:::-;11542:222;;;;:::o;11770:143::-;11827:5;11858:6;11852:13;11843:22;;11874:33;11901:5;11874:33;:::i;:::-;11770:143;;;;:::o;11919:351::-;11989:6;12038:2;12026:9;12017:7;12013:23;12009:32;12006:119;;;12044:79;;:::i;:::-;12006:119;12164:1;12189:64;12245:7;12236:6;12225:9;12221:22;12189:64;:::i;:::-;12179:74;;12135:128;11919:351;;;;:::o;12276:442::-;12425:4;12463:2;12452:9;12448:18;12440:26;;12476:71;12544:1;12533:9;12529:17;12520:6;12476:71;:::i;:::-;12557:72;12625:2;12614:9;12610:18;12601:6;12557:72;:::i;:::-;12639;12707:2;12696:9;12692:18;12683:6;12639:72;:::i;:::-;12276:442;;;;;;:::o;12724:116::-;12794:21;12809:5;12794:21;:::i;:::-;12787:5;12784:32;12774:60;;12830:1;12827;12820:12;12774:60;12724:116;:::o;12846:137::-;12900:5;12931:6;12925:13;12916:22;;12947:30;12971:5;12947:30;:::i;:::-;12846:137;;;;:::o;12989:345::-;13056:6;13105:2;13093:9;13084:7;13080:23;13076:32;13073:119;;;13111:79;;:::i;:::-;13073:119;13231:1;13256:61;13309:7;13300:6;13289:9;13285:22;13256:61;:::i;:::-;13246:71;;13202:125;12989:345;;;;:::o;13340:332::-;13461:4;13499:2;13488:9;13484:18;13476:26;;13512:71;13580:1;13569:9;13565:17;13556:6;13512:71;:::i;:::-;13593:72;13661:2;13650:9;13646:18;13637:6;13593:72;:::i;:::-;13340:332;;;;;:::o;13678:553::-;13855:4;13893:3;13882:9;13878:19;13870:27;;13907:71;13975:1;13964:9;13960:17;13951:6;13907:71;:::i;:::-;13988:72;14056:2;14045:9;14041:18;14032:6;13988:72;:::i;:::-;14070;14138:2;14127:9;14123:18;14114:6;14070:72;:::i;:::-;14152;14220:2;14209:9;14205:18;14196:6;14152:72;:::i;:::-;13678:553;;;;;;;:::o;14237:442::-;14386:4;14424:2;14413:9;14409:18;14401:26;;14437:71;14505:1;14494:9;14490:17;14481:6;14437:71;:::i;:::-;14518:72;14586:2;14575:9;14571:18;14562:6;14518:72;:::i;:::-;14600;14668:2;14657:9;14653:18;14644:6;14600:72;:::i;:::-;14237:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1826000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addLiquidity(uint256,uint256)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2874",
								"decimals()": "405",
								"getAmountOut(uint256,uint256,uint256)": "infinite",
								"name()": "infinite",
								"removeLiquidity(uint256)": "infinite",
								"resvers0()": "2448",
								"resvers1()": "2535",
								"swap(uint256,address,uint256)": "infinite",
								"symbol()": "infinite",
								"token0()": "infinite",
								"token1()": "infinite",
								"totalSupply()": "2455",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"min(uint256,uint256)": "63",
								"sqrt(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 116,
									"end": 4368,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 116,
									"end": 4368,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 116,
									"end": 4368,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 675,
									"end": 806,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 675,
									"end": 806,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 675,
									"end": 806,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 675,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 675,
									"end": 806,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 675,
									"end": 806,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 675,
									"end": 806,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 675,
									"end": 806,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 675,
									"end": 806,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 675,
									"end": 806,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 675,
									"end": 806,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 675,
									"end": 806,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 675,
									"end": 806,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 675,
									"end": 806,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 675,
									"end": 806,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 675,
									"end": 806,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 675,
									"end": 806,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 675,
									"end": 806,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 675,
									"end": 806,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 675,
									"end": 806,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 675,
									"end": 806,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 675,
									"end": 806,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 675,
									"end": 806,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 675,
									"end": 806,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 675,
									"end": 806,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 675,
									"end": 806,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 675,
									"end": 806,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 675,
									"end": 806,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 675,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 675,
									"end": 806,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 675,
									"end": 806,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 675,
									"end": 806,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 675,
									"end": 806,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 675,
									"end": 806,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 675,
									"end": 806,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "A"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "53696D706C655377617000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "5353000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 764,
									"end": 771,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 755,
									"end": 761,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 755,
									"end": 761,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 755,
									"end": 771,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 755,
									"end": 771,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 755,
									"end": 771,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 755,
									"end": 771,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 755,
									"end": 771,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 755,
									"end": 771,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 755,
									"end": 771,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 755,
									"end": 771,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 755,
									"end": 771,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 755,
									"end": 771,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 755,
									"end": 771,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 755,
									"end": 771,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 755,
									"end": 771,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 755,
									"end": 771,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 755,
									"end": 771,
									"modifierDepth": 1,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 755,
									"end": 771,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 755,
									"end": 771,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 755,
									"end": 771,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 791,
									"end": 798,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 782,
									"end": 788,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 782,
									"end": 788,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 782,
									"end": 798,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 782,
									"end": 798,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 782,
									"end": 798,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 782,
									"end": 798,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 782,
									"end": 798,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 782,
									"end": 798,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 782,
									"end": 798,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 782,
									"end": 798,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 782,
									"end": 798,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 782,
									"end": 798,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 782,
									"end": 798,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 782,
									"end": 798,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 782,
									"end": 798,
									"modifierDepth": 1,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 782,
									"end": 798,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 782,
									"end": 798,
									"modifierDepth": 1,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 782,
									"end": 798,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 782,
									"end": 798,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 782,
									"end": 798,
									"modifierDepth": 1,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 675,
									"end": 806,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 675,
									"end": 806,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 116,
									"end": 4368,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 116,
									"end": 4368,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 679,
									"name": "tag",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 568,
									"end": 679,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 620,
									"end": 627,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 649,
									"end": 673,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 667,
									"end": 672,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 649,
									"end": 673,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "16"
								},
								{
									"begin": 649,
									"end": 673,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 649,
									"end": 673,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 649,
									"end": 673,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 638,
									"end": 673,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 638,
									"end": 673,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 679,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 568,
									"end": 679,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 568,
									"end": 679,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 568,
									"end": 679,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 685,
									"end": 837,
									"name": "tag",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 685,
									"end": 837,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 773,
									"end": 812,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 806,
									"end": 811,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 773,
									"end": 812,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "17"
								},
								{
									"begin": 773,
									"end": 812,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 773,
									"end": 812,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 773,
									"end": 812,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 766,
									"end": 771,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 763,
									"end": 813,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 753,
									"end": 831,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 753,
									"end": 831,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 827,
									"end": 828,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 824,
									"end": 825,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 817,
									"end": 829,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 753,
									"end": 831,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 753,
									"end": 831,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 685,
									"end": 837,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 685,
									"end": 837,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 843,
									"end": 1016,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 843,
									"end": 1016,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 915,
									"end": 920,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 946,
									"end": 952,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 940,
									"end": 953,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 931,
									"end": 953,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 931,
									"end": 953,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 962,
									"end": 1010,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 1004,
									"end": 1009,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 962,
									"end": 1010,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "18"
								},
								{
									"begin": 962,
									"end": 1010,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 962,
									"end": 1010,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 962,
									"end": 1010,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 843,
									"end": 1016,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 843,
									"end": 1016,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 843,
									"end": 1016,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 843,
									"end": 1016,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 843,
									"end": 1016,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1022,
									"end": 1589,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 1022,
									"end": 1589,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1131,
									"end": 1137,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1139,
									"end": 1145,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1188,
									"end": 1190,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 1176,
									"end": 1185,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 1167,
									"end": 1174,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1163,
									"end": 1186,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1159,
									"end": 1191,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1275,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1275,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 1156,
									"end": 1275,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1194,
									"end": 1273,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1194,
									"end": 1273,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 1194,
									"end": 1273,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1194,
									"end": 1273,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 1194,
									"end": 1273,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1156,
									"end": 1275,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 1156,
									"end": 1275,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1314,
									"end": 1315,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1339,
									"end": 1418,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 1410,
									"end": 1417,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1401,
									"end": 1407,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1390,
									"end": 1399,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1386,
									"end": 1408,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1339,
									"end": 1418,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1339,
									"end": 1418,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1339,
									"end": 1418,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 1339,
									"end": 1418,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1418,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1329,
									"end": 1418,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1285,
									"end": 1428,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1467,
									"end": 1469,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1493,
									"end": 1572,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1564,
									"end": 1571,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 1555,
									"end": 1561,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1544,
									"end": 1553,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 1540,
									"end": 1562,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 1493,
									"end": 1572,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 1493,
									"end": 1572,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1493,
									"end": 1572,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 1493,
									"end": 1572,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1483,
									"end": 1572,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1483,
									"end": 1572,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1438,
									"end": 1582,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1022,
									"end": 1589,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1022,
									"end": 1589,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1022,
									"end": 1589,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 1022,
									"end": 1589,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1022,
									"end": 1589,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1022,
									"end": 1589,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1595,
									"end": 1694,
									"name": "tag",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1595,
									"end": 1694,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1647,
									"end": 1653,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1681,
									"end": 1686,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1675,
									"end": 1687,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1665,
									"end": 1687,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1665,
									"end": 1687,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1595,
									"end": 1694,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1595,
									"end": 1694,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1595,
									"end": 1694,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1595,
									"end": 1694,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1700,
									"end": 1880,
									"name": "tag",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 1700,
									"end": 1880,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1748,
									"end": 1825,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1745,
									"end": 1746,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1738,
									"end": 1826,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1845,
									"end": 1849,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1842,
									"end": 1843,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1835,
									"end": 1850,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1869,
									"end": 1873,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1866,
									"end": 1867,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1859,
									"end": 1874,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1886,
									"end": 2066,
									"name": "tag",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1886,
									"end": 2066,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1934,
									"end": 2011,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1931,
									"end": 1932,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1924,
									"end": 2012,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2031,
									"end": 2035,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2028,
									"end": 2029,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 2021,
									"end": 2036,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2055,
									"end": 2059,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2052,
									"end": 2053,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2045,
									"end": 2060,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 2072,
									"end": 2392,
									"name": "tag",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 2072,
									"end": 2392,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2116,
									"end": 2122,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2153,
									"end": 2154,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 2147,
									"end": 2151,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2143,
									"end": 2155,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 2133,
									"end": 2155,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2133,
									"end": 2155,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2200,
									"end": 2201,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 2194,
									"end": 2198,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2190,
									"end": 2202,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2221,
									"end": 2239,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2211,
									"end": 2292,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 2211,
									"end": 2292,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2277,
									"end": 2281,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 2269,
									"end": 2275,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2265,
									"end": 2282,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2255,
									"end": 2282,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2255,
									"end": 2282,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2211,
									"end": 2292,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 2211,
									"end": 2292,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2339,
									"end": 2341,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2331,
									"end": 2337,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2328,
									"end": 2342,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 2308,
									"end": 2326,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2305,
									"end": 2343,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 2302,
									"end": 2386,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 2302,
									"end": 2386,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 2358,
									"end": 2376,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 2358,
									"end": 2376,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 2358,
									"end": 2376,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2358,
									"end": 2376,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 2358,
									"end": 2376,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2302,
									"end": 2386,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 2302,
									"end": 2386,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2123,
									"end": 2392,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2072,
									"end": 2392,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2072,
									"end": 2392,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2072,
									"end": 2392,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2072,
									"end": 2392,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2398,
									"end": 2539,
									"name": "tag",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 2398,
									"end": 2539,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2447,
									"end": 2451,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2470,
									"end": 2473,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2462,
									"end": 2473,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2462,
									"end": 2473,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2493,
									"end": 2496,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2490,
									"end": 2491,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2483,
									"end": 2497,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 2527,
									"end": 2531,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2524,
									"end": 2525,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2514,
									"end": 2532,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 2506,
									"end": 2532,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2506,
									"end": 2532,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2398,
									"end": 2539,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2398,
									"end": 2539,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2398,
									"end": 2539,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2398,
									"end": 2539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2545,
									"end": 2638,
									"name": "tag",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 2545,
									"end": 2638,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2582,
									"end": 2588,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2629,
									"end": 2631,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2624,
									"end": 2626,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2617,
									"end": 2622,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2613,
									"end": 2627,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2609,
									"end": 2632,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 2599,
									"end": 2632,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2599,
									"end": 2632,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2545,
									"end": 2638,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2545,
									"end": 2638,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2545,
									"end": 2638,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2545,
									"end": 2638,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2644,
									"end": 2751,
									"name": "tag",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 2644,
									"end": 2751,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2688,
									"end": 2696,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2738,
									"end": 2743,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2732,
									"end": 2736,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2728,
									"end": 2744,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2707,
									"end": 2744,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2707,
									"end": 2744,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2644,
									"end": 2751,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2644,
									"end": 2751,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2644,
									"end": 2751,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2644,
									"end": 2751,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2644,
									"end": 2751,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2757,
									"end": 3150,
									"name": "tag",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 2757,
									"end": 3150,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2826,
									"end": 2832,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2876,
									"end": 2877,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 2864,
									"end": 2874,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2860,
									"end": 2878,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2899,
									"end": 2996,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 2929,
									"end": 2995,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2918,
									"end": 2927,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2899,
									"end": 2996,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 2899,
									"end": 2996,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2899,
									"end": 2996,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 2899,
									"end": 2996,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 3047,
									"end": 3055,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3036,
									"end": 3045,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "26"
								},
								{
									"begin": 3017,
									"end": 3056,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3005,
									"end": 3056,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 3005,
									"end": 3056,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3089,
									"end": 3093,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3085,
									"end": 3094,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 3078,
									"end": 3083,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3074,
									"end": 3095,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3065,
									"end": 3095,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 3065,
									"end": 3095,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3138,
									"end": 3142,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 3128,
									"end": 3136,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 3124,
									"end": 3143,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 3117,
									"end": 3122,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3114,
									"end": 3144,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 3104,
									"end": 3144,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 3104,
									"end": 3144,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2833,
									"end": 3150,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2833,
									"end": 3150,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2757,
									"end": 3150,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 2757,
									"end": 3150,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2757,
									"end": 3150,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2757,
									"end": 3150,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2757,
									"end": 3150,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2757,
									"end": 3150,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3156,
									"end": 3233,
									"name": "tag",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 3156,
									"end": 3233,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3193,
									"end": 3200,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3222,
									"end": 3227,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3211,
									"end": 3227,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3211,
									"end": 3227,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3156,
									"end": 3233,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3156,
									"end": 3233,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3156,
									"end": 3233,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3156,
									"end": 3233,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3239,
									"end": 3299,
									"name": "tag",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 3239,
									"end": 3299,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3267,
									"end": 3270,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3288,
									"end": 3293,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3281,
									"end": 3293,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3281,
									"end": 3293,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3239,
									"end": 3299,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3239,
									"end": 3299,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3239,
									"end": 3299,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3239,
									"end": 3299,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3305,
									"end": 3447,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 3305,
									"end": 3447,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3355,
									"end": 3364,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3388,
									"end": 3441,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 3406,
									"end": 3440,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 3415,
									"end": 3439,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 3433,
									"end": 3438,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3415,
									"end": 3439,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 3415,
									"end": 3439,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3415,
									"end": 3439,
									"name": "tag",
									"source": 6,
									"value": "77"
								},
								{
									"begin": 3415,
									"end": 3439,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3406,
									"end": 3440,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "29"
								},
								{
									"begin": 3406,
									"end": 3440,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3406,
									"end": 3440,
									"name": "tag",
									"source": 6,
									"value": "76"
								},
								{
									"begin": 3406,
									"end": 3440,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3388,
									"end": 3441,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "28"
								},
								{
									"begin": 3388,
									"end": 3441,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3388,
									"end": 3441,
									"name": "tag",
									"source": 6,
									"value": "75"
								},
								{
									"begin": 3388,
									"end": 3441,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3375,
									"end": 3441,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3375,
									"end": 3441,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3305,
									"end": 3447,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3305,
									"end": 3447,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3305,
									"end": 3447,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3305,
									"end": 3447,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3453,
									"end": 3528,
									"name": "tag",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 3453,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3496,
									"end": 3499,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3517,
									"end": 3522,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3510,
									"end": 3522,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3510,
									"end": 3522,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3453,
									"end": 3528,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 3453,
									"end": 3528,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3453,
									"end": 3528,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3453,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3534,
									"end": 3803,
									"name": "tag",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 3534,
									"end": 3803,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3644,
									"end": 3683,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3675,
									"end": 3682,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3644,
									"end": 3683,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 3644,
									"end": 3683,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3644,
									"end": 3683,
									"name": "tag",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 3644,
									"end": 3683,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3705,
									"end": 3796,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 3754,
									"end": 3795,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 3778,
									"end": 3794,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3754,
									"end": 3795,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "31"
								},
								{
									"begin": 3754,
									"end": 3795,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3754,
									"end": 3795,
									"name": "tag",
									"source": 6,
									"value": "82"
								},
								{
									"begin": 3754,
									"end": 3795,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3746,
									"end": 3752,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3739,
									"end": 3743,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3733,
									"end": 3744,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3705,
									"end": 3796,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "27"
								},
								{
									"begin": 3705,
									"end": 3796,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3705,
									"end": 3796,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 3705,
									"end": 3796,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3699,
									"end": 3703,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3692,
									"end": 3797,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 3610,
									"end": 3803,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3534,
									"end": 3803,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3534,
									"end": 3803,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3534,
									"end": 3803,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3534,
									"end": 3803,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3809,
									"end": 3882,
									"name": "tag",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 3809,
									"end": 3882,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3854,
									"end": 3857,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3809,
									"end": 3882,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3809,
									"end": 3882,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3888,
									"end": 4077,
									"name": "tag",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 3888,
									"end": 4077,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3965,
									"end": 3997,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 3965,
									"end": 3997,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "33"
								},
								{
									"begin": 3965,
									"end": 3997,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3965,
									"end": 3997,
									"name": "tag",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 3965,
									"end": 3997,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4006,
									"end": 4071,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 4064,
									"end": 4070,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4056,
									"end": 4062,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4050,
									"end": 4054,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4006,
									"end": 4071,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "32"
								},
								{
									"begin": 4006,
									"end": 4071,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4006,
									"end": 4071,
									"name": "tag",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 4006,
									"end": 4071,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3941,
									"end": 4077,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3888,
									"end": 4077,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3888,
									"end": 4077,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3888,
									"end": 4077,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4083,
									"end": 4269,
									"name": "tag",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 4083,
									"end": 4269,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4143,
									"end": 4263,
									"name": "tag",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 4143,
									"end": 4263,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4160,
									"end": 4163,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4153,
									"end": 4158,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4150,
									"end": 4164,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4143,
									"end": 4263,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4143,
									"end": 4263,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 4143,
									"end": 4263,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4214,
									"end": 4253,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 4251,
									"end": 4252,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4244,
									"end": 4249,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4214,
									"end": 4253,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "34"
								},
								{
									"begin": 4214,
									"end": 4253,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4214,
									"end": 4253,
									"name": "tag",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 4214,
									"end": 4253,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4187,
									"end": 4188,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 4180,
									"end": 4185,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4176,
									"end": 4189,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4167,
									"end": 4189,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4167,
									"end": 4189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4143,
									"end": 4263,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "88"
								},
								{
									"begin": 4143,
									"end": 4263,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4143,
									"end": 4263,
									"name": "tag",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 4143,
									"end": 4263,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4083,
									"end": 4269,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4083,
									"end": 4269,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4083,
									"end": 4269,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4275,
									"end": 4818,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 4275,
									"end": 4818,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4376,
									"end": 4378,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 4371,
									"end": 4374,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4368,
									"end": 4379,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4365,
									"end": 4811,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4365,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 4365,
									"end": 4811,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4410,
									"end": 4448,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 4442,
									"end": 4447,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4410,
									"end": 4448,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 4410,
									"end": 4448,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4410,
									"end": 4448,
									"name": "tag",
									"source": 6,
									"value": "94"
								},
								{
									"begin": 4410,
									"end": 4448,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4494,
									"end": 4523,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 4512,
									"end": 4522,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4494,
									"end": 4523,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 4494,
									"end": 4523,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4494,
									"end": 4523,
									"name": "tag",
									"source": 6,
									"value": "95"
								},
								{
									"begin": 4494,
									"end": 4523,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4484,
									"end": 4492,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4480,
									"end": 4524,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4677,
									"end": 4679,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4665,
									"end": 4675,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4662,
									"end": 4680,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4659,
									"end": 4708,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4659,
									"end": 4708,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 4659,
									"end": 4708,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4698,
									"end": 4706,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4683,
									"end": 4706,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4683,
									"end": 4706,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4659,
									"end": 4708,
									"name": "tag",
									"source": 6,
									"value": "96"
								},
								{
									"begin": 4659,
									"end": 4708,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4721,
									"end": 4801,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 4777,
									"end": 4799,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 4795,
									"end": 4798,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4777,
									"end": 4799,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "25"
								},
								{
									"begin": 4777,
									"end": 4799,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4777,
									"end": 4799,
									"name": "tag",
									"source": 6,
									"value": "98"
								},
								{
									"begin": 4777,
									"end": 4799,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4767,
									"end": 4775,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4763,
									"end": 4800,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4750,
									"end": 4761,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4721,
									"end": 4801,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "35"
								},
								{
									"begin": 4721,
									"end": 4801,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4721,
									"end": 4801,
									"name": "tag",
									"source": 6,
									"value": "97"
								},
								{
									"begin": 4721,
									"end": 4801,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4380,
									"end": 4811,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4380,
									"end": 4811,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4365,
									"end": 4811,
									"name": "tag",
									"source": 6,
									"value": "93"
								},
								{
									"begin": 4365,
									"end": 4811,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4275,
									"end": 4818,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4275,
									"end": 4818,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4275,
									"end": 4818,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4275,
									"end": 4818,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4824,
									"end": 4941,
									"name": "tag",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 4824,
									"end": 4941,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4878,
									"end": 4886,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4928,
									"end": 4933,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4922,
									"end": 4926,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4918,
									"end": 4934,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 4897,
									"end": 4934,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4897,
									"end": 4934,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4824,
									"end": 4941,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4824,
									"end": 4941,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4824,
									"end": 4941,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4824,
									"end": 4941,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4824,
									"end": 4941,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4947,
									"end": 5116,
									"name": "tag",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 4947,
									"end": 5116,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4991,
									"end": 4997,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5024,
									"end": 5075,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 5072,
									"end": 5073,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5068,
									"end": 5074,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 5060,
									"end": 5065,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5057,
									"end": 5058,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 5053,
									"end": 5066,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 5024,
									"end": 5075,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "37"
								},
								{
									"begin": 5024,
									"end": 5075,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5024,
									"end": 5075,
									"name": "tag",
									"source": 6,
									"value": "101"
								},
								{
									"begin": 5024,
									"end": 5075,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5020,
									"end": 5076,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 5105,
									"end": 5109,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 5099,
									"end": 5103,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5095,
									"end": 5110,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5085,
									"end": 5110,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5085,
									"end": 5110,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4998,
									"end": 5116,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4947,
									"end": 5116,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4947,
									"end": 5116,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4947,
									"end": 5116,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4947,
									"end": 5116,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4947,
									"end": 5116,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5121,
									"end": 5416,
									"name": "tag",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 5121,
									"end": 5416,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5197,
									"end": 5201,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5343,
									"end": 5372,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 5368,
									"end": 5371,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5362,
									"end": 5366,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5343,
									"end": 5372,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 5343,
									"end": 5372,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5343,
									"end": 5372,
									"name": "tag",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 5343,
									"end": 5372,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5335,
									"end": 5372,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5335,
									"end": 5372,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5405,
									"end": 5408,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5402,
									"end": 5403,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 5398,
									"end": 5409,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 5392,
									"end": 5396,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5389,
									"end": 5410,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 5381,
									"end": 5410,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5381,
									"end": 5410,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5121,
									"end": 5416,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 5121,
									"end": 5416,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5121,
									"end": 5416,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5121,
									"end": 5416,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5121,
									"end": 5416,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5421,
									"end": 6816,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 5421,
									"end": 6816,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5538,
									"end": 5575,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 5571,
									"end": 5574,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5538,
									"end": 5575,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5538,
									"end": 5575,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5538,
									"end": 5575,
									"name": "tag",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 5538,
									"end": 5575,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5640,
									"end": 5658,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5632,
									"end": 5638,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5629,
									"end": 5659,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 5626,
									"end": 5682,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5626,
									"end": 5682,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 5626,
									"end": 5682,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5662,
									"end": 5680,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 5662,
									"end": 5680,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "21"
								},
								{
									"begin": 5662,
									"end": 5680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5662,
									"end": 5680,
									"name": "tag",
									"source": 6,
									"value": "107"
								},
								{
									"begin": 5662,
									"end": 5680,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5626,
									"end": 5682,
									"name": "tag",
									"source": 6,
									"value": "106"
								},
								{
									"begin": 5626,
									"end": 5682,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5706,
									"end": 5744,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 5738,
									"end": 5742,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5732,
									"end": 5743,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 5706,
									"end": 5744,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "23"
								},
								{
									"begin": 5706,
									"end": 5744,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5706,
									"end": 5744,
									"name": "tag",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 5706,
									"end": 5744,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5791,
									"end": 5858,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 5851,
									"end": 5857,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5843,
									"end": 5849,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5837,
									"end": 5841,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5791,
									"end": 5858,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 5791,
									"end": 5858,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5791,
									"end": 5858,
									"name": "tag",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 5791,
									"end": 5858,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5885,
									"end": 5886,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5909,
									"end": 5913,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5896,
									"end": 5913,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5896,
									"end": 5913,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5941,
									"end": 5943,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 5933,
									"end": 5939,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5930,
									"end": 5944,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 5958,
									"end": 5959,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5953,
									"end": 6571,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5953,
									"end": 6571,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 5953,
									"end": 6571,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "111"
								},
								{
									"begin": 5953,
									"end": 6571,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6615,
									"end": 6616,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6632,
									"end": 6638,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6629,
									"end": 6706,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6629,
									"end": 6706,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 6629,
									"end": 6706,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6681,
									"end": 6690,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6676,
									"end": 6679,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 6672,
									"end": 6691,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6666,
									"end": 6692,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6657,
									"end": 6692,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6657,
									"end": 6692,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6629,
									"end": 6706,
									"name": "tag",
									"source": 6,
									"value": "112"
								},
								{
									"begin": 6629,
									"end": 6706,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6732,
									"end": 6799,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 6792,
									"end": 6798,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6785,
									"end": 6790,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6732,
									"end": 6799,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "39"
								},
								{
									"begin": 6732,
									"end": 6799,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6732,
									"end": 6799,
									"name": "tag",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 6732,
									"end": 6799,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6726,
									"end": 6730,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 6719,
									"end": 6800,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6588,
									"end": 6810,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5923,
									"end": 6810,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 5923,
									"end": 6810,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5953,
									"end": 6571,
									"name": "tag",
									"source": 6,
									"value": "111"
								},
								{
									"begin": 5953,
									"end": 6571,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6005,
									"end": 6009,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 6001,
									"end": 6010,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 5993,
									"end": 5999,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5989,
									"end": 6011,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6039,
									"end": 6076,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 6071,
									"end": 6075,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 6039,
									"end": 6076,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 6039,
									"end": 6076,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6039,
									"end": 6076,
									"name": "tag",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 6039,
									"end": 6076,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6098,
									"end": 6099,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6112,
									"end": 6320,
									"name": "tag",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 6112,
									"end": 6320,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6126,
									"end": 6133,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6123,
									"end": 6124,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6120,
									"end": 6134,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 6112,
									"end": 6320,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6112,
									"end": 6320,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "117"
								},
								{
									"begin": 6112,
									"end": 6320,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6205,
									"end": 6214,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6200,
									"end": 6203,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 6196,
									"end": 6215,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6190,
									"end": 6216,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6182,
									"end": 6188,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6175,
									"end": 6217,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6256,
									"end": 6257,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 6248,
									"end": 6254,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6244,
									"end": 6258,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6234,
									"end": 6258,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6234,
									"end": 6258,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6303,
									"end": 6305,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6292,
									"end": 6301,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6288,
									"end": 6306,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6275,
									"end": 6306,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 6275,
									"end": 6306,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6149,
									"end": 6153,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6146,
									"end": 6147,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6142,
									"end": 6154,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6137,
									"end": 6154,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6137,
									"end": 6154,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6112,
									"end": 6320,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "115"
								},
								{
									"begin": 6112,
									"end": 6320,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6112,
									"end": 6320,
									"name": "tag",
									"source": 6,
									"value": "117"
								},
								{
									"begin": 6112,
									"end": 6320,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6348,
									"end": 6354,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 6339,
									"end": 6346,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6336,
									"end": 6355,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 6333,
									"end": 6512,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6333,
									"end": 6512,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 6333,
									"end": 6512,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6406,
									"end": 6415,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6401,
									"end": 6404,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 6397,
									"end": 6416,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6391,
									"end": 6417,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6449,
									"end": 6497,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 6491,
									"end": 6495,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 6483,
									"end": 6489,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 6479,
									"end": 6496,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6468,
									"end": 6477,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6449,
									"end": 6497,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "38"
								},
								{
									"begin": 6449,
									"end": 6497,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6449,
									"end": 6497,
									"name": "tag",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 6449,
									"end": 6497,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6441,
									"end": 6447,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6434,
									"end": 6498,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 6356,
									"end": 6512,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6333,
									"end": 6512,
									"name": "tag",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 6333,
									"end": 6512,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6558,
									"end": 6559,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 6554,
									"end": 6555,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 6546,
									"end": 6552,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 6542,
									"end": 6556,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 6538,
									"end": 6560,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6532,
									"end": 6536,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 6525,
									"end": 6561,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5960,
									"end": 6571,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5960,
									"end": 6571,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5960,
									"end": 6571,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5923,
									"end": 6810,
									"name": "tag",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 5923,
									"end": 6810,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5923,
									"end": 6810,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5513,
									"end": 6816,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5513,
									"end": 6816,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5513,
									"end": 6816,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5421,
									"end": 6816,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5421,
									"end": 6816,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5421,
									"end": 6816,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 116,
									"end": 4368,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 116,
									"end": 4368,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 116,
									"end": 4368,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 4368,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 116,
									"end": 4368,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 116,
									"end": 4368,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 4368,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 116,
									"end": 4368,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 116,
									"end": 4368,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220355687e0160e5326a04cbb9176f530046cddce93542fce638fd45216848759d264736f6c634300081a0033",
									".code": [
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH",
											"source": 0,
											"value": "4543C7CF"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH",
											"source": 0,
											"value": "9CD441DA"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH",
											"source": 0,
											"value": "9CD441DA"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH",
											"source": 0,
											"value": "D21220A7"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH",
											"source": 0,
											"value": "F000EAD9"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH",
											"source": 0,
											"value": "4543C7CF"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH",
											"source": 0,
											"value": "9C8F9F23"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH",
											"source": 0,
											"value": "43264349"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH",
											"source": 0,
											"value": "54D50D4"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH",
											"source": 0,
											"value": "DFE1681"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 116,
											"end": 4368,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2962,
											"end": 3226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2962,
											"end": 3226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2962,
											"end": 3226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 189,
											"end": 209,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 189,
											"end": 209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 189,
											"end": 209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 189,
											"end": 209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 189,
											"end": 209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 189,
											"end": 209,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 189,
											"end": 209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 189,
											"end": 209,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 189,
											"end": 209,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 189,
											"end": 209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 189,
											"end": 209,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 189,
											"end": 209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 189,
											"end": 209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 189,
											"end": 209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 189,
											"end": 209,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 189,
											"end": 209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 189,
											"end": 209,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 189,
											"end": 209,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 189,
											"end": 209,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 189,
											"end": 209,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 189,
											"end": 209,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 189,
											"end": 209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 189,
											"end": 209,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3232,
											"end": 4365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3232,
											"end": 4365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3232,
											"end": 4365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 269,
											"end": 289,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 269,
											"end": 289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 269,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 269,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 269,
											"end": 289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 269,
											"end": 289,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 269,
											"end": 289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 269,
											"end": 289,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 269,
											"end": 289,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 269,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 269,
											"end": 289,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 269,
											"end": 289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 269,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 269,
											"end": 289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 269,
											"end": 289,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 269,
											"end": 289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 269,
											"end": 289,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 269,
											"end": 289,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 269,
											"end": 289,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 269,
											"end": 289,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 269,
											"end": 289,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 269,
											"end": 289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 269,
											"end": 289,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2122,
											"end": 2852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2122,
											"end": 2852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2122,
											"end": 2852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1252,
											"end": 2093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1252,
											"end": 2093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1252,
											"end": 2093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 216,
											"end": 236,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 216,
											"end": 236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 216,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 216,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 216,
											"end": 236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 216,
											"end": 236,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 216,
											"end": 236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 216,
											"end": 236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 216,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 216,
											"end": 236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 216,
											"end": 236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 216,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 216,
											"end": 236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 216,
											"end": 236,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 216,
											"end": 236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 216,
											"end": 236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 216,
											"end": 236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 216,
											"end": 236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 216,
											"end": 236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 216,
											"end": 236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 216,
											"end": 236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 296,
											"end": 316,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 296,
											"end": 316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 296,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 296,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 296,
											"end": 316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 296,
											"end": 316,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 296,
											"end": 316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 296,
											"end": 316,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 296,
											"end": 316,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 296,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 296,
											"end": 316,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 296,
											"end": 316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 296,
											"end": 316,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 296,
											"end": 316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 296,
											"end": 316,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 296,
											"end": 316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 296,
											"end": 316,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 296,
											"end": 316,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 296,
											"end": 316,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 296,
											"end": 316,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 296,
											"end": 316,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 296,
											"end": 316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 296,
											"end": 316,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3064,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3085,
											"end": 3093,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3085,
											"end": 3097,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3077,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3077,
											"end": 3098,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3077,
											"end": 3098,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3077,
											"end": 3098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3077,
											"end": 3098,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3077,
											"end": 3098,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 3077,
											"end": 3098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3129,
											"end": 3130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3117,
											"end": 3126,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3130,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3148,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3148,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3117,
											"end": 3148,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3148,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3147,
											"end": 3148,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3134,
											"end": 3144,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3134,
											"end": 3148,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3117,
											"end": 3148,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3117,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3109,
											"end": 3149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3109,
											"end": 3149,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3109,
											"end": 3149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3109,
											"end": 3149,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3109,
											"end": 3149,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3109,
											"end": 3149,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 3109,
											"end": 3149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3209,
											"end": 3217,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3197,
											"end": 3206,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3197,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3197,
											"end": 3217,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3197,
											"end": 3217,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3197,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 3197,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3197,
											"end": 3217,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 3197,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3183,
											"end": 3193,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3180,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3172,
											"end": 3193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 3172,
											"end": 3193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3193,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 3172,
											"end": 3193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3172,
											"end": 3218,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3218,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 3172,
											"end": 3218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3172,
											"end": 3218,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 3172,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3160,
											"end": 3218,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3160,
											"end": 3218,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 3226,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2962,
											"end": 3226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "111"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 189,
											"end": 209,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 189,
											"end": 209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 189,
											"end": 209,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 189,
											"end": 209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 189,
											"end": 209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 189,
											"end": 209,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 189,
											"end": 209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 189,
											"end": 209,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 189,
											"end": 209,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 189,
											"end": 209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 189,
											"end": 209,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 189,
											"end": 209,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 189,
											"end": 209,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 189,
											"end": 209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 189,
											"end": 209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3311,
											"end": 3325,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3341,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3373,
											"end": 3374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3362,
											"end": 3370,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3362,
											"end": 3374,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3354,
											"end": 3375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3354,
											"end": 3375,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3354,
											"end": 3375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3354,
											"end": 3375,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3354,
											"end": 3375,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3354,
											"end": 3375,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3354,
											"end": 3375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3411,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3405,
											"end": 3411,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3411,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3411,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3405,
											"end": 3411,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3411,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3411,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3411,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3405,
											"end": 3411,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3394,
											"end": 3401,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3394,
											"end": 3411,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3394,
											"end": 3432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3394,
											"end": 3432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3394,
											"end": 3432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3394,
											"end": 3432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3426,
											"end": 3432,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3426,
											"end": 3432,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3426,
											"end": 3432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3426,
											"end": 3432,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3426,
											"end": 3432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3426,
											"end": 3432,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3426,
											"end": 3432,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3426,
											"end": 3432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3426,
											"end": 3432,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3426,
											"end": 3432,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3426,
											"end": 3432,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3422,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3394,
											"end": 3432,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3394,
											"end": 3432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3386,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3386,
											"end": 3433,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3386,
											"end": 3433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3386,
											"end": 3433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3386,
											"end": 3433,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3386,
											"end": 3433,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3386,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3457,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3460,
											"end": 3466,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3460,
											"end": 3466,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3460,
											"end": 3466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3466,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3466,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3460,
											"end": 3466,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3466,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3466,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3460,
											"end": 3466,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3476,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3460,
											"end": 3476,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3476,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 3485,
											"end": 3489,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3460,
											"end": 3491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 3460,
											"end": 3491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 3460,
											"end": 3491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3444,
											"end": 3491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3502,
											"end": 3515,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3518,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3518,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3518,
											"end": 3524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3524,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3518,
											"end": 3524,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3524,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3524,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3524,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3518,
											"end": 3524,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3534,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3518,
											"end": 3534,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3534,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 3543,
											"end": 3547,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3518,
											"end": 3549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 3518,
											"end": 3549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 3518,
											"end": 3549,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3502,
											"end": 3549,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3502,
											"end": 3549,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3575,
											"end": 3581,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3575,
											"end": 3581,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3575,
											"end": 3581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3575,
											"end": 3581,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3575,
											"end": 3581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3575,
											"end": 3581,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3575,
											"end": 3581,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3575,
											"end": 3581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3575,
											"end": 3581,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3575,
											"end": 3581,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3575,
											"end": 3581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3581,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3564,
											"end": 3581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3581,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3564,
											"end": 3581,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3564,
											"end": 3581,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3560,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3560,
											"end": 4162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3615,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3609,
											"end": 3615,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3609,
											"end": 3615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3615,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3615,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3609,
											"end": 3615,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3615,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3615,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3615,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3609,
											"end": 3615,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3615,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3598,
											"end": 3615,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3642,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 3655,
											"end": 3663,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3665,
											"end": 3673,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3675,
											"end": 3683,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3642,
											"end": 3654,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3642,
											"end": 3684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3642,
											"end": 3684,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 3642,
											"end": 3684,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3630,
											"end": 3684,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3630,
											"end": 3684,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3719,
											"end": 3731,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3716,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3707,
											"end": 3731,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3699,
											"end": 3732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 3699,
											"end": 3732,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3699,
											"end": 3732,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3699,
											"end": 3732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3699,
											"end": 3732,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3699,
											"end": 3732,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 3699,
											"end": 3732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3754,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3767,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3747,
											"end": 3767,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3767,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 3768,
											"end": 3778,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3787,
											"end": 3791,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3794,
											"end": 3802,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 3747,
											"end": 3803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 3747,
											"end": 3803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3747,
											"end": 3803,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3826,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3835,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3818,
											"end": 3835,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3835,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 3836,
											"end": 3846,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3848,
											"end": 3857,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3818,
											"end": 3858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 3818,
											"end": 3858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3818,
											"end": 3858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3560,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3560,
											"end": 4162,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3560,
											"end": 4162,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3560,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3900,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3900,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3900,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3900,
											"end": 3906,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3900,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3900,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3900,
											"end": 3906,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3900,
											"end": 3906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3900,
											"end": 3906,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3900,
											"end": 3906,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3900,
											"end": 3906,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 3906,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 3890,
											"end": 3906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3933,
											"end": 3975,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3946,
											"end": 3954,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3956,
											"end": 3964,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3974,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3933,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 3933,
											"end": 3975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3933,
											"end": 3975,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3933,
											"end": 3975,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 3975,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 3975,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4022,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3998,
											"end": 4007,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3998,
											"end": 4022,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 3990,
											"end": 4023,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3990,
											"end": 4023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4023,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3990,
											"end": 4023,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 3990,
											"end": 4023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4045,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4058,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4038,
											"end": 4058,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4058,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 4059,
											"end": 4069,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4079,
											"end": 4083,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4086,
											"end": 4094,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 4038,
											"end": 4095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 4038,
											"end": 4095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4118,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4127,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4110,
											"end": 4127,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4127,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 4128,
											"end": 4138,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4140,
											"end": 4149,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 4110,
											"end": 4150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 4110,
											"end": 4150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4110,
											"end": 4150,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3560,
											"end": 4162,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3560,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4189,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4183,
											"end": 4189,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4183,
											"end": 4189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4189,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4189,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4183,
											"end": 4189,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4189,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4189,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4183,
											"end": 4189,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4199,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4183,
											"end": 4199,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4199,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 4208,
											"end": 4212,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 4183,
											"end": 4214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4183,
											"end": 4214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 4183,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4172,
											"end": 4214,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4214,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4214,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4214,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4242,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4236,
											"end": 4242,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4236,
											"end": 4242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4242,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4242,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4236,
											"end": 4242,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4242,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4242,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4236,
											"end": 4242,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4252,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4236,
											"end": 4252,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4252,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 4261,
											"end": 4265,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 4236,
											"end": 4267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4236,
											"end": 4267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 4236,
											"end": 4267,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4225,
											"end": 4233,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 4225,
											"end": 4267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4225,
											"end": 4267,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4225,
											"end": 4267,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4225,
											"end": 4267,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4298,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4283,
											"end": 4357,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4283,
											"end": 4357,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4283,
											"end": 4357,
											"name": "PUSH",
											"source": 0,
											"value": "24043855BFBFEA0CCEA141E5A73D7116BF0BFE083EA900A791F4B407FF03E525"
										},
										{
											"begin": 4300,
											"end": 4308,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4318,
											"end": 4325,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4337,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4347,
											"end": 4355,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4283,
											"end": 4357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4283,
											"end": 4357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4283,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 4283,
											"end": 4357,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 4283,
											"end": 4357,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4283,
											"end": 4357,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4283,
											"end": 4357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4283,
											"end": 4357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4283,
											"end": 4357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 4283,
											"end": 4357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4283,
											"end": 4357,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 4283,
											"end": 4357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4283,
											"end": 4357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4283,
											"end": 4357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4283,
											"end": 4357,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4283,
											"end": 4357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4283,
											"end": 4357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4283,
											"end": 4357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4283,
											"end": 4357,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 3343,
											"end": 4365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3343,
											"end": 4365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 4365,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3232,
											"end": 4365,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 269,
											"end": 289,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 269,
											"end": 289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 269,
											"end": 289,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 269,
											"end": 289,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 269,
											"end": 289,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 269,
											"end": 289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2180,
											"end": 2192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2193,
											"end": 2205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2231,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2234,
											"end": 2240,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2234,
											"end": 2240,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2234,
											"end": 2240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2240,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2240,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2234,
											"end": 2240,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2240,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2240,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2240,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2234,
											"end": 2240,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2250,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2234,
											"end": 2250,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2250,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 2259,
											"end": 2263,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2234,
											"end": 2265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2234,
											"end": 2265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 2234,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2218,
											"end": 2265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2289,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2292,
											"end": 2298,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2292,
											"end": 2298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2292,
											"end": 2298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2298,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2298,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2292,
											"end": 2298,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2298,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2298,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2298,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2292,
											"end": 2298,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2308,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2292,
											"end": 2308,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2308,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 2317,
											"end": 2321,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2292,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2292,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2292,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2276,
											"end": 2323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2354,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2354,
											"end": 2365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2354,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2354,
											"end": 2367,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 2354,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2367,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2367,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2453,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2438,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2418,
											"end": 2427,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2418,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2418,
											"end": 2438,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2418,
											"end": 2438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2418,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2418,
											"end": 2438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2418,
											"end": 2438,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2418,
											"end": 2438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2418,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2418,
											"end": 2453,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2418,
											"end": 2453,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2418,
											"end": 2453,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2418,
											"end": 2453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2418,
											"end": 2453,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2418,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2408,
											"end": 2453,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2408,
											"end": 2453,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2497,
											"end": 2509,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2486,
											"end": 2494,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2474,
											"end": 2483,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2474,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2474,
											"end": 2494,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2474,
											"end": 2494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2474,
											"end": 2494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2474,
											"end": 2494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2474,
											"end": 2494,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2474,
											"end": 2494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2474,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2474,
											"end": 2509,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2474,
											"end": 2509,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2474,
											"end": 2509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 2474,
											"end": 2509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2474,
											"end": 2509,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2474,
											"end": 2509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2509,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 2464,
											"end": 2509,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2538,
											"end": 2539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2528,
											"end": 2535,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2539,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2553,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2553,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 2528,
											"end": 2553,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2552,
											"end": 2553,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2550,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2553,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2528,
											"end": 2553,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 2528,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2520,
											"end": 2554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2520,
											"end": 2554,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2520,
											"end": 2554,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2520,
											"end": 2554,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2520,
											"end": 2554,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2520,
											"end": 2554,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2520,
											"end": 2554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2571,
											"end": 2581,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2583,
											"end": 2592,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2565,
											"end": 2593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2565,
											"end": 2593,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2565,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2610,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2604,
											"end": 2610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2604,
											"end": 2610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2610,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2610,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2604,
											"end": 2610,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2610,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2610,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2604,
											"end": 2610,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2619,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2604,
											"end": 2619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2619,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 2620,
											"end": 2630,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2632,
											"end": 2639,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2604,
											"end": 2640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2604,
											"end": 2640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2658,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2652,
											"end": 2658,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2652,
											"end": 2658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2658,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2658,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2652,
											"end": 2658,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2658,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2658,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2652,
											"end": 2658,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2667,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2652,
											"end": 2667,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2667,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 2668,
											"end": 2678,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2680,
											"end": 2687,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 2652,
											"end": 2688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2652,
											"end": 2688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2652,
											"end": 2688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2710,
											"end": 2716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2710,
											"end": 2716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2710,
											"end": 2716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2726,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2710,
											"end": 2726,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2726,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2710,
											"end": 2741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2710,
											"end": 2741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 2710,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2707,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2699,
											"end": 2741,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2741,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2741,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2699,
											"end": 2741,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2769,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2763,
											"end": 2769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2763,
											"end": 2769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2769,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2769,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2763,
											"end": 2769,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2769,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2769,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2763,
											"end": 2769,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2779,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2763,
											"end": 2779,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2779,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 2788,
											"end": 2792,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2763,
											"end": 2794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 2763,
											"end": 2794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 2763,
											"end": 2794,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2760,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2752,
											"end": 2794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2794,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2752,
											"end": 2794,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2815,
											"end": 2825,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2810,
											"end": 2844,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2810,
											"end": 2844,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2810,
											"end": 2844,
											"name": "PUSH",
											"source": 0,
											"value": "49995E5DD6158CF69AD3E9777C46755A1A826A446C6416992167462DAD033B2A"
										},
										{
											"begin": 2827,
											"end": 2834,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2836,
											"end": 2843,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 2810,
											"end": 2844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2810,
											"end": 2844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2810,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 2810,
											"end": 2844,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2810,
											"end": 2844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2810,
											"end": 2844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2810,
											"end": 2844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2810,
											"end": 2844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2810,
											"end": 2844,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 2810,
											"end": 2844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2810,
											"end": 2844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2810,
											"end": 2844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2810,
											"end": 2844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2810,
											"end": 2844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2810,
											"end": 2844,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2810,
											"end": 2844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2810,
											"end": 2844,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2207,
											"end": 2852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2852,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2122,
											"end": 2852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1330,
											"end": 1344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1396,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 1402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1396,
											"end": 1402,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1402,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1402,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1396,
											"end": 1402,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1396,
											"end": 1415,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1415,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1416,
											"end": 1426,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1436,
											"end": 1440,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1457,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1396,
											"end": 1458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1396,
											"end": 1458,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1396,
											"end": 1458,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1469,
											"end": 1475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1488,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 1489,
											"end": 1499,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1509,
											"end": 1513,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1530,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 1469,
											"end": 1531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 1469,
											"end": 1531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1469,
											"end": 1531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1562,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1562,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1562,
											"end": 1575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1562,
											"end": 1575,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1562,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1542,
											"end": 1575,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1636,
											"end": 1637,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1620,
											"end": 1632,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1620,
											"end": 1637,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1616,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1616,
											"end": 1844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1686,
											"end": 1700,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1671,
											"end": 1685,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1671,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1671,
											"end": 1700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1671,
											"end": 1700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1671,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1671,
											"end": 1700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1671,
											"end": 1700,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 1671,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 1666,
											"end": 1701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1666,
											"end": 1701,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 1666,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1654,
											"end": 1701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1616,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 1616,
											"end": 1844,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1616,
											"end": 1844,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1616,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1745,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1781,
											"end": 1789,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1781,
											"end": 1789,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1766,
											"end": 1778,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1763,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1749,
											"end": 1778,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1778,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1749,
											"end": 1778,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1778,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 1749,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 1749,
											"end": 1789,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1789,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1749,
											"end": 1789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1749,
											"end": 1789,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 1749,
											"end": 1789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1823,
											"end": 1831,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1823,
											"end": 1831,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1808,
											"end": 1820,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 1805,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1791,
											"end": 1820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 1831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1791,
											"end": 1831,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 1831,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 1831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1791,
											"end": 1831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1791,
											"end": 1831,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 1791,
											"end": 1831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1745,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 1745,
											"end": 1832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1745,
											"end": 1832,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1745,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1832,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1733,
											"end": 1832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1616,
											"end": 1844,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 1616,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1874,
											"end": 1875,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1862,
											"end": 1871,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1862,
											"end": 1875,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 1854,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1854,
											"end": 1876,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1854,
											"end": 1876,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1854,
											"end": 1876,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1854,
											"end": 1876,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1854,
											"end": 1876,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1854,
											"end": 1876,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1904,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1898,
											"end": 1904,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1898,
											"end": 1904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1904,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1904,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1898,
											"end": 1904,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1904,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1904,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1898,
											"end": 1904,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1914,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1898,
											"end": 1914,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1914,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1923,
											"end": 1927,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1898,
											"end": 1929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1898,
											"end": 1929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1898,
											"end": 1929,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1895,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1887,
											"end": 1929,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1929,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1887,
											"end": 1929,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1951,
											"end": 1957,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1967,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1951,
											"end": 1967,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1967,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 1976,
											"end": 1980,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 1951,
											"end": 1982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1951,
											"end": 1982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 1951,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 1948,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1940,
											"end": 1982,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 1982,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 1982,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1940,
											"end": 1982,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1993,
											"end": 2021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1999,
											"end": 2009,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2011,
											"end": 2020,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1993,
											"end": 1998,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 1993,
											"end": 2021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1993,
											"end": 2021,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1993,
											"end": 2021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2085,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2037,
											"end": 2085,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2085,
											"name": "PUSH",
											"source": 0,
											"value": "4C209B5FC8AD50758F13E2E1088BA56A560DFF690A1C6FEF26394F4C03821C4F"
										},
										{
											"begin": 2054,
											"end": 2068,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2070,
											"end": 2084,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2085,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2037,
											"end": 2085,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 2037,
											"end": 2085,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2085,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 2037,
											"end": 2085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2085,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 2037,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2085,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2037,
											"end": 2085,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2085,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2085,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2085,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2037,
											"end": 2085,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 1346,
											"end": 2093,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 2093,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1252,
											"end": 2093,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 216,
											"end": 236,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 216,
											"end": 236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 216,
											"end": 236,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 216,
											"end": 236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 216,
											"end": 236,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 216,
											"end": 236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 216,
											"end": 236,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 216,
											"end": 236,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 216,
											"end": 236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 216,
											"end": 236,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 216,
											"end": 236,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 216,
											"end": 236,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 216,
											"end": 236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 216,
											"end": 236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 296,
											"end": 316,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 296,
											"end": 316,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 296,
											"end": 316,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 296,
											"end": 316,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 296,
											"end": 316,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 296,
											"end": 316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 2,
											"value": "261"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 2,
											"value": "264"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "263"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "266"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 2,
											"value": "262"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 2,
											"value": "269"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "268"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "271"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "270"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 2,
											"value": "272"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8324,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 8361,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 2,
											"value": "275"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 914,
											"end": 1223,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 914,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 960,
											"end": 966,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 987,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 983,
											"end": 984,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 983,
											"end": 988,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1216,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 979,
											"end": 1216,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1009,
											"end": 1010,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1005,
											"end": 1010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1005,
											"end": 1010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1045,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1039,
											"end": 1040,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1035,
											"end": 1036,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1035,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1035,
											"end": 1040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1035,
											"end": 1040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1035,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1035,
											"end": 1040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1035,
											"end": 1040,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1035,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 1034,
											"end": 1045,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1034,
											"end": 1045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1034,
											"end": 1045,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 1034,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1025,
											"end": 1045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1060,
											"end": 1154,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 1060,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1071,
											"end": 1072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1067,
											"end": 1068,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1067,
											"end": 1072,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1060,
											"end": 1154,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1060,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 1060,
											"end": 1154,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1097,
											"end": 1098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1098,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1093,
											"end": 1098,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1137,
											"end": 1138,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1132,
											"end": 1133,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1127,
											"end": 1128,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1124,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 1123,
											"end": 1128,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1123,
											"end": 1128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1128,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 1123,
											"end": 1128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1122,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 1122,
											"end": 1133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1122,
											"end": 1133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1122,
											"end": 1133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1122,
											"end": 1133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1122,
											"end": 1133,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 1122,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 1121,
											"end": 1138,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1121,
											"end": 1138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1121,
											"end": 1138,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 1121,
											"end": 1138,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1117,
											"end": 1138,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1060,
											"end": 1154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 1060,
											"end": 1154,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1060,
											"end": 1154,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 1060,
											"end": 1154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 990,
											"end": 1166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 979,
											"end": 1216,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1216,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 979,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1180,
											"end": 1181,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1175,
											"end": 1176,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1175,
											"end": 1181,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1171,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 1171,
											"end": 1216,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1203,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1198,
											"end": 1203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1198,
											"end": 1203,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1171,
											"end": 1216,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 1171,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 979,
											"end": 1216,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 979,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 914,
											"end": 1223,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 914,
											"end": 1223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 914,
											"end": 1223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 914,
											"end": 1223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 812,
											"end": 907,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 812,
											"end": 907,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 862,
											"end": 868,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 889,
											"end": 890,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 885,
											"end": 886,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 885,
											"end": 890,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 885,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 885,
											"end": 898,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 897,
											"end": 898,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 885,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 885,
											"end": 898,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 885,
											"end": 898,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 885,
											"end": 898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 893,
											"end": 894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 885,
											"end": 898,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 885,
											"end": 898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 881,
											"end": 898,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 881,
											"end": 898,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 812,
											"end": 907,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 812,
											"end": 907,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 812,
											"end": 907,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 812,
											"end": 907,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 812,
											"end": 907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 2,
											"value": "294"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 2,
											"value": "293"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 2,
											"value": "298"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 2,
											"value": "300"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "302"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "273"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "305"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "265"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 2,
											"value": "308"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "306"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "309"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "310"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "311"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 6,
											"value": "353"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 6,
											"value": "354"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 6,
											"value": "356"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "tag",
											"source": 6,
											"value": "25"
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 767,
											"end": 773,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 783,
											"end": 789,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 832,
											"end": 834,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 820,
											"end": 829,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 811,
											"end": 818,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 807,
											"end": 830,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 803,
											"end": 835,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 800,
											"end": 919,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 800,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 800,
											"end": 919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 838,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 838,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 838,
											"end": 917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 838,
											"end": 917,
											"name": "tag",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 838,
											"end": 917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 800,
											"end": 919,
											"name": "tag",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 800,
											"end": 919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 958,
											"end": 959,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 1028,
											"end": 1035,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1019,
											"end": 1025,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1008,
											"end": 1017,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1004,
											"end": 1026,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 983,
											"end": 1036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "tag",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 929,
											"end": 1046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1085,
											"end": 1087,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1111,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 1156,
											"end": 1163,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1147,
											"end": 1153,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1136,
											"end": 1145,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1111,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 1111,
											"end": 1164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1111,
											"end": 1164,
											"name": "tag",
											"source": 6,
											"value": "361"
										},
										{
											"begin": 1111,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1164,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1101,
											"end": 1164,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1056,
											"end": 1174,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1213,
											"end": 1215,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1239,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 1284,
											"end": 1291,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1275,
											"end": 1281,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1264,
											"end": 1273,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 1260,
											"end": 1282,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 1239,
											"end": 1292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1292,
											"name": "tag",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 1239,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1229,
											"end": 1292,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1229,
											"end": 1292,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1184,
											"end": 1302,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 690,
											"end": 1309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1315,
											"end": 1433,
											"name": "tag",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 1315,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1402,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 1420,
											"end": 1425,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1402,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 1402,
											"end": 1426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1402,
											"end": 1426,
											"name": "tag",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 1402,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1397,
											"end": 1400,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1390,
											"end": 1427,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1315,
											"end": 1433,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1315,
											"end": 1433,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1315,
											"end": 1433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "tag",
											"source": 6,
											"value": "28"
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1532,
											"end": 1536,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1572,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1573,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1547,
											"end": 1573,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 1651,
											"end": 1652,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1649,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1636,
											"end": 1653,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1627,
											"end": 1633,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 1583,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "tag",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1439,
											"end": 1661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1667,
											"end": 1766,
											"name": "tag",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 1667,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1719,
											"end": 1725,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1758,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1747,
											"end": 1759,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1737,
											"end": 1759,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1737,
											"end": 1759,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1667,
											"end": 1766,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1667,
											"end": 1766,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1667,
											"end": 1766,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1667,
											"end": 1766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1772,
											"end": 1941,
											"name": "tag",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 1772,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1867,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1890,
											"end": 1896,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1885,
											"end": 1888,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1878,
											"end": 1897,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1930,
											"end": 1934,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1925,
											"end": 1928,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1921,
											"end": 1935,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1935,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1906,
											"end": 1935,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1772,
											"end": 1941,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1772,
											"end": 1941,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1772,
											"end": 1941,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1772,
											"end": 1941,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1772,
											"end": 1941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 2086,
											"name": "tag",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 1947,
											"end": 2086,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2042,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2034,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2026,
											"end": 2029,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2020,
											"end": 2043,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 2077,
											"end": 2078,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2068,
											"end": 2074,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2063,
											"end": 2066,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2059,
											"end": 2075,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2052,
											"end": 2079,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 2086,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 2086,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 2086,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1947,
											"end": 2086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2194,
											"name": "tag",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 2092,
											"end": 2194,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2133,
											"end": 2139,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2184,
											"end": 2186,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2180,
											"end": 2187,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 2175,
											"end": 2177,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 2168,
											"end": 2173,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2164,
											"end": 2178,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2160,
											"end": 2188,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2150,
											"end": 2188,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2150,
											"end": 2188,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2194,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2194,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2194,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2092,
											"end": 2194,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2577,
											"name": "tag",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 2200,
											"end": 2577,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2288,
											"end": 2291,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2316,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 2349,
											"end": 2354,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "319"
										},
										{
											"begin": 2316,
											"end": 2355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2355,
											"name": "tag",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 2316,
											"end": 2355,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2371,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 2435,
											"end": 2441,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2430,
											"end": 2433,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2371,
											"end": 2442,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "320"
										},
										{
											"begin": 2371,
											"end": 2442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2371,
											"end": 2442,
											"name": "tag",
											"source": 6,
											"value": "373"
										},
										{
											"begin": 2371,
											"end": 2442,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2442,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 2364,
											"end": 2442,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2451,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 2509,
											"end": 2515,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2504,
											"end": 2507,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2497,
											"end": 2501,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2490,
											"end": 2495,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2486,
											"end": 2502,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2451,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "321"
										},
										{
											"begin": 2451,
											"end": 2516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2451,
											"end": 2516,
											"name": "tag",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 2451,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 2563,
											"end": 2569,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "322"
										},
										{
											"begin": 2541,
											"end": 2570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "tag",
											"source": 6,
											"value": "375"
										},
										{
											"begin": 2541,
											"end": 2570,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2536,
											"end": 2539,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2571,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2292,
											"end": 2577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2577,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2577,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2577,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2200,
											"end": 2577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2583,
											"end": 2896,
											"name": "tag",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 2583,
											"end": 2896,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2696,
											"end": 2700,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2734,
											"end": 2736,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2723,
											"end": 2732,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2719,
											"end": 2737,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2711,
											"end": 2737,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2711,
											"end": 2737,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2783,
											"end": 2792,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2777,
											"end": 2781,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2773,
											"end": 2793,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2769,
											"end": 2770,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2758,
											"end": 2767,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2754,
											"end": 2771,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2747,
											"end": 2794,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2811,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 2884,
											"end": 2888,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2875,
											"end": 2881,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2811,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "323"
										},
										{
											"begin": 2811,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2811,
											"end": 2889,
											"name": "tag",
											"source": 6,
											"value": "377"
										},
										{
											"begin": 2811,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2889,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2803,
											"end": 2889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2583,
											"end": 2896,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2583,
											"end": 2896,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2583,
											"end": 2896,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2583,
											"end": 2896,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2583,
											"end": 2896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 3028,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 2902,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2939,
											"end": 2946,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2979,
											"end": 3021,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2972,
											"end": 2977,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2968,
											"end": 3022,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 3022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2957,
											"end": 3022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 3028,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 3028,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 3028,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2902,
											"end": 3028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3130,
											"name": "tag",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 3034,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3071,
											"end": 3078,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3100,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 3118,
											"end": 3123,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3100,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 3100,
											"end": 3124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3100,
											"end": 3124,
											"name": "tag",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 3100,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3124,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3124,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3130,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3130,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3130,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3034,
											"end": 3130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3258,
											"name": "tag",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 3136,
											"end": 3258,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3209,
											"end": 3233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 3227,
											"end": 3232,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3209,
											"end": 3233,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 3209,
											"end": 3233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3209,
											"end": 3233,
											"name": "tag",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 3209,
											"end": 3233,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3202,
											"end": 3207,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3234,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3252,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 3189,
											"end": 3252,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3248,
											"end": 3249,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3245,
											"end": 3246,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3238,
											"end": 3250,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3189,
											"end": 3252,
											"name": "tag",
											"source": 6,
											"value": "383"
										},
										{
											"begin": 3189,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3258,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3136,
											"end": 3258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3403,
											"name": "tag",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 3264,
											"end": 3403,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3310,
											"end": 3315,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3348,
											"end": 3354,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3335,
											"end": 3355,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3355,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3326,
											"end": 3355,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3364,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 3391,
											"end": 3396,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3364,
											"end": 3397,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "326"
										},
										{
											"begin": 3364,
											"end": 3397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3364,
											"end": 3397,
											"name": "tag",
											"source": 6,
											"value": "385"
										},
										{
											"begin": 3364,
											"end": 3397,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3403,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3403,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3403,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3264,
											"end": 3403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3883,
											"name": "tag",
											"source": 6,
											"value": "35"
										},
										{
											"begin": 3409,
											"end": 3883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3477,
											"end": 3483,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3485,
											"end": 3491,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3534,
											"end": 3536,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3522,
											"end": 3531,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3513,
											"end": 3520,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3509,
											"end": 3532,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3505,
											"end": 3537,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3502,
											"end": 3621,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3502,
											"end": 3621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 3502,
											"end": 3621,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 3540,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 3540,
											"end": 3619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3540,
											"end": 3619,
											"name": "tag",
											"source": 6,
											"value": "388"
										},
										{
											"begin": 3540,
											"end": 3619,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3502,
											"end": 3621,
											"name": "tag",
											"source": 6,
											"value": "387"
										},
										{
											"begin": 3502,
											"end": 3621,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3660,
											"end": 3661,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3685,
											"end": 3738,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 3730,
											"end": 3737,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3721,
											"end": 3727,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3710,
											"end": 3719,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3706,
											"end": 3728,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3685,
											"end": 3738,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 3685,
											"end": 3738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3685,
											"end": 3738,
											"name": "tag",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 3685,
											"end": 3738,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3738,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3675,
											"end": 3738,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3631,
											"end": 3748,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3787,
											"end": 3789,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3813,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 3858,
											"end": 3865,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 3849,
											"end": 3855,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3838,
											"end": 3847,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3834,
											"end": 3856,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3813,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 3813,
											"end": 3866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3813,
											"end": 3866,
											"name": "tag",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 3813,
											"end": 3866,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3803,
											"end": 3866,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3803,
											"end": 3866,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3758,
											"end": 3876,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3883,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3883,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3883,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3883,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3883,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3409,
											"end": 3883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3889,
											"end": 3979,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 3889,
											"end": 3979,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3923,
											"end": 3930,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3966,
											"end": 3971,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3959,
											"end": 3972,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3952,
											"end": 3973,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3941,
											"end": 3973,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3941,
											"end": 3973,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3889,
											"end": 3979,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3889,
											"end": 3979,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3889,
											"end": 3979,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3889,
											"end": 3979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3985,
											"end": 4094,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 3985,
											"end": 4094,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 4081,
											"end": 4086,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 4066,
											"end": 4087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4066,
											"end": 4087,
											"name": "tag",
											"source": 6,
											"value": "393"
										},
										{
											"begin": 4066,
											"end": 4087,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4061,
											"end": 4064,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4054,
											"end": 4088,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3985,
											"end": 4094,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3985,
											"end": 4094,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3985,
											"end": 4094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4100,
											"end": 4310,
											"name": "tag",
											"source": 6,
											"value": "38"
										},
										{
											"begin": 4100,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4187,
											"end": 4191,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4225,
											"end": 4227,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4214,
											"end": 4223,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4210,
											"end": 4228,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4202,
											"end": 4228,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4202,
											"end": 4228,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4238,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 4300,
											"end": 4301,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4289,
											"end": 4298,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4285,
											"end": 4302,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4238,
											"end": 4303,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 4238,
											"end": 4303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4238,
											"end": 4303,
											"name": "tag",
											"source": 6,
											"value": "395"
										},
										{
											"begin": 4238,
											"end": 4303,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4100,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4100,
											"end": 4310,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4100,
											"end": 4310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4100,
											"end": 4310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4100,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4376,
											"name": "tag",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 4316,
											"end": 4376,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4344,
											"end": 4347,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4365,
											"end": 4370,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4358,
											"end": 4370,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4358,
											"end": 4370,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4376,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4376,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4376,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4382,
											"end": 4524,
											"name": "tag",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 4382,
											"end": 4524,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4432,
											"end": 4441,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4465,
											"end": 4518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "398"
										},
										{
											"begin": 4483,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 4492,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 4510,
											"end": 4515,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 4492,
											"end": 4516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4492,
											"end": 4516,
											"name": "tag",
											"source": 6,
											"value": "400"
										},
										{
											"begin": 4492,
											"end": 4516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4483,
											"end": 4517,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "330"
										},
										{
											"begin": 4483,
											"end": 4517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4483,
											"end": 4517,
											"name": "tag",
											"source": 6,
											"value": "399"
										},
										{
											"begin": 4483,
											"end": 4517,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4465,
											"end": 4518,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 4465,
											"end": 4518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4465,
											"end": 4518,
											"name": "tag",
											"source": 6,
											"value": "398"
										},
										{
											"begin": 4465,
											"end": 4518,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4452,
											"end": 4518,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4452,
											"end": 4518,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4382,
											"end": 4524,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4382,
											"end": 4524,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4382,
											"end": 4524,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4382,
											"end": 4524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4530,
											"end": 4656,
											"name": "tag",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 4530,
											"end": 4656,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4580,
											"end": 4589,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4613,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 4644,
											"end": 4649,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4613,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "331"
										},
										{
											"begin": 4613,
											"end": 4650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4613,
											"end": 4650,
											"name": "tag",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 4613,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4600,
											"end": 4650,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4600,
											"end": 4650,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4530,
											"end": 4656,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4530,
											"end": 4656,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4530,
											"end": 4656,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4530,
											"end": 4656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4662,
											"end": 4803,
											"name": "tag",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 4662,
											"end": 4803,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4727,
											"end": 4736,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4760,
											"end": 4797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 4791,
											"end": 4796,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4760,
											"end": 4797,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "332"
										},
										{
											"begin": 4760,
											"end": 4797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4760,
											"end": 4797,
											"name": "tag",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 4760,
											"end": 4797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4747,
											"end": 4797,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4747,
											"end": 4797,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4662,
											"end": 4803,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4662,
											"end": 4803,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4662,
											"end": 4803,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4662,
											"end": 4803,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4970,
											"name": "tag",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 4809,
											"end": 4970,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4911,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 4957,
											"end": 4962,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4911,
											"end": 4963,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "333"
										},
										{
											"begin": 4911,
											"end": 4963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4911,
											"end": 4963,
											"name": "tag",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 4911,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4906,
											"end": 4909,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4899,
											"end": 4964,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4970,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4970,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4809,
											"end": 4970,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4976,
											"end": 5228,
											"name": "tag",
											"source": 6,
											"value": "42"
										},
										{
											"begin": 4976,
											"end": 5228,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5084,
											"end": 5088,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5122,
											"end": 5124,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5111,
											"end": 5120,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5107,
											"end": 5125,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5099,
											"end": 5125,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5099,
											"end": 5125,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5135,
											"end": 5221,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 5218,
											"end": 5219,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5207,
											"end": 5216,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5203,
											"end": 5220,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5194,
											"end": 5200,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5135,
											"end": 5221,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 5135,
											"end": 5221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5135,
											"end": 5221,
											"name": "tag",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 5135,
											"end": 5221,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4976,
											"end": 5228,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4976,
											"end": 5228,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4976,
											"end": 5228,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4976,
											"end": 5228,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4976,
											"end": 5228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5234,
											"end": 5853,
											"name": "tag",
											"source": 6,
											"value": "48"
										},
										{
											"begin": 5234,
											"end": 5853,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5311,
											"end": 5317,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5319,
											"end": 5325,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5327,
											"end": 5333,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5376,
											"end": 5378,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 5364,
											"end": 5373,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5355,
											"end": 5362,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5351,
											"end": 5374,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5347,
											"end": 5379,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5344,
											"end": 5463,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5344,
											"end": 5463,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 5344,
											"end": 5463,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5382,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 5382,
											"end": 5461,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 5382,
											"end": 5461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5382,
											"end": 5461,
											"name": "tag",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 5382,
											"end": 5461,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5344,
											"end": 5463,
											"name": "tag",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 5344,
											"end": 5463,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5502,
											"end": 5503,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5527,
											"end": 5580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "412"
										},
										{
											"begin": 5572,
											"end": 5579,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5563,
											"end": 5569,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5552,
											"end": 5561,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5548,
											"end": 5570,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5527,
											"end": 5580,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 5527,
											"end": 5580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5527,
											"end": 5580,
											"name": "tag",
											"source": 6,
											"value": "412"
										},
										{
											"begin": 5527,
											"end": 5580,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5580,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 5517,
											"end": 5580,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5473,
											"end": 5590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5629,
											"end": 5631,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5655,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 5700,
											"end": 5707,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5691,
											"end": 5697,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5680,
											"end": 5689,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5676,
											"end": 5698,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5655,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 5655,
											"end": 5708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5655,
											"end": 5708,
											"name": "tag",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 5655,
											"end": 5708,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5645,
											"end": 5708,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5645,
											"end": 5708,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5600,
											"end": 5718,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5757,
											"end": 5759,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5783,
											"end": 5836,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 5828,
											"end": 5835,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5819,
											"end": 5825,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5808,
											"end": 5817,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 5804,
											"end": 5826,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5783,
											"end": 5836,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 5783,
											"end": 5836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5783,
											"end": 5836,
											"name": "tag",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 5783,
											"end": 5836,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5773,
											"end": 5836,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5773,
											"end": 5836,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5728,
											"end": 5846,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5234,
											"end": 5853,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5234,
											"end": 5853,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5234,
											"end": 5853,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5234,
											"end": 5853,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5234,
											"end": 5853,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5234,
											"end": 5853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5859,
											"end": 5945,
											"name": "tag",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 5859,
											"end": 5945,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5894,
											"end": 5901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5934,
											"end": 5938,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 5927,
											"end": 5932,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5923,
											"end": 5939,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5912,
											"end": 5939,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5912,
											"end": 5939,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5859,
											"end": 5945,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5859,
											"end": 5945,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5859,
											"end": 5945,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5859,
											"end": 5945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5951,
											"end": 6063,
											"name": "tag",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 5951,
											"end": 6063,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 6050,
											"end": 6055,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6056,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "335"
										},
										{
											"begin": 6034,
											"end": 6056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6034,
											"end": 6056,
											"name": "tag",
											"source": 6,
											"value": "417"
										},
										{
											"begin": 6034,
											"end": 6056,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6029,
											"end": 6032,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6022,
											"end": 6057,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5951,
											"end": 6063,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5951,
											"end": 6063,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5951,
											"end": 6063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6069,
											"end": 6283,
											"name": "tag",
											"source": 6,
											"value": "54"
										},
										{
											"begin": 6069,
											"end": 6283,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6158,
											"end": 6162,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6196,
											"end": 6198,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6185,
											"end": 6194,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6181,
											"end": 6199,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6173,
											"end": 6199,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6173,
											"end": 6199,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6209,
											"end": 6276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 6273,
											"end": 6274,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6262,
											"end": 6271,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6258,
											"end": 6275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6249,
											"end": 6255,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6209,
											"end": 6276,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "336"
										},
										{
											"begin": 6209,
											"end": 6276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6209,
											"end": 6276,
											"name": "tag",
											"source": 6,
											"value": "419"
										},
										{
											"begin": 6209,
											"end": 6276,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6069,
											"end": 6283,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6069,
											"end": 6283,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6069,
											"end": 6283,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6069,
											"end": 6283,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6069,
											"end": 6283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6289,
											"end": 6400,
											"name": "tag",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 6289,
											"end": 6400,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6341,
											"end": 6348,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6370,
											"end": 6394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "421"
										},
										{
											"begin": 6388,
											"end": 6393,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6370,
											"end": 6394,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 6370,
											"end": 6394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6370,
											"end": 6394,
											"name": "tag",
											"source": 6,
											"value": "421"
										},
										{
											"begin": 6370,
											"end": 6394,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6359,
											"end": 6394,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6359,
											"end": 6394,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6289,
											"end": 6400,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6289,
											"end": 6400,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6289,
											"end": 6400,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6289,
											"end": 6400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6406,
											"end": 6558,
											"name": "tag",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 6406,
											"end": 6558,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 6527,
											"end": 6532,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6533,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "337"
										},
										{
											"begin": 6494,
											"end": 6533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6494,
											"end": 6533,
											"name": "tag",
											"source": 6,
											"value": "423"
										},
										{
											"begin": 6494,
											"end": 6533,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6487,
											"end": 6492,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6484,
											"end": 6534,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 6474,
											"end": 6552,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 6474,
											"end": 6552,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6548,
											"end": 6549,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6545,
											"end": 6546,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6538,
											"end": 6550,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6474,
											"end": 6552,
											"name": "tag",
											"source": 6,
											"value": "424"
										},
										{
											"begin": 6474,
											"end": 6552,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6406,
											"end": 6558,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6406,
											"end": 6558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6564,
											"end": 6733,
											"name": "tag",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 6564,
											"end": 6733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6625,
											"end": 6630,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6663,
											"end": 6669,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6650,
											"end": 6670,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 6641,
											"end": 6670,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6641,
											"end": 6670,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6679,
											"end": 6727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 6721,
											"end": 6726,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6679,
											"end": 6727,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "338"
										},
										{
											"begin": 6679,
											"end": 6727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6679,
											"end": 6727,
											"name": "tag",
											"source": 6,
											"value": "426"
										},
										{
											"begin": 6679,
											"end": 6727,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6564,
											"end": 6733,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6564,
											"end": 6733,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6564,
											"end": 6733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6564,
											"end": 6733,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6564,
											"end": 6733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6739,
											"end": 7388,
											"name": "tag",
											"source": 6,
											"value": "57"
										},
										{
											"begin": 6739,
											"end": 7388,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6831,
											"end": 6837,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6839,
											"end": 6845,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6847,
											"end": 6853,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6896,
											"end": 6898,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 6884,
											"end": 6893,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6875,
											"end": 6882,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 6871,
											"end": 6894,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6867,
											"end": 6899,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 6864,
											"end": 6983,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6864,
											"end": 6983,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "428"
										},
										{
											"begin": 6864,
											"end": 6983,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6902,
											"end": 6981,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 6902,
											"end": 6981,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 6902,
											"end": 6981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6902,
											"end": 6981,
											"name": "tag",
											"source": 6,
											"value": "429"
										},
										{
											"begin": 6902,
											"end": 6981,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6864,
											"end": 6983,
											"name": "tag",
											"source": 6,
											"value": "428"
										},
										{
											"begin": 6864,
											"end": 6983,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7022,
											"end": 7023,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7047,
											"end": 7100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "430"
										},
										{
											"begin": 7092,
											"end": 7099,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7083,
											"end": 7089,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7072,
											"end": 7081,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7068,
											"end": 7090,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7047,
											"end": 7100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 7047,
											"end": 7100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7047,
											"end": 7100,
											"name": "tag",
											"source": 6,
											"value": "430"
										},
										{
											"begin": 7047,
											"end": 7100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7037,
											"end": 7100,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7037,
											"end": 7100,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6993,
											"end": 7110,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7149,
											"end": 7151,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7175,
											"end": 7243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "431"
										},
										{
											"begin": 7235,
											"end": 7242,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7226,
											"end": 7232,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7215,
											"end": 7224,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7211,
											"end": 7233,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7175,
											"end": 7243,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "339"
										},
										{
											"begin": 7175,
											"end": 7243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7175,
											"end": 7243,
											"name": "tag",
											"source": 6,
											"value": "431"
										},
										{
											"begin": 7175,
											"end": 7243,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7165,
											"end": 7243,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7165,
											"end": 7243,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7120,
											"end": 7253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7292,
											"end": 7294,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7318,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "432"
										},
										{
											"begin": 7363,
											"end": 7370,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7354,
											"end": 7360,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7343,
											"end": 7352,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 7339,
											"end": 7361,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 7318,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7318,
											"end": 7371,
											"name": "tag",
											"source": 6,
											"value": "432"
										},
										{
											"begin": 7318,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7308,
											"end": 7371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7308,
											"end": 7371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7263,
											"end": 7381,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6739,
											"end": 7388,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6739,
											"end": 7388,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6739,
											"end": 7388,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6739,
											"end": 7388,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6739,
											"end": 7388,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6739,
											"end": 7388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7394,
											"end": 7756,
											"name": "tag",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7394,
											"end": 7756,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7530,
											"end": 7534,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7568,
											"end": 7570,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7557,
											"end": 7566,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7553,
											"end": 7571,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7545,
											"end": 7571,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7545,
											"end": 7571,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7581,
											"end": 7652,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "434"
										},
										{
											"begin": 7649,
											"end": 7650,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7638,
											"end": 7647,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7634,
											"end": 7651,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7625,
											"end": 7631,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7581,
											"end": 7652,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 7581,
											"end": 7652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7581,
											"end": 7652,
											"name": "tag",
											"source": 6,
											"value": "434"
										},
										{
											"begin": 7581,
											"end": 7652,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7662,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "435"
										},
										{
											"begin": 7745,
											"end": 7747,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7734,
											"end": 7743,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7730,
											"end": 7748,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7721,
											"end": 7727,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7662,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "334"
										},
										{
											"begin": 7662,
											"end": 7749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7662,
											"end": 7749,
											"name": "tag",
											"source": 6,
											"value": "435"
										},
										{
											"begin": 7662,
											"end": 7749,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7394,
											"end": 7756,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7394,
											"end": 7756,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7394,
											"end": 7756,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7394,
											"end": 7756,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7394,
											"end": 7756,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7394,
											"end": 7756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7762,
											"end": 8091,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 7762,
											"end": 8091,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7821,
											"end": 7827,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7870,
											"end": 7872,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7858,
											"end": 7867,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7849,
											"end": 7856,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7845,
											"end": 7868,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 7841,
											"end": 7873,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 7838,
											"end": 7957,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 7838,
											"end": 7957,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "437"
										},
										{
											"begin": 7838,
											"end": 7957,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 7955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "438"
										},
										{
											"begin": 7876,
											"end": 7955,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 7876,
											"end": 7955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7876,
											"end": 7955,
											"name": "tag",
											"source": 6,
											"value": "438"
										},
										{
											"begin": 7876,
											"end": 7955,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7838,
											"end": 7957,
											"name": "tag",
											"source": 6,
											"value": "437"
										},
										{
											"begin": 7838,
											"end": 7957,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7996,
											"end": 7997,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8021,
											"end": 8074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "439"
										},
										{
											"begin": 8066,
											"end": 8073,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8057,
											"end": 8063,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8046,
											"end": 8055,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8042,
											"end": 8064,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8021,
											"end": 8074,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 8021,
											"end": 8074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8021,
											"end": 8074,
											"name": "tag",
											"source": 6,
											"value": "439"
										},
										{
											"begin": 8021,
											"end": 8074,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8011,
											"end": 8074,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8011,
											"end": 8074,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7967,
											"end": 8084,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7762,
											"end": 8091,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 7762,
											"end": 8091,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7762,
											"end": 8091,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7762,
											"end": 8091,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7762,
											"end": 8091,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8097,
											"end": 8426,
											"name": "tag",
											"source": 6,
											"value": "74"
										},
										{
											"begin": 8097,
											"end": 8426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8156,
											"end": 8162,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8205,
											"end": 8207,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8193,
											"end": 8202,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8184,
											"end": 8191,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8180,
											"end": 8203,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8176,
											"end": 8208,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 8173,
											"end": 8292,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8173,
											"end": 8292,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "441"
										},
										{
											"begin": 8173,
											"end": 8292,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8211,
											"end": 8290,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "442"
										},
										{
											"begin": 8211,
											"end": 8290,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 8211,
											"end": 8290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8211,
											"end": 8290,
											"name": "tag",
											"source": 6,
											"value": "442"
										},
										{
											"begin": 8211,
											"end": 8290,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8173,
											"end": 8292,
											"name": "tag",
											"source": 6,
											"value": "441"
										},
										{
											"begin": 8173,
											"end": 8292,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8331,
											"end": 8332,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8356,
											"end": 8409,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "443"
										},
										{
											"begin": 8401,
											"end": 8408,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8392,
											"end": 8398,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8381,
											"end": 8390,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8377,
											"end": 8399,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8356,
											"end": 8409,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 8356,
											"end": 8409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8356,
											"end": 8409,
											"name": "tag",
											"source": 6,
											"value": "443"
										},
										{
											"begin": 8356,
											"end": 8409,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8346,
											"end": 8409,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8346,
											"end": 8409,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8302,
											"end": 8419,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8097,
											"end": 8426,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8097,
											"end": 8426,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8097,
											"end": 8426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8097,
											"end": 8426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8097,
											"end": 8426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8432,
											"end": 8764,
											"name": "tag",
											"source": 6,
											"value": "77"
										},
										{
											"begin": 8432,
											"end": 8764,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8553,
											"end": 8557,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8591,
											"end": 8593,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8580,
											"end": 8589,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8576,
											"end": 8594,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8568,
											"end": 8594,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8568,
											"end": 8594,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8604,
											"end": 8675,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "445"
										},
										{
											"begin": 8672,
											"end": 8673,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8661,
											"end": 8670,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8657,
											"end": 8674,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8648,
											"end": 8654,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8604,
											"end": 8675,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 8604,
											"end": 8675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8604,
											"end": 8675,
											"name": "tag",
											"source": 6,
											"value": "445"
										},
										{
											"begin": 8604,
											"end": 8675,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8685,
											"end": 8757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "446"
										},
										{
											"begin": 8753,
											"end": 8755,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8742,
											"end": 8751,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8738,
											"end": 8756,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8729,
											"end": 8735,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8685,
											"end": 8757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 8685,
											"end": 8757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8685,
											"end": 8757,
											"name": "tag",
											"source": 6,
											"value": "446"
										},
										{
											"begin": 8685,
											"end": 8757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8432,
											"end": 8764,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 8432,
											"end": 8764,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8432,
											"end": 8764,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8432,
											"end": 8764,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8432,
											"end": 8764,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8432,
											"end": 8764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8770,
											"end": 9244,
											"name": "tag",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 8770,
											"end": 9244,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8838,
											"end": 8844,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8846,
											"end": 8852,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8897,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8883,
											"end": 8892,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 8874,
											"end": 8881,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 8870,
											"end": 8893,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 8866,
											"end": 8898,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 8863,
											"end": 8982,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8863,
											"end": 8982,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "448"
										},
										{
											"begin": 8863,
											"end": 8982,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8901,
											"end": 8980,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 8901,
											"end": 8980,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 8901,
											"end": 8980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8901,
											"end": 8980,
											"name": "tag",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 8901,
											"end": 8980,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8863,
											"end": 8982,
											"name": "tag",
											"source": 6,
											"value": "448"
										},
										{
											"begin": 8863,
											"end": 8982,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9021,
											"end": 9022,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9046,
											"end": 9099,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "450"
										},
										{
											"begin": 9091,
											"end": 9098,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9082,
											"end": 9088,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9071,
											"end": 9080,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9067,
											"end": 9089,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9046,
											"end": 9099,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 9046,
											"end": 9099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9046,
											"end": 9099,
											"name": "tag",
											"source": 6,
											"value": "450"
										},
										{
											"begin": 9046,
											"end": 9099,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9036,
											"end": 9099,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9036,
											"end": 9099,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8992,
											"end": 9109,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9148,
											"end": 9150,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9174,
											"end": 9227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "451"
										},
										{
											"begin": 9219,
											"end": 9226,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9210,
											"end": 9216,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9199,
											"end": 9208,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9195,
											"end": 9217,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9227,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "317"
										},
										{
											"begin": 9174,
											"end": 9227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9174,
											"end": 9227,
											"name": "tag",
											"source": 6,
											"value": "451"
										},
										{
											"begin": 9174,
											"end": 9227,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9164,
											"end": 9227,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9164,
											"end": 9227,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9119,
											"end": 9237,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8770,
											"end": 9244,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8770,
											"end": 9244,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8770,
											"end": 9244,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8770,
											"end": 9244,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 8770,
											"end": 9244,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8770,
											"end": 9244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9250,
											"end": 9724,
											"name": "tag",
											"source": 6,
											"value": "92"
										},
										{
											"begin": 9250,
											"end": 9724,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9318,
											"end": 9324,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9326,
											"end": 9332,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9375,
											"end": 9377,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9363,
											"end": 9372,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9354,
											"end": 9361,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9350,
											"end": 9373,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9346,
											"end": 9378,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 9343,
											"end": 9462,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 9343,
											"end": 9462,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "453"
										},
										{
											"begin": 9343,
											"end": 9462,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9381,
											"end": 9460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 9381,
											"end": 9460,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 9381,
											"end": 9460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9381,
											"end": 9460,
											"name": "tag",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 9381,
											"end": 9460,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9343,
											"end": 9462,
											"name": "tag",
											"source": 6,
											"value": "453"
										},
										{
											"begin": 9343,
											"end": 9462,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9501,
											"end": 9502,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9526,
											"end": 9579,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 9571,
											"end": 9578,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9562,
											"end": 9568,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9551,
											"end": 9560,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9547,
											"end": 9569,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9526,
											"end": 9579,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 9526,
											"end": 9579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9526,
											"end": 9579,
											"name": "tag",
											"source": 6,
											"value": "455"
										},
										{
											"begin": 9526,
											"end": 9579,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9516,
											"end": 9579,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9516,
											"end": 9579,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9472,
											"end": 9589,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9628,
											"end": 9630,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 9654,
											"end": 9707,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "456"
										},
										{
											"begin": 9699,
											"end": 9706,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 9690,
											"end": 9696,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9679,
											"end": 9688,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 9675,
											"end": 9697,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9654,
											"end": 9707,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 9654,
											"end": 9707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9654,
											"end": 9707,
											"name": "tag",
											"source": 6,
											"value": "456"
										},
										{
											"begin": 9654,
											"end": 9707,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9644,
											"end": 9707,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9644,
											"end": 9707,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9599,
											"end": 9717,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9250,
											"end": 9724,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9250,
											"end": 9724,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9250,
											"end": 9724,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9250,
											"end": 9724,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9250,
											"end": 9724,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9250,
											"end": 9724,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9730,
											"end": 9910,
											"name": "tag",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 9730,
											"end": 9910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9778,
											"end": 9855,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9775,
											"end": 9776,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9768,
											"end": 9856,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9875,
											"end": 9879,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 9872,
											"end": 9873,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9865,
											"end": 9880,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9899,
											"end": 9903,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 9896,
											"end": 9897,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9889,
											"end": 9904,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 9916,
											"end": 10107,
											"name": "tag",
											"source": 6,
											"value": "103"
										},
										{
											"begin": 9916,
											"end": 10107,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9956,
											"end": 9959,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 9975,
											"end": 9995,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "459"
										},
										{
											"begin": 9993,
											"end": 9994,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 9975,
											"end": 9995,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 9975,
											"end": 9995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9975,
											"end": 9995,
											"name": "tag",
											"source": 6,
											"value": "459"
										},
										{
											"begin": 9975,
											"end": 9995,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9970,
											"end": 9995,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9970,
											"end": 9995,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10009,
											"end": 10029,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "460"
										},
										{
											"begin": 10027,
											"end": 10028,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10009,
											"end": 10029,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 10009,
											"end": 10029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10009,
											"end": 10029,
											"name": "tag",
											"source": 6,
											"value": "460"
										},
										{
											"begin": 10009,
											"end": 10029,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10004,
											"end": 10029,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10004,
											"end": 10029,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10052,
											"end": 10053,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10049,
											"end": 10050,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10045,
											"end": 10054,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 10038,
											"end": 10054,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10038,
											"end": 10054,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10073,
											"end": 10076,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 10070,
											"end": 10071,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10067,
											"end": 10077,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 10064,
											"end": 10100,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10064,
											"end": 10100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "461"
										},
										{
											"begin": 10064,
											"end": 10100,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10080,
											"end": 10098,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "462"
										},
										{
											"begin": 10080,
											"end": 10098,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 10080,
											"end": 10098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10080,
											"end": 10098,
											"name": "tag",
											"source": 6,
											"value": "462"
										},
										{
											"begin": 10080,
											"end": 10098,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10064,
											"end": 10100,
											"name": "tag",
											"source": 6,
											"value": "461"
										},
										{
											"begin": 10064,
											"end": 10100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9916,
											"end": 10107,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 9916,
											"end": 10107,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9916,
											"end": 10107,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9916,
											"end": 10107,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 9916,
											"end": 10107,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10113,
											"end": 10523,
											"name": "tag",
											"source": 6,
											"value": "105"
										},
										{
											"begin": 10113,
											"end": 10523,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10153,
											"end": 10160,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10176,
											"end": 10196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "464"
										},
										{
											"begin": 10194,
											"end": 10195,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10176,
											"end": 10196,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 10176,
											"end": 10196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10176,
											"end": 10196,
											"name": "tag",
											"source": 6,
											"value": "464"
										},
										{
											"begin": 10176,
											"end": 10196,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10171,
											"end": 10196,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10210,
											"end": 10230,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "465"
										},
										{
											"begin": 10228,
											"end": 10229,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10210,
											"end": 10230,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 10210,
											"end": 10230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10210,
											"end": 10230,
											"name": "tag",
											"source": 6,
											"value": "465"
										},
										{
											"begin": 10210,
											"end": 10230,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10205,
											"end": 10230,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10205,
											"end": 10230,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10265,
											"end": 10266,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10262,
											"end": 10263,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10258,
											"end": 10267,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 10287,
											"end": 10317,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "466"
										},
										{
											"begin": 10305,
											"end": 10316,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 10287,
											"end": 10317,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 10287,
											"end": 10317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10287,
											"end": 10317,
											"name": "tag",
											"source": 6,
											"value": "466"
										},
										{
											"begin": 10287,
											"end": 10317,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10276,
											"end": 10317,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10276,
											"end": 10317,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10466,
											"end": 10467,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10457,
											"end": 10464,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10453,
											"end": 10468,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10450,
											"end": 10451,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 10447,
											"end": 10469,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 10427,
											"end": 10428,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10420,
											"end": 10429,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 10400,
											"end": 10483,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 10377,
											"end": 10516,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "467"
										},
										{
											"begin": 10377,
											"end": 10516,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10496,
											"end": 10514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "468"
										},
										{
											"begin": 10496,
											"end": 10514,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "340"
										},
										{
											"begin": 10496,
											"end": 10514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10496,
											"end": 10514,
											"name": "tag",
											"source": 6,
											"value": "468"
										},
										{
											"begin": 10496,
											"end": 10514,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10377,
											"end": 10516,
											"name": "tag",
											"source": 6,
											"value": "467"
										},
										{
											"begin": 10377,
											"end": 10516,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10161,
											"end": 10523,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10113,
											"end": 10523,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10113,
											"end": 10523,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10113,
											"end": 10523,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10113,
											"end": 10523,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10113,
											"end": 10523,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10529,
											"end": 10709,
											"name": "tag",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 10529,
											"end": 10709,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10577,
											"end": 10654,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10574,
											"end": 10575,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10567,
											"end": 10655,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10674,
											"end": 10678,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 10671,
											"end": 10672,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 10664,
											"end": 10679,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 10698,
											"end": 10702,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 10695,
											"end": 10696,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10688,
											"end": 10703,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 10715,
											"end": 10900,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 10715,
											"end": 10900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10755,
											"end": 10756,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10772,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "471"
										},
										{
											"begin": 10790,
											"end": 10791,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10772,
											"end": 10792,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 10772,
											"end": 10792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10772,
											"end": 10792,
											"name": "tag",
											"source": 6,
											"value": "471"
										},
										{
											"begin": 10772,
											"end": 10792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10767,
											"end": 10792,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10767,
											"end": 10792,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10806,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "472"
										},
										{
											"begin": 10824,
											"end": 10825,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 10806,
											"end": 10826,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "315"
										},
										{
											"begin": 10806,
											"end": 10826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10806,
											"end": 10826,
											"name": "tag",
											"source": 6,
											"value": "472"
										},
										{
											"begin": 10806,
											"end": 10826,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10801,
											"end": 10826,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10801,
											"end": 10826,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10845,
											"end": 10846,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 10870,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "473"
										},
										{
											"begin": 10835,
											"end": 10870,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 10868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "474"
										},
										{
											"begin": 10850,
											"end": 10868,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "341"
										},
										{
											"begin": 10850,
											"end": 10868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10850,
											"end": 10868,
											"name": "tag",
											"source": 6,
											"value": "474"
										},
										{
											"begin": 10850,
											"end": 10868,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10835,
											"end": 10870,
											"name": "tag",
											"source": 6,
											"value": "473"
										},
										{
											"begin": 10835,
											"end": 10870,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10892,
											"end": 10893,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10889,
											"end": 10890,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 10885,
											"end": 10894,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 10880,
											"end": 10894,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 10880,
											"end": 10894,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10715,
											"end": 10900,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 10715,
											"end": 10900,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 10715,
											"end": 10900,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10715,
											"end": 10900,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 10715,
											"end": 10900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 10906,
											"end": 11086,
											"name": "tag",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 10906,
											"end": 11086,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 10954,
											"end": 11031,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10951,
											"end": 10952,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 10944,
											"end": 11032,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11051,
											"end": 11055,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 11048,
											"end": 11049,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 11041,
											"end": 11056,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11075,
											"end": 11079,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 11072,
											"end": 11073,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11065,
											"end": 11080,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 11092,
											"end": 11412,
											"name": "tag",
											"source": 6,
											"value": "110"
										},
										{
											"begin": 11092,
											"end": 11412,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11136,
											"end": 11142,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11173,
											"end": 11174,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 11167,
											"end": 11171,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11163,
											"end": 11175,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 11153,
											"end": 11175,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11153,
											"end": 11175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11220,
											"end": 11221,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 11214,
											"end": 11218,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11210,
											"end": 11222,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11241,
											"end": 11259,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 11231,
											"end": 11312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "477"
										},
										{
											"begin": 11231,
											"end": 11312,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11297,
											"end": 11301,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 11289,
											"end": 11295,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11285,
											"end": 11302,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 11275,
											"end": 11302,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11275,
											"end": 11302,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11231,
											"end": 11312,
											"name": "tag",
											"source": 6,
											"value": "477"
										},
										{
											"begin": 11231,
											"end": 11312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11359,
											"end": 11361,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11351,
											"end": 11357,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11348,
											"end": 11362,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 11328,
											"end": 11346,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11325,
											"end": 11363,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 11322,
											"end": 11406,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "478"
										},
										{
											"begin": 11322,
											"end": 11406,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 11378,
											"end": 11396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "479"
										},
										{
											"begin": 11378,
											"end": 11396,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "342"
										},
										{
											"begin": 11378,
											"end": 11396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11378,
											"end": 11396,
											"name": "tag",
											"source": 6,
											"value": "479"
										},
										{
											"begin": 11378,
											"end": 11396,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11322,
											"end": 11406,
											"name": "tag",
											"source": 6,
											"value": "478"
										},
										{
											"begin": 11322,
											"end": 11406,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11143,
											"end": 11412,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11092,
											"end": 11412,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11092,
											"end": 11412,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11092,
											"end": 11412,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11092,
											"end": 11412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11418,
											"end": 11536,
											"name": "tag",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 11418,
											"end": 11536,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11505,
											"end": 11529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "481"
										},
										{
											"begin": 11523,
											"end": 11528,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11505,
											"end": 11529,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "325"
										},
										{
											"begin": 11505,
											"end": 11529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11505,
											"end": 11529,
											"name": "tag",
											"source": 6,
											"value": "481"
										},
										{
											"begin": 11505,
											"end": 11529,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11500,
											"end": 11503,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11493,
											"end": 11530,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 11418,
											"end": 11536,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11418,
											"end": 11536,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11418,
											"end": 11536,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11542,
											"end": 11764,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 11542,
											"end": 11764,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11635,
											"end": 11639,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11673,
											"end": 11675,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 11662,
											"end": 11671,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 11658,
											"end": 11676,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11650,
											"end": 11676,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11650,
											"end": 11676,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11686,
											"end": 11757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "483"
										},
										{
											"begin": 11754,
											"end": 11755,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11743,
											"end": 11752,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 11739,
											"end": 11756,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 11730,
											"end": 11736,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 11686,
											"end": 11757,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 11686,
											"end": 11757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11686,
											"end": 11757,
											"name": "tag",
											"source": 6,
											"value": "483"
										},
										{
											"begin": 11686,
											"end": 11757,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11542,
											"end": 11764,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11542,
											"end": 11764,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11542,
											"end": 11764,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11542,
											"end": 11764,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11542,
											"end": 11764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11770,
											"end": 11913,
											"name": "tag",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 11770,
											"end": 11913,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11827,
											"end": 11832,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 11858,
											"end": 11864,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11852,
											"end": 11865,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 11843,
											"end": 11865,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 11843,
											"end": 11865,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11874,
											"end": 11907,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "485"
										},
										{
											"begin": 11901,
											"end": 11906,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 11874,
											"end": 11907,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "316"
										},
										{
											"begin": 11874,
											"end": 11907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11874,
											"end": 11907,
											"name": "tag",
											"source": 6,
											"value": "485"
										},
										{
											"begin": 11874,
											"end": 11907,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11770,
											"end": 11913,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11770,
											"end": 11913,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11770,
											"end": 11913,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11770,
											"end": 11913,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11770,
											"end": 11913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 11919,
											"end": 12270,
											"name": "tag",
											"source": 6,
											"value": "137"
										},
										{
											"begin": 11919,
											"end": 12270,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 11989,
											"end": 11995,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12038,
											"end": 12040,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12026,
											"end": 12035,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12017,
											"end": 12024,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12013,
											"end": 12036,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 12009,
											"end": 12041,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 12006,
											"end": 12125,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 12006,
											"end": 12125,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "487"
										},
										{
											"begin": 12006,
											"end": 12125,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12044,
											"end": 12123,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "488"
										},
										{
											"begin": 12044,
											"end": 12123,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 12044,
											"end": 12123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12044,
											"end": 12123,
											"name": "tag",
											"source": 6,
											"value": "488"
										},
										{
											"begin": 12044,
											"end": 12123,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12006,
											"end": 12125,
											"name": "tag",
											"source": 6,
											"value": "487"
										},
										{
											"begin": 12006,
											"end": 12125,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12164,
											"end": 12165,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12189,
											"end": 12253,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "489"
										},
										{
											"begin": 12245,
											"end": 12252,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12236,
											"end": 12242,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12225,
											"end": 12234,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 12221,
											"end": 12243,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12189,
											"end": 12253,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "344"
										},
										{
											"begin": 12189,
											"end": 12253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12189,
											"end": 12253,
											"name": "tag",
											"source": 6,
											"value": "489"
										},
										{
											"begin": 12189,
											"end": 12253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12179,
											"end": 12253,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12179,
											"end": 12253,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12135,
											"end": 12263,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11919,
											"end": 12270,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 11919,
											"end": 12270,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 11919,
											"end": 12270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11919,
											"end": 12270,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 11919,
											"end": 12270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12276,
											"end": 12718,
											"name": "tag",
											"source": 6,
											"value": "146"
										},
										{
											"begin": 12276,
											"end": 12718,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12425,
											"end": 12429,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12463,
											"end": 12465,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 12452,
											"end": 12461,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 12448,
											"end": 12466,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12440,
											"end": 12466,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12440,
											"end": 12466,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12476,
											"end": 12547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "491"
										},
										{
											"begin": 12544,
											"end": 12545,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12533,
											"end": 12542,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12529,
											"end": 12546,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12520,
											"end": 12526,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 12476,
											"end": 12547,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 12476,
											"end": 12547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12476,
											"end": 12547,
											"name": "tag",
											"source": 6,
											"value": "491"
										},
										{
											"begin": 12476,
											"end": 12547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12557,
											"end": 12629,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "492"
										},
										{
											"begin": 12625,
											"end": 12627,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 12614,
											"end": 12623,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12610,
											"end": 12628,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12601,
											"end": 12607,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 12557,
											"end": 12629,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 12557,
											"end": 12629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12557,
											"end": 12629,
											"name": "tag",
											"source": 6,
											"value": "492"
										},
										{
											"begin": 12557,
											"end": 12629,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12639,
											"end": 12711,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "493"
										},
										{
											"begin": 12707,
											"end": 12709,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 12696,
											"end": 12705,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 12692,
											"end": 12710,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 12683,
											"end": 12689,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 12639,
											"end": 12711,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 12639,
											"end": 12711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12639,
											"end": 12711,
											"name": "tag",
											"source": 6,
											"value": "493"
										},
										{
											"begin": 12639,
											"end": 12711,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12276,
											"end": 12718,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 12276,
											"end": 12718,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 12276,
											"end": 12718,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12276,
											"end": 12718,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12276,
											"end": 12718,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12276,
											"end": 12718,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12276,
											"end": 12718,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12724,
											"end": 12840,
											"name": "tag",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 12724,
											"end": 12840,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12794,
											"end": 12815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "495"
										},
										{
											"begin": 12809,
											"end": 12814,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12794,
											"end": 12815,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 12794,
											"end": 12815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12794,
											"end": 12815,
											"name": "tag",
											"source": 6,
											"value": "495"
										},
										{
											"begin": 12794,
											"end": 12815,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12787,
											"end": 12792,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12784,
											"end": 12816,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 12774,
											"end": 12834,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "496"
										},
										{
											"begin": 12774,
											"end": 12834,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 12830,
											"end": 12831,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12827,
											"end": 12828,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 12820,
											"end": 12832,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 12774,
											"end": 12834,
											"name": "tag",
											"source": 6,
											"value": "496"
										},
										{
											"begin": 12774,
											"end": 12834,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12724,
											"end": 12840,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12724,
											"end": 12840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12846,
											"end": 12983,
											"name": "tag",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 12846,
											"end": 12983,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12900,
											"end": 12905,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 12931,
											"end": 12937,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12925,
											"end": 12938,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 12916,
											"end": 12938,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 12916,
											"end": 12938,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12947,
											"end": 12977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "498"
										},
										{
											"begin": 12971,
											"end": 12976,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 12947,
											"end": 12977,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "345"
										},
										{
											"begin": 12947,
											"end": 12977,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12947,
											"end": 12977,
											"name": "tag",
											"source": 6,
											"value": "498"
										},
										{
											"begin": 12947,
											"end": 12977,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 12846,
											"end": 12983,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12846,
											"end": 12983,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12846,
											"end": 12983,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12846,
											"end": 12983,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12846,
											"end": 12983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 12989,
											"end": 13334,
											"name": "tag",
											"source": 6,
											"value": "150"
										},
										{
											"begin": 12989,
											"end": 13334,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13056,
											"end": 13062,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13105,
											"end": 13107,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13093,
											"end": 13102,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13084,
											"end": 13091,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13080,
											"end": 13103,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 13076,
											"end": 13108,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 13073,
											"end": 13192,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 13073,
											"end": 13192,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "500"
										},
										{
											"begin": 13073,
											"end": 13192,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 13111,
											"end": 13190,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "501"
										},
										{
											"begin": 13111,
											"end": 13190,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "313"
										},
										{
											"begin": 13111,
											"end": 13190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13111,
											"end": 13190,
											"name": "tag",
											"source": 6,
											"value": "501"
										},
										{
											"begin": 13111,
											"end": 13190,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13073,
											"end": 13192,
											"name": "tag",
											"source": 6,
											"value": "500"
										},
										{
											"begin": 13073,
											"end": 13192,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13231,
											"end": 13232,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13256,
											"end": 13317,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "502"
										},
										{
											"begin": 13309,
											"end": 13316,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13300,
											"end": 13306,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13289,
											"end": 13298,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 13285,
											"end": 13307,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13256,
											"end": 13317,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "346"
										},
										{
											"begin": 13256,
											"end": 13317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13256,
											"end": 13317,
											"name": "tag",
											"source": 6,
											"value": "502"
										},
										{
											"begin": 13256,
											"end": 13317,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13246,
											"end": 13317,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 13246,
											"end": 13317,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13202,
											"end": 13327,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12989,
											"end": 13334,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 12989,
											"end": 13334,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 12989,
											"end": 13334,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12989,
											"end": 13334,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 12989,
											"end": 13334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13340,
											"end": 13672,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 13340,
											"end": 13672,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13461,
											"end": 13465,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13499,
											"end": 13501,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 13488,
											"end": 13497,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13484,
											"end": 13502,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13476,
											"end": 13502,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13476,
											"end": 13502,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13512,
											"end": 13583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "504"
										},
										{
											"begin": 13580,
											"end": 13581,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13569,
											"end": 13578,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13565,
											"end": 13582,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13556,
											"end": 13562,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 13512,
											"end": 13583,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 13512,
											"end": 13583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13512,
											"end": 13583,
											"name": "tag",
											"source": 6,
											"value": "504"
										},
										{
											"begin": 13512,
											"end": 13583,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13593,
											"end": 13665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "505"
										},
										{
											"begin": 13661,
											"end": 13663,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 13650,
											"end": 13659,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13646,
											"end": 13664,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13637,
											"end": 13643,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 13593,
											"end": 13665,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 13593,
											"end": 13665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13593,
											"end": 13665,
											"name": "tag",
											"source": 6,
											"value": "505"
										},
										{
											"begin": 13593,
											"end": 13665,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13340,
											"end": 13672,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 13340,
											"end": 13672,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 13340,
											"end": 13672,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13340,
											"end": 13672,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13340,
											"end": 13672,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13340,
											"end": 13672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13678,
											"end": 14231,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 13678,
											"end": 14231,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13855,
											"end": 13859,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13893,
											"end": 13896,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 13882,
											"end": 13891,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 13878,
											"end": 13897,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13870,
											"end": 13897,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 13870,
											"end": 13897,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "507"
										},
										{
											"begin": 13975,
											"end": 13976,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 13964,
											"end": 13973,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 13960,
											"end": 13977,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 13951,
											"end": 13957,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13978,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 13907,
											"end": 13978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13907,
											"end": 13978,
											"name": "tag",
											"source": 6,
											"value": "507"
										},
										{
											"begin": 13907,
											"end": 13978,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13988,
											"end": 14060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "508"
										},
										{
											"begin": 14056,
											"end": 14058,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14045,
											"end": 14054,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14041,
											"end": 14059,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14032,
											"end": 14038,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 13988,
											"end": 14060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 13988,
											"end": 14060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 13988,
											"end": 14060,
											"name": "tag",
											"source": 6,
											"value": "508"
										},
										{
											"begin": 13988,
											"end": 14060,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14070,
											"end": 14142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "509"
										},
										{
											"begin": 14138,
											"end": 14140,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 14127,
											"end": 14136,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14123,
											"end": 14141,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14114,
											"end": 14120,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 14070,
											"end": 14142,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 14070,
											"end": 14142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14070,
											"end": 14142,
											"name": "tag",
											"source": 6,
											"value": "509"
										},
										{
											"begin": 14070,
											"end": 14142,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14152,
											"end": 14224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "510"
										},
										{
											"begin": 14220,
											"end": 14222,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 14209,
											"end": 14218,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14205,
											"end": 14223,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14196,
											"end": 14202,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 14152,
											"end": 14224,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 14152,
											"end": 14224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14152,
											"end": 14224,
											"name": "tag",
											"source": 6,
											"value": "510"
										},
										{
											"begin": 14152,
											"end": 14224,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 13678,
											"end": 14231,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 13678,
											"end": 14231,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 13678,
											"end": 14231,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13678,
											"end": 14231,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13678,
											"end": 14231,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13678,
											"end": 14231,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13678,
											"end": 14231,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 13678,
											"end": 14231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14237,
											"end": 14679,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 14237,
											"end": 14679,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14386,
											"end": 14390,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14424,
											"end": 14426,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 14413,
											"end": 14422,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 14409,
											"end": 14427,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14401,
											"end": 14427,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14401,
											"end": 14427,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14437,
											"end": 14508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "512"
										},
										{
											"begin": 14505,
											"end": 14506,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 14494,
											"end": 14503,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14490,
											"end": 14507,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14481,
											"end": 14487,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 14437,
											"end": 14508,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "343"
										},
										{
											"begin": 14437,
											"end": 14508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14437,
											"end": 14508,
											"name": "tag",
											"source": 6,
											"value": "512"
										},
										{
											"begin": 14437,
											"end": 14508,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14518,
											"end": 14590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "513"
										},
										{
											"begin": 14586,
											"end": 14588,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 14575,
											"end": 14584,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14571,
											"end": 14589,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14562,
											"end": 14568,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 14518,
											"end": 14590,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 14518,
											"end": 14590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14518,
											"end": 14590,
											"name": "tag",
											"source": 6,
											"value": "513"
										},
										{
											"begin": 14518,
											"end": 14590,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14600,
											"end": 14672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "514"
										},
										{
											"begin": 14668,
											"end": 14670,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 14657,
											"end": 14666,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 14653,
											"end": 14671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 14644,
											"end": 14650,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 14600,
											"end": 14672,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "318"
										},
										{
											"begin": 14600,
											"end": 14672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 14600,
											"end": 14672,
											"name": "tag",
											"source": 6,
											"value": "514"
										},
										{
											"begin": 14600,
											"end": 14672,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14237,
											"end": 14679,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 14237,
											"end": 14679,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 14237,
											"end": 14679,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14237,
											"end": 14679,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14237,
											"end": 14679,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14237,
											"end": 14679,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14237,
											"end": 14679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"56_DEX/SimpleSwap.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidity(uint256,uint256)": "9cd441da",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"name()": "06fdde03",
							"removeLiquidity(uint256)": "9c8f9f23",
							"resvers0()": "4543c7cf",
							"resvers1()": "f000ead9",
							"swap(uint256,address,uint256)": "43264349",
							"symbol()": "95d89b41",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"_token1\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reserveOut\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resvers0\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"resvers1\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"56_DEX/SimpleSwap.sol\":\"SimpleSwap\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"56_DEX/SimpleSwap.sol\":{\"keccak256\":\"0xe03b1c03d13526095de486fa26240176cd1b8ce5bd8f4b343bae49b71f719319\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f61eec55ccae6cf6332a9554e26ebab6e352879605184e5f68fe04570844bbbe\",\"dweb:/ipfs/Qmf7kJwp7PaS4wvTCrgGSQdWj26wS8u1DrwWfz5gWsLKzd\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 725,
								"contract": "56_DEX/SimpleSwap.sol:SimpleSwap",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 731,
								"contract": "56_DEX/SimpleSwap.sol:SimpleSwap",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 733,
								"contract": "56_DEX/SimpleSwap.sol:SimpleSwap",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 735,
								"contract": "56_DEX/SimpleSwap.sol:SimpleSwap",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 737,
								"contract": "56_DEX/SimpleSwap.sol:SimpleSwap",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 7,
								"contract": "56_DEX/SimpleSwap.sol:SimpleSwap",
								"label": "token0",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IERC20)1295"
							},
							{
								"astId": 10,
								"contract": "56_DEX/SimpleSwap.sol:SimpleSwap",
								"label": "token1",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(IERC20)1295"
							},
							{
								"astId": 12,
								"contract": "56_DEX/SimpleSwap.sol:SimpleSwap",
								"label": "resvers0",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 14,
								"contract": "56_DEX/SimpleSwap.sol:SimpleSwap",
								"label": "resvers1",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)1295": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 725,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 731,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 733,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 735,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 737,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"56_DEX/SimpleSwap.sol": {
				"ast": {
					"absolutePath": "56_DEX/SimpleSwap.sol",
					"exportedSymbols": {
						"Context": [
							1351
						],
						"ERC20": [
							1217
						],
						"IERC20": [
							1295
						],
						"IERC20Errors": [
							607
						],
						"IERC20Metadata": [
							1321
						],
						"SimpleSwap": [
							565
						]
					},
					"id": 566,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 566,
							"sourceUnit": 1218,
							"src": "59:55:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "ERC20",
										"nameLocations": [
											"139:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1217,
										"src": "139:5:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "139:5:0"
								}
							],
							"canonicalName": "SimpleSwap",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 565,
							"linearizedBaseContracts": [
								565,
								1217,
								607,
								1321,
								1295,
								1351
							],
							"name": "SimpleSwap",
							"nameLocation": "125:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "0dfe1681",
									"id": 7,
									"mutability": "mutable",
									"name": "token0",
									"nameLocation": "203:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 565,
									"src": "189:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$1295",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 6,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 5,
											"name": "IERC20",
											"nameLocations": [
												"189:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1295,
											"src": "189:6:0"
										},
										"referencedDeclaration": 1295,
										"src": "189:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1295",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d21220a7",
									"id": 10,
									"mutability": "mutable",
									"name": "token1",
									"nameLocation": "230:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 565,
									"src": "216:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$1295",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 9,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 8,
											"name": "IERC20",
											"nameLocations": [
												"216:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1295,
											"src": "216:6:0"
										},
										"referencedDeclaration": 1295,
										"src": "216:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1295",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4543c7cf",
									"id": 12,
									"mutability": "mutable",
									"name": "resvers0",
									"nameLocation": "281:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 565,
									"src": "269:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 11,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "269:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f000ead9",
									"id": 14,
									"mutability": "mutable",
									"name": "resvers1",
									"nameLocation": "308:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 565,
									"src": "296:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 13,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "296:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f",
									"id": 22,
									"name": "Mint",
									"nameLocation": "384:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "405:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "389:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "389:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "417:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "412:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "412:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "430:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 22,
												"src": "425:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 19,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "425:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "388:50:0"
									},
									"src": "378:61:0"
								},
								{
									"anonymous": false,
									"eventSelector": "49995e5dd6158cf69ad3e9777c46755a1a826a446c6416992167462dad033b2a",
									"id": 30,
									"name": "Burn",
									"nameLocation": "465:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "486:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "470:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "470:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "498:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "493:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "493:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "511:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "506:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "506:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "469:50:0"
									},
									"src": "459:61:0"
								},
								{
									"anonymous": false,
									"eventSelector": "24043855bfbfea0ccea141e5a73d7116bf0bfe083ea900a791f4b407ff03e525",
									"id": 42,
									"name": "Swap",
									"nameLocation": "552:4:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "573:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "557:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 34,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "585:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "580:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 33,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "580:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 36,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "602:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "594:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "594:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "615:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "610:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "610:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "633:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "625:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 39,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "625:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:86:0"
									},
									"src": "546:97:0"
								},
								{
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "744:62:0",
										"statements": [
											{
												"expression": {
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 55,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "755:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1295",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 56,
														"name": "_token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 45,
														"src": "764:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1295",
															"typeString": "contract IERC20"
														}
													},
													"src": "755:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1295",
														"typeString": "contract IERC20"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "755:16:0"
											},
											{
												"expression": {
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 59,
														"name": "token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "782:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1295",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 60,
														"name": "_token1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "791:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1295",
															"typeString": "contract IERC20"
														}
													},
													"src": "782:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1295",
														"typeString": "contract IERC20"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "782:16:0"
											}
										]
									},
									"id": 64,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "53696d706c6553776170",
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "724:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_a0f41d54f2f2b7966a90e9cd39ab4f298f5040988f380cfafec39a85446da985",
														"typeString": "literal_string \"SimpleSwap\""
													},
													"value": "SimpleSwap"
												},
												{
													"hexValue": "5353",
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "738:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_8535e3db6464e317fd034d686701432ec45f68985b6a58376f7d984274c3141b",
														"typeString": "literal_string \"SS\""
													},
													"value": "SS"
												}
											],
											"id": 53,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 50,
												"name": "ERC20",
												"nameLocations": [
													"718:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1217,
												"src": "718:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "718:25:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "_token0",
												"nameLocation": "694:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "687:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1295",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 44,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 43,
														"name": "IERC20",
														"nameLocations": [
															"687:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1295,
														"src": "687:6:0"
													},
													"referencedDeclaration": 1295,
													"src": "687:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1295",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "_token1",
												"nameLocation": "709:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "702:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1295",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 47,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 46,
														"name": "IERC20",
														"nameLocations": [
															"702:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1295,
														"src": "702:6:0"
													},
													"referencedDeclaration": 1295,
													"src": "702:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1295",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:31:0"
									},
									"returnParameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "744:0:0"
									},
									"scope": 565,
									"src": "675:131:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "870:37:0",
										"statements": [
											{
												"expression": {
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 73,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 71,
														"src": "881:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 74,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "885:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 75,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 68,
																"src": "889:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "885:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"id": 78,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "897:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 79,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "885:13:0",
														"trueExpression": {
															"id": 77,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "893:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "881:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "881:17:0"
											}
										]
									},
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "821:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "830:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "825:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "825:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "837:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "832:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 67,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "832:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "824:15:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "867:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "862:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "862:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:8:0"
									},
									"scope": 565,
									"src": "812:95:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 138,
										"nodeType": "Block",
										"src": "968:255:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 90,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "983:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "33",
														"id": 91,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "987:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "983:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 130,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 128,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "1175:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1180:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1175:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 136,
													"nodeType": "IfStatement",
													"src": "1171:45:0",
													"trueBody": {
														"id": 135,
														"nodeType": "Block",
														"src": "1183:33:0",
														"statements": [
															{
																"expression": {
																	"id": 133,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 131,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 88,
																		"src": "1198:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "31",
																		"id": 132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1202:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1198:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 134,
																"nodeType": "ExpressionStatement",
																"src": "1198:5:0"
															}
														]
													}
												},
												"id": 137,
												"nodeType": "IfStatement",
												"src": "979:237:0",
												"trueBody": {
													"id": 127,
													"nodeType": "Block",
													"src": "990:176:0",
													"statements": [
														{
															"expression": {
																"id": 95,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 93,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 88,
																	"src": "1005:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 94,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 85,
																	"src": "1009:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1005:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 96,
															"nodeType": "ExpressionStatement",
															"src": "1005:5:0"
														},
														{
															"assignments": [
																98
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 98,
																	"mutability": "mutable",
																	"name": "x",
																	"nameLocation": "1030:1:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 127,
																	"src": "1025:6:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 97,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "1025:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 105,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 104,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 101,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 99,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 85,
																				"src": "1035:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 100,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1039:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "1035:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 102,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1034:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 103,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1044:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1034:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "1025:20:0"
														},
														{
															"body": {
																"id": 125,
																"nodeType": "Block",
																"src": "1074:80:0",
																"statements": [
																	{
																		"expression": {
																			"id": 111,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 109,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 88,
																				"src": "1093:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 110,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 98,
																				"src": "1097:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1093:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 112,
																		"nodeType": "ExpressionStatement",
																		"src": "1093:5:0"
																	},
																	{
																		"expression": {
																			"id": 123,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 113,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 98,
																				"src": "1117:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 122,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 119,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"components": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 116,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"id": 114,
																											"name": "y",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 85,
																											"src": "1123:1:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "/",
																										"rightExpression": {
																											"id": 115,
																											"name": "x",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 98,
																											"src": "1127:1:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"src": "1123:5:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 117,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "1122:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"id": 118,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 98,
																								"src": "1132:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "1122:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 120,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "1121:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 121,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "1137:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "1121:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1117:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 124,
																		"nodeType": "ExpressionStatement",
																		"src": "1117:21:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 106,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "1067:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 107,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 88,
																	"src": "1071:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1067:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 126,
															"nodeType": "WhileStatement",
															"src": "1060:94:0"
														}
													]
												}
											}
										]
									},
									"id": 139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "923:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "933:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "928:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 84,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "928:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "927:8:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "965:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 139,
												"src": "960:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "960:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "959:8:0"
									},
									"scope": 565,
									"src": "914:309:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "1346:747:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 151,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1416:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1420:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1416:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 155,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1436:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SimpleSwap_$565",
																		"typeString": "contract SimpleSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SimpleSwap_$565",
																		"typeString": "contract SimpleSwap"
																	}
																],
																"id": 154,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1428:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 153,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1428:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 156,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1428:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 157,
															"name": "amount0Desired",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "1443:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 148,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "1396:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1295",
																"typeString": "contract IERC20"
															}
														},
														"id": 150,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1403:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1294,
														"src": "1396:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1396:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 159,
												"nodeType": "ExpressionStatement",
												"src": "1396:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 163,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1489:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1493:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1489:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 167,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1509:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SimpleSwap_$565",
																		"typeString": "contract SimpleSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SimpleSwap_$565",
																		"typeString": "contract SimpleSwap"
																	}
																],
																"id": 166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1501:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 165,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1501:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 168,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1501:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 169,
															"name": "amount1Desired",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "1516:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 160,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "1469:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1295",
																"typeString": "contract IERC20"
															}
														},
														"id": 162,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1476:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1294,
														"src": "1469:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1469:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "1469:62:0"
											},
											{
												"assignments": [
													173
												],
												"declarations": [
													{
														"constant": false,
														"id": 173,
														"mutability": "mutable",
														"name": "_totalSupply",
														"nameLocation": "1547:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 245,
														"src": "1542:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 172,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1542:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 176,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 174,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "1562:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1562:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1542:33:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 177,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "1620:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 178,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1636:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1620:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 204,
													"nodeType": "Block",
													"src": "1718:126:0",
													"statements": [
														{
															"expression": {
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 189,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "1733:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 195,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 193,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 191,
																					"name": "amount0Desired",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 141,
																					"src": "1749:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 192,
																					"name": "_totalSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 173,
																					"src": "1766:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1749:29:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 194,
																				"name": "resvers0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 12,
																				"src": "1781:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1749:40:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 198,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 196,
																					"name": "amount1Desired",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 143,
																					"src": "1791:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 197,
																					"name": "_totalSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 173,
																					"src": "1808:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1791:29:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 199,
																				"name": "resvers1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 14,
																				"src": "1823:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1791:40:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 190,
																		"name": "min",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 83,
																		"src": "1745:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 201,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1745:87:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1733:99:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 203,
															"nodeType": "ExpressionStatement",
															"src": "1733:99:0"
														}
													]
												},
												"id": 205,
												"nodeType": "IfStatement",
												"src": "1616:228:0",
												"trueBody": {
													"id": 188,
													"nodeType": "Block",
													"src": "1639:74:0",
													"statements": [
														{
															"expression": {
																"id": 186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 180,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 146,
																	"src": "1654:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 182,
																				"name": "amount0Desired",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 141,
																				"src": "1671:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 183,
																				"name": "amount1Desired",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 143,
																				"src": "1686:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "1671:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 181,
																		"name": "sqrt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 139,
																		"src": "1666:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 185,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1666:35:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1654:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 187,
															"nodeType": "ExpressionStatement",
															"src": "1654:47:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 207,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "1862:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1874:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1862:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1854:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1854:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 211,
												"nodeType": "ExpressionStatement",
												"src": "1854:22:0"
											},
											{
												"expression": {
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 212,
														"name": "resvers0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "1887:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 217,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1923:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SimpleSwap_$565",
																			"typeString": "contract SimpleSwap"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SimpleSwap_$565",
																			"typeString": "contract SimpleSwap"
																		}
																	],
																	"id": 216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1915:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 215,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1915:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1915:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 213,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "1898:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1295",
																	"typeString": "contract IERC20"
																}
															},
															"id": 214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1905:9:0",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1252,
															"src": "1898:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1898:31:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1887:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "1887:42:0"
											},
											{
												"expression": {
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 222,
														"name": "resvers1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "1940:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 227,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "1976:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SimpleSwap_$565",
																			"typeString": "contract SimpleSwap"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SimpleSwap_$565",
																			"typeString": "contract SimpleSwap"
																		}
																	],
																	"id": 226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1968:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 225,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1968:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1968:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 223,
																"name": "token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "1951:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1295",
																	"typeString": "contract IERC20"
																}
															},
															"id": 224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1958:9:0",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1252,
															"src": "1951:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1951:31:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1940:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 231,
												"nodeType": "ExpressionStatement",
												"src": "1940:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 233,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1999:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2003:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1999:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 235,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "2011:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 232,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1057,
														"src": "1993:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1993:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "1993:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 239,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2042:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2046:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2042:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 241,
															"name": "amount0Desired",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "2054:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 242,
															"name": "amount1Desired",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 143,
															"src": "2070:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 238,
														"name": "Mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "2037:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2037:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "EmitStatement",
												"src": "2032:53:0"
											}
										]
									},
									"functionSelector": "9cd441da",
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "1261:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "amount0Desired",
												"nameLocation": "1279:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "1274:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 140,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1274:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "amount1Desired",
												"nameLocation": "1299:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "1294:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1294:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1273:41:0"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1335:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "1330:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1330:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1329:16:0"
									},
									"scope": 565,
									"src": "1252:841:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 355,
										"nodeType": "Block",
										"src": "2207:645:0",
										"statements": [
											{
												"assignments": [
													256
												],
												"declarations": [
													{
														"constant": false,
														"id": 256,
														"mutability": "mutable",
														"name": "balance0",
														"nameLocation": "2223:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 355,
														"src": "2218:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 255,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2218:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 264,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 261,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2259:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SimpleSwap_$565",
																		"typeString": "contract SimpleSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SimpleSwap_$565",
																		"typeString": "contract SimpleSwap"
																	}
																],
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2251:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 259,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2251:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2251:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 257,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "2234:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1295",
																"typeString": "contract IERC20"
															}
														},
														"id": 258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2241:9:0",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1252,
														"src": "2234:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2234:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2218:47:0"
											},
											{
												"assignments": [
													266
												],
												"declarations": [
													{
														"constant": false,
														"id": 266,
														"mutability": "mutable",
														"name": "balance1",
														"nameLocation": "2281:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 355,
														"src": "2276:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 265,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 274,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 271,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2317:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SimpleSwap_$565",
																		"typeString": "contract SimpleSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SimpleSwap_$565",
																		"typeString": "contract SimpleSwap"
																	}
																],
																"id": 270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2309:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 269,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2309:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2309:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 267,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "2292:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1295",
																"typeString": "contract IERC20"
															}
														},
														"id": 268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2299:9:0",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1252,
														"src": "2292:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2292:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2276:47:0"
											},
											{
												"assignments": [
													276
												],
												"declarations": [
													{
														"constant": false,
														"id": 276,
														"mutability": "mutable",
														"name": "_totalSupply",
														"nameLocation": "2339:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 355,
														"src": "2334:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 275,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2334:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 279,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 277,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "2354:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2354:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2334:33:0"
											},
											{
												"expression": {
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 280,
														"name": "amount0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 251,
														"src": "2408:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 285,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 283,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 281,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "2418:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 282,
																"name": "balance0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 256,
																"src": "2430:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2418:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 284,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "2441:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2418:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2408:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "2408:45:0"
											},
											{
												"expression": {
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 288,
														"name": "amount1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 253,
														"src": "2464:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 289,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "2474:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 290,
																"name": "balance1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 266,
																"src": "2486:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2474:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 292,
															"name": "_totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "2497:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2474:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2464:45:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 295,
												"nodeType": "ExpressionStatement",
												"src": "2464:45:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 297,
																	"name": "amount0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "2528:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2538:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2528:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 300,
																	"name": "amount1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 253,
																	"src": "2543:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2552:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "2543:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2528:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 296,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2520:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2520:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 305,
												"nodeType": "ExpressionStatement",
												"src": "2520:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 307,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2571:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2575:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2571:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 309,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "2583:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 306,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1090,
														"src": "2565:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2565:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 311,
												"nodeType": "ExpressionStatement",
												"src": "2565:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 315,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2620:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2624:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2620:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 317,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "2632:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 312,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "2604:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1295",
																"typeString": "contract IERC20"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2611:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1262,
														"src": "2604:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2604:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "2604:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 323,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2668:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2672:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2668:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 325,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "2680:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 320,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "2652:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1295",
																"typeString": "contract IERC20"
															}
														},
														"id": 322,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2659:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1262,
														"src": "2652:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2652:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "2652:36:0"
											},
											{
												"expression": {
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 328,
														"name": "resvers0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "2699:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 333,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2735:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SimpleSwap_$565",
																			"typeString": "contract SimpleSwap"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SimpleSwap_$565",
																			"typeString": "contract SimpleSwap"
																		}
																	],
																	"id": 332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2727:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 331,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2727:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2727:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 329,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "2710:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1295",
																	"typeString": "contract IERC20"
																}
															},
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2717:9:0",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1252,
															"src": "2710:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 335,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2710:31:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2699:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 337,
												"nodeType": "ExpressionStatement",
												"src": "2699:42:0"
											},
											{
												"expression": {
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 338,
														"name": "resvers1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "2752:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 343,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2788:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SimpleSwap_$565",
																			"typeString": "contract SimpleSwap"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SimpleSwap_$565",
																			"typeString": "contract SimpleSwap"
																		}
																	],
																	"id": 342,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2780:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 341,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2780:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2780:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 339,
																"name": "token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2763:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1295",
																	"typeString": "contract IERC20"
																}
															},
															"id": 340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2770:9:0",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1252,
															"src": "2763:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2763:31:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2752:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "2752:42:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 349,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2815:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2819:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2815:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 351,
															"name": "amount0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 251,
															"src": "2827:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 352,
															"name": "amount1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 253,
															"src": "2836:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 348,
														"name": "Burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "2810:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2810:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "EmitStatement",
												"src": "2805:39:0"
											}
										]
									},
									"functionSelector": "9c8f9f23",
									"id": 356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "removeLiquidity",
									"nameLocation": "2131:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "2152:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "2147:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 247,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2147:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2146:16:0"
									},
									"returnParameters": {
										"id": 254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "amount0",
												"nameLocation": "2185:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "2180:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 250,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2180:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 253,
												"mutability": "mutable",
												"name": "amount1",
												"nameLocation": "2198:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "2193:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 252,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2193:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2179:27:0"
									},
									"scope": 565,
									"src": "2122:730:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "3066:160:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 368,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 358,
																"src": "3085:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3096:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3085:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 367,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3077:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3077:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "3077:21:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 374,
																	"name": "reserveIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 360,
																	"src": "3117:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3129:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3117:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 377,
																	"name": "reserveOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 362,
																	"src": "3134:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3147:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "3134:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3117:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 373,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3109:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3109:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "3109:40:0"
											},
											{
												"expression": {
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 383,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 365,
														"src": "3160:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 391,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 384,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 358,
																"src": "3172:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 385,
																"name": "reserveOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 362,
																"src": "3183:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3172:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 387,
																		"name": "reserveIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 360,
																		"src": "3197:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 388,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 358,
																		"src": "3209:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3197:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 390,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3196:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3172:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3160:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 393,
												"nodeType": "ExpressionStatement",
												"src": "3160:58:0"
											}
										]
									},
									"functionSelector": "054d50d4",
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "2971:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "2989:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "2984:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 357,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2984:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "reserveIn",
												"nameLocation": "3003:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "2998:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 359,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2998:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "reserveOut",
												"nameLocation": "3018:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "3013:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3013:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2983:46:0"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3055:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "3050:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 364,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3050:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3049:16:0"
									},
									"scope": 565,
									"src": "2962:264:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "3343:1022:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 411,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 397,
																"src": "3362:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3373:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3362:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 410,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3354:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3354:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 415,
												"nodeType": "ExpressionStatement",
												"src": "3354:21:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_contract$_IERC20_$1295",
																	"typeString": "contract IERC20"
																},
																"id": 419,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 417,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "3394:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1295",
																		"typeString": "contract IERC20"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 418,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 7,
																	"src": "3405:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1295",
																		"typeString": "contract IERC20"
																	}
																},
																"src": "3394:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_contract$_IERC20_$1295",
																	"typeString": "contract IERC20"
																},
																"id": 422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 420,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "3415:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1295",
																		"typeString": "contract IERC20"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 421,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "3426:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1295",
																		"typeString": "contract IERC20"
																	}
																},
																"src": "3415:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3394:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 416,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3386:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3386:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 425,
												"nodeType": "ExpressionStatement",
												"src": "3386:47:0"
											},
											{
												"assignments": [
													427
												],
												"declarations": [
													{
														"constant": false,
														"id": 427,
														"mutability": "mutable",
														"name": "balance0",
														"nameLocation": "3449:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 563,
														"src": "3444:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 426,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3444:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 435,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 432,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3485:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SimpleSwap_$565",
																		"typeString": "contract SimpleSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SimpleSwap_$565",
																		"typeString": "contract SimpleSwap"
																	}
																],
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3477:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 430,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3477:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3477:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 428,
															"name": "token0",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "3460:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1295",
																"typeString": "contract IERC20"
															}
														},
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3467:9:0",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1252,
														"src": "3460:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3460:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3444:47:0"
											},
											{
												"assignments": [
													437
												],
												"declarations": [
													{
														"constant": false,
														"id": 437,
														"mutability": "mutable",
														"name": "balance1",
														"nameLocation": "3507:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 563,
														"src": "3502:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 436,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3502:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 445,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 442,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3543:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SimpleSwap_$565",
																		"typeString": "contract SimpleSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SimpleSwap_$565",
																		"typeString": "contract SimpleSwap"
																	}
																],
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3535:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 440,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3535:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3535:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 438,
															"name": "token1",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "3518:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1295",
																"typeString": "contract IERC20"
															}
														},
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3525:9:0",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1252,
														"src": "3518:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3518:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3502:47:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_contract$_IERC20_$1295",
														"typeString": "contract IERC20"
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 446,
														"name": "tokenIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "3564:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1295",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 447,
														"name": "token0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "3575:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1295",
															"typeString": "contract IERC20"
														}
													},
													"src": "3564:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 526,
													"nodeType": "Block",
													"src": "3875:287:0",
													"statements": [
														{
															"expression": {
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 488,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "3890:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1295",
																		"typeString": "contract IERC20"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 489,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "3900:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1295",
																		"typeString": "contract IERC20"
																	}
																},
																"src": "3890:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1295",
																	"typeString": "contract IERC20"
																}
															},
															"id": 491,
															"nodeType": "ExpressionStatement",
															"src": "3890:16:0"
														},
														{
															"expression": {
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 492,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "3921:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 494,
																			"name": "amountIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 397,
																			"src": "3946:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 495,
																			"name": "balance1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 437,
																			"src": "3956:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 496,
																			"name": "balance0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 427,
																			"src": "3966:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 493,
																		"name": "getAmountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 395,
																		"src": "3933:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3933:42:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3921:54:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 499,
															"nodeType": "ExpressionStatement",
															"src": "3921:54:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 501,
																			"name": "amountOut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 405,
																			"src": "3998:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"id": 502,
																			"name": "amountOutMin",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 402,
																			"src": "4010:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3998:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 500,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3990:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 504,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3990:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 505,
															"nodeType": "ExpressionStatement",
															"src": "3990:33:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 509,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4059:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4063:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4059:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 513,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "4079:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SimpleSwap_$565",
																					"typeString": "contract SimpleSwap"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SimpleSwap_$565",
																					"typeString": "contract SimpleSwap"
																				}
																			],
																			"id": 512,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4071:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 511,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4071:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4071:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 515,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 397,
																		"src": "4086:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 506,
																		"name": "tokenIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 400,
																		"src": "4038:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1295",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4046:12:0",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1294,
																	"src": "4038:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 516,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4038:57:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 517,
															"nodeType": "ExpressionStatement",
															"src": "4038:57:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 521,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "4128:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4132:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "4128:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 523,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "4140:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 518,
																		"name": "tokenOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 408,
																		"src": "4110:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1295",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4119:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1262,
																	"src": "4110:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 524,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4110:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 525,
															"nodeType": "ExpressionStatement",
															"src": "4110:40:0"
														}
													]
												},
												"id": 527,
												"nodeType": "IfStatement",
												"src": "3560:602:0",
												"trueBody": {
													"id": 487,
													"nodeType": "Block",
													"src": "3583:287:0",
													"statements": [
														{
															"expression": {
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 449,
																	"name": "tokenOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 408,
																	"src": "3598:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1295",
																		"typeString": "contract IERC20"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 450,
																	"name": "token1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "3609:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1295",
																		"typeString": "contract IERC20"
																	}
																},
																"src": "3598:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1295",
																	"typeString": "contract IERC20"
																}
															},
															"id": 452,
															"nodeType": "ExpressionStatement",
															"src": "3598:17:0"
														},
														{
															"expression": {
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 453,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "3630:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 455,
																			"name": "amountIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 397,
																			"src": "3655:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 456,
																			"name": "balance0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 427,
																			"src": "3665:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 457,
																			"name": "balance1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 437,
																			"src": "3675:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 454,
																		"name": "getAmountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 395,
																		"src": "3642:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3642:42:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3630:54:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 460,
															"nodeType": "ExpressionStatement",
															"src": "3630:54:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 462,
																			"name": "amountOut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 405,
																			"src": "3707:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"id": 463,
																			"name": "amountOutMin",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 402,
																			"src": "3719:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3707:24:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 461,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3699:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3699:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 466,
															"nodeType": "ExpressionStatement",
															"src": "3699:33:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 470,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3768:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 471,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3772:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3768:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 474,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3787:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SimpleSwap_$565",
																					"typeString": "contract SimpleSwap"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SimpleSwap_$565",
																					"typeString": "contract SimpleSwap"
																				}
																			],
																			"id": 473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3779:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 472,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3779:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 475,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3779:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 476,
																		"name": "amountIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 397,
																		"src": "3794:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 467,
																		"name": "tokenIn",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 400,
																		"src": "3747:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1295",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3755:12:0",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1294,
																	"src": "3747:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																"id": 477,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3747:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 478,
															"nodeType": "ExpressionStatement",
															"src": "3747:56:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 482,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3836:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3840:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3836:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 484,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "3848:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 479,
																		"name": "tokenOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 408,
																		"src": "3818:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1295",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3827:8:0",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1262,
																	"src": "3818:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3818:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 486,
															"nodeType": "ExpressionStatement",
															"src": "3818:40:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 528,
														"name": "resvers0",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "4172:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 533,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4208:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SimpleSwap_$565",
																			"typeString": "contract SimpleSwap"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SimpleSwap_$565",
																			"typeString": "contract SimpleSwap"
																		}
																	],
																	"id": 532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4200:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 531,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4200:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4200:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 529,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "4183:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1295",
																	"typeString": "contract IERC20"
																}
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4190:9:0",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1252,
															"src": "4183:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 535,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4183:31:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4172:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 537,
												"nodeType": "ExpressionStatement",
												"src": "4172:42:0"
											},
											{
												"expression": {
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 538,
														"name": "resvers1",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "4225:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 543,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "4261:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SimpleSwap_$565",
																			"typeString": "contract SimpleSwap"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SimpleSwap_$565",
																			"typeString": "contract SimpleSwap"
																		}
																	],
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4253:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 541,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4253:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4253:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 539,
																"name": "token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "4236:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1295",
																	"typeString": "contract IERC20"
																}
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4243:9:0",
															"memberName": "balanceOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1252,
															"src": "4236:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view external returns (uint256)"
															}
														},
														"id": 545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4236:31:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4225:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 547,
												"nodeType": "ExpressionStatement",
												"src": "4225:42:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 549,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4288:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4292:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4288:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 551,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 397,
															"src": "4300:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 554,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "4318:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1295",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1295",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4310:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 552,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4310:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4310:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 556,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "4328:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 559,
																	"name": "tokenOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 408,
																	"src": "4347:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1295",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1295",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 558,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4339:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 557,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4339:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4339:17:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 548,
														"name": "Swap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "4283:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address,uint256,address)"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4283:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 562,
												"nodeType": "EmitStatement",
												"src": "4278:79:0"
											}
										]
									},
									"functionSelector": "43264349",
									"id": 564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nameLocation": "3241:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "3251:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "3246:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3246:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "3267:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "3260:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1295",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 399,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 398,
														"name": "IERC20",
														"nameLocations": [
															"3260:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1295,
														"src": "3260:6:0"
													},
													"referencedDeclaration": 1295,
													"src": "3260:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1295",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "amountOutMin",
												"nameLocation": "3280:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "3275:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 401,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3275:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3245:48:0"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "3316:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "3311:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 404,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3311:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "3333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "3326:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1295",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 407,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 406,
														"name": "IERC20",
														"nameLocations": [
															"3326:6:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1295,
														"src": "3326:6:0"
													},
													"referencedDeclaration": 1295,
													"src": "3326:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1295",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3310:32:0"
									},
									"scope": 565,
									"src": "3232:1133:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 566,
							"src": "116:4252:0",
							"usedErrors": [
								577,
								582,
								587,
								596,
								601,
								606
							],
							"usedEvents": [
								22,
								30,
								42,
								1229,
								1238
							]
						}
					],
					"src": "33:4335:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							702
						],
						"IERC20Errors": [
							607
						],
						"IERC721Errors": [
							655
						]
					},
					"id": 703,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 567,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 568,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:1",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 607,
							"linearizedBaseContracts": [
								607
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 569,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 577,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "652:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "668:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "685:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:1"
									},
									"src": "621:80:1"
								},
								{
									"documentation": {
										"id": 578,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 582,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "889:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:1"
									},
									"src": "864:41:1"
								},
								{
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 587,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "1102:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:1"
									},
									"src": "1075:45:1"
								},
								{
									"documentation": {
										"id": 588,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 596,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "1509:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "1526:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "1545:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:1"
									},
									"src": "1476:85:1"
								},
								{
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 601,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "1773:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:1"
									},
									"src": "1746:45:1"
								},
								{
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 606,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "2023:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:1"
									},
									"src": "1997:43:1"
								}
							],
							"scope": 703,
							"src": "278:1764:1",
							"usedErrors": [
								577,
								582,
								587,
								596,
								601,
								606
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 608,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:1",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 655,
							"linearizedBaseContracts": [
								655
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 609,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 613,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 613,
												"src": "2465:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:1"
									},
									"src": "2440:40:1"
								},
								{
									"documentation": {
										"id": 614,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 618,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 618,
												"src": "2652:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:1"
									},
									"src": "2623:46:1"
								},
								{
									"documentation": {
										"id": 619,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 627,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "2996:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "3012:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 627,
												"src": "3029:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:1"
									},
									"src": "2969:75:1"
								},
								{
									"documentation": {
										"id": 628,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 632,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "3233:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:1"
									},
									"src": "3207:42:1"
								},
								{
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 637,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "3447:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:1"
									},
									"src": "3419:46:1"
								},
								{
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 644,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "3756:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "3774:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:1"
									},
									"src": "3723:68:1"
								},
								{
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 649,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "4004:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:1"
									},
									"src": "3976:46:1"
								},
								{
									"documentation": {
										"id": 650,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 654,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "4258:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:1"
									},
									"src": "4230:46:1"
								}
							],
							"scope": 703,
							"src": "2186:2092:1",
							"usedErrors": [
								613,
								618,
								627,
								632,
								637,
								644,
								649,
								654
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 656,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:1",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 702,
							"linearizedBaseContracts": [
								702
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 667,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "4854:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "4870:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "4887:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 662,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "4903:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:1"
									},
									"src": "4821:99:1"
								},
								{
									"documentation": {
										"id": 668,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 672,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "5110:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:1"
									},
									"src": "5083:43:1"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 677,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 677,
												"src": "5325:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:1"
									},
									"src": "5296:47:1"
								},
								{
									"documentation": {
										"id": 678,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 684,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "5645:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "5663:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 681,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:1"
									},
									"src": "5610:68:1"
								},
								{
									"documentation": {
										"id": 685,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 689,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "5892:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:1"
									},
									"src": "5863:47:1"
								},
								{
									"documentation": {
										"id": 690,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 694,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 694,
												"src": "6147:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 691,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:1"
									},
									"src": "6118:47:1"
								},
								{
									"documentation": {
										"id": 695,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 701,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "6488:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "6507:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:1"
									},
									"src": "6456:73:1"
								}
							],
							"scope": 703,
							"src": "4424:2107:1",
							"usedErrors": [
								667,
								672,
								677,
								684,
								689,
								694,
								701
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1351
						],
						"ERC20": [
							1217
						],
						"IERC20": [
							1295
						],
						"IERC20Errors": [
							607
						],
						"IERC20Metadata": [
							1321
						]
					},
					"id": 1218,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 704,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 706,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1218,
							"sourceUnit": 1296,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 705,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1295,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 708,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1218,
							"sourceUnit": 1322,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 707,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1321,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 710,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1218,
							"sourceUnit": 1352,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 709,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1351,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 712,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1218,
							"sourceUnit": 703,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 711,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 607,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 714,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1351,
										"src": "1428:7:2"
									},
									"id": 715,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 716,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1295,
										"src": "1437:6:2"
									},
									"id": 717,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 718,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1321,
										"src": "1445:14:2"
									},
									"id": 719,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 720,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 607,
										"src": "1461:12:2"
									},
									"id": 721,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 713,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 1217,
							"linearizedBaseContracts": [
								1217,
								607,
								1321,
								1295,
								1351
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 725,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 1217,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 724,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 722,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 723,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 731,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 1217,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 730,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 726,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 729,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 727,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 728,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 733,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 1217,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 732,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 735,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 1217,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 734,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 737,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1217,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 736,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 753,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 745,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 735,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 746,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 740,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 748,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 749,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 750,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 752,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 754,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 739,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 741,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 1217,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1308
									],
									"body": {
										"id": 762,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 760,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 735,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 759,
												"id": 761,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 755,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 763,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 763,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 757,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 1217,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1314
									],
									"body": {
										"id": 771,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 769,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 737,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 768,
												"id": 770,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 765,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 772,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 766,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 1217,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1320
									],
									"body": {
										"id": 780,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 777,
												"id": 779,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 773,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 781,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 775,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 1217,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1244
									],
									"body": {
										"id": 789,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 787,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 733,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 786,
												"id": 788,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 782,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 1217,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1252
									],
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 798,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 725,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 800,
													"indexExpression": {
														"id": 799,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 797,
												"id": 801,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 791,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 1217,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1262
									],
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													814
												],
												"declarations": [
													{
														"constant": false,
														"id": 814,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 826,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 813,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 817,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 815,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1333,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 819,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 820,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 821,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 808,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 818,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 823,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 824,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 812,
												"id": 825,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 804,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 810,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 1217,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1272
									],
									"body": {
										"id": 843,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 837,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 839,
														"indexExpression": {
															"id": 838,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 830,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 841,
													"indexExpression": {
														"id": 840,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 836,
												"id": 842,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 829,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 844,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 1217,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1282
									],
									"body": {
										"id": 867,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													855
												],
												"declarations": [
													{
														"constant": false,
														"id": 855,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 867,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 854,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 858,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 856,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1333,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 860,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 861,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 847,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 862,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 859,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1108,
															1168
														],
														"referencedDeclaration": 1108,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 864,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 853,
												"id": 866,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 868,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 851,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 1217,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1294
									],
									"body": {
										"id": 899,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													881
												],
												"declarations": [
													{
														"constant": false,
														"id": 881,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 899,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 880,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 884,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 882,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1333,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 886,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 887,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 888,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 885,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1216,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 890,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 892,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 871,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 893,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 894,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 891,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 947,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 896,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 897,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 879,
												"id": 898,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 869,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 877,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 1217,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 946,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 910,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 912,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 911,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 914,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 924,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 923,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 919,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 918,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 917,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 916,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 921,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 922,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 925,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 905,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 927,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 926,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 929,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 939,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 938,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 934,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 933,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 932,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 935,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 931,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 936,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 937,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 941,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 942,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 905,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 943,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 940,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1024,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 945,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 947,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 1217,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1023,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 957,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 950,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 958,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 961,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 994,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																969
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 969,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 994,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 968,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 973,
															"initialValue": {
																"baseExpression": {
																	"id": 970,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 725,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 972,
																"indexExpression": {
																	"id": 971,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 950,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 974,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 969,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 975,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 954,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 984,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 983,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 978,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 950,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 979,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 969,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 980,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 954,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 977,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 577,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 981,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 982,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 993,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 991,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 985,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 725,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 987,
																			"indexExpression": {
																				"id": 986,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 950,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 990,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 988,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 969,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 989,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 954,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 992,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 995,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 967,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 965,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 963,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 964,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 954,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 966,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1001,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 996,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 952,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 997,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1000,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1015,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 1014,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 1012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 1008,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 725,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1010,
																			"indexExpression": {
																				"id": 1009,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 952,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 1011,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 954,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1013,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 1016,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 1007,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 1006,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 1004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1002,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 733,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 1003,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 954,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1005,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1018,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1019,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1020,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1017,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1229,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1022,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 1024,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1024,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 1217,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1056,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1037,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1032,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1027,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1033,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1036,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1046,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 1045,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1041,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1040,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1039,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1038,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1044,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1048,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1052,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1027,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1053,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1047,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1024,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1054,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1055,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 1025,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 1057,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1027,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1026,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 1217,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1089,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1065,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1060,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1068,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1066,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1069,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1079,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 1078,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1074,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1073,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1072,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1071,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 582,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1076,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1077,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1081,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1084,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1083,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1082,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1086,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1062,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1080,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1024,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1088,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 1090,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1059,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1090,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 1217,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1107,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1101,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1102,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1103,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1100,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1108,
															1168
														],
														"referencedDeclaration": 1168,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1106,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 1091,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1092,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1094,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1108,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 1217,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1167,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1120,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1111,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1121,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1124,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1134,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 1133,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1129,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1128,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1127,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1126,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 601,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1132,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1135,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1113,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1136,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1139,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1149,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 1148,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1144,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1142,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1141,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 606,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1147,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1150,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 731,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1153,
															"indexExpression": {
																"id": 1151,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1111,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1154,
														"indexExpression": {
															"id": 1152,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1155,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1157,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 1158,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1117,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1166,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 1165,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1160,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1111,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1161,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1113,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1162,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1115,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1159,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1238,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1164,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1109,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1116,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 1119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 1217,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1215,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													1179
												],
												"declarations": [
													{
														"constant": false,
														"id": 1179,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 1215,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1178,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1184,
												"initialValue": {
													"arguments": [
														{
															"id": 1181,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1182,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1180,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 844,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1185,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1188,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1187,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1186,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1190,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1214,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 1213,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1192,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1179,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1193,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1175,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1202,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 1201,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1196,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1173,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1197,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1179,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1198,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1175,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1195,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 596,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1200,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 1212,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1204,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1171,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1205,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1173,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1208,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1206,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1179,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1207,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1175,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1209,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1203,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1108,
																				1168
																			],
																			"referencedDeclaration": 1168,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1210,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1211,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1169,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 1217,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1218,
							"src": "1401:9741:2",
							"usedErrors": [
								577,
								582,
								587,
								596,
								601,
								606
							],
							"usedEvents": [
								1229,
								1238
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1295
						]
					},
					"id": 1296,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1219,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1220,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1295,
							"linearizedBaseContracts": [
								1295
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1221,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1229,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1230,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1238,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 1239,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 1295,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1245,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1252,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1252,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1249,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 1295,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1253,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1262,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1255,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1262,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1259,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 1295,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1263,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1265,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1264,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1267,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1266,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 1295,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1273,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1282,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1280,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1282,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1279,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 1295,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1283,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1294,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1285,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1294,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1291,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 1295,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1296,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								1229,
								1238
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1295
						],
						"IERC20Metadata": [
							1321
						]
					},
					"id": 1322,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1297,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1299,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1322,
							"sourceUnit": 1296,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1298,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1295,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1301,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1295,
										"src": "305:6:4"
									},
									"id": 1302,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1300,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 1321,
							"linearizedBaseContracts": [
								1321,
								1295
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1303,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1308,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1305,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 1321,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 1321,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1315,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1320,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1317,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 1321,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1322,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								1229,
								1238
							]
						}
					],
					"src": "125:558:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1351
						]
					},
					"id": 1352,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1323,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1324,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1351,
							"linearizedBaseContracts": [
								1351
							],
							"name": "Context",
							"nameLocation": "642:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1332,
										"nodeType": "Block",
										"src": "718:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1329,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1328,
												"id": 1331,
												"nodeType": "Return",
												"src": "728:17:5"
											}
										]
									},
									"id": 1333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:5"
									},
									"returnParameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "709:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1326,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:5"
									},
									"scope": 1351,
									"src": "656:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1341,
										"nodeType": "Block",
										"src": "825:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1338,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1337,
												"id": 1340,
												"nodeType": "Return",
												"src": "835:15:5"
											}
										]
									},
									"id": 1342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:5"
									},
									"returnParameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1342,
												"src": "809:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1335,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:5"
									},
									"scope": 1351,
									"src": "758:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1349,
										"nodeType": "Block",
										"src": "935:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1346,
												"id": 1348,
												"nodeType": "Return",
												"src": "945:8:5"
											}
										]
									},
									"id": 1350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:5"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "926:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:5"
									},
									"scope": 1351,
									"src": "863:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1352,
							"src": "624:338:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:5"
				},
				"id": 5
			}
		}
	}
}